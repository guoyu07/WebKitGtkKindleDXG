# Makefile.in generated by automake 1.9.6 from Makefile.am.
# modules/other/gail/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# GTK+ - The GIMP Toolkit


srcdir = .
top_srcdir = ../../..

pkgdatadir = $(datadir)/gtk+
pkglibdir = $(libdir)/gtk+
pkgincludedir = $(includedir)/gtk+
top_builddir = ../../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /scratchbox/tools/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = arm-unknown-linux-gnu
host_triplet = arm-unknown-linux-gnu
DIST_COMMON = $(libgailinclude_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(top_srcdir)/Makefile.decl ChangeLog
subdir = modules/other/gail
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(moduledir)" \
	"$(DESTDIR)$(libgailincludedir)"
moduleLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(module_LTLIBRARIES)
am__DEPENDENCIES_1 =
libgail_la_DEPENDENCIES = $(top_builddir)/gdk-pixbuf/libgdk_pixbuf-$(GTK_API_VERSION).la \
	$(top_builddir)/gdk/$(gdktargetlib) \
	$(top_builddir)/gtk/$(gtktargetlib) \
	$(top_builddir)/modules/other/gail/libgail-util/libgailutil.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am__objects_1 = libgail_la-gail.lo libgail_la-gailadjustment.lo \
	libgail_la-gailarrow.lo libgail_la-gailbooleancell.lo \
	libgail_la-gailbox.lo libgail_la-gailbutton.lo \
	libgail_la-gailcalendar.lo libgail_la-gailcell.lo \
	libgail_la-gailcellparent.lo libgail_la-gailcheckmenuitem.lo \
	libgail_la-gailchecksubmenuitem.lo libgail_la-gailclist.lo \
	libgail_la-gailclistcell.lo libgail_la-gailcombo.lo \
	libgail_la-gailcombobox.lo libgail_la-gailcontainer.lo \
	libgail_la-gailcontainercell.lo libgail_la-gailentry.lo \
	libgail_la-gailexpander.lo libgail_la-gailframe.lo \
	libgail_la-gailimage.lo libgail_la-gailimagecell.lo \
	libgail_la-gailitem.lo libgail_la-gaillabel.lo \
	libgail_la-gaillist.lo libgail_la-gailmenu.lo \
	libgail_la-gailmenushell.lo libgail_la-gailmenuitem.lo \
	libgail_la-gailnotebook.lo libgail_la-gailnotebookpage.lo \
	libgail_la-gailobject.lo libgail_la-gailoptionmenu.lo \
	libgail_la-gailpaned.lo libgail_la-gailpixmap.lo \
	libgail_la-gailprogressbar.lo libgail_la-gailradiobutton.lo \
	libgail_la-gailradiomenuitem.lo \
	libgail_la-gailradiosubmenuitem.lo libgail_la-gailrange.lo \
	libgail_la-gailrenderercell.lo libgail_la-gailscale.lo \
	libgail_la-gailscalebutton.lo libgail_la-gailscrollbar.lo \
	libgail_la-gailscrolledwindow.lo libgail_la-gailseparator.lo \
	libgail_la-gailspinbutton.lo libgail_la-gailsubmenuitem.lo \
	libgail_la-gailstatusbar.lo libgail_la-gailtextcell.lo \
	libgail_la-gailtextview.lo libgail_la-gailtogglebutton.lo \
	libgail_la-gailtoplevel.lo libgail_la-gailtreeview.lo \
	libgail_la-gailutil.lo libgail_la-gailwidget.lo \
	libgail_la-gailwindow.lo
am__objects_2 =
am_libgail_la_OBJECTS = $(am__objects_1) $(am__objects_2) \
	$(am__objects_2)
libgail_la_OBJECTS = $(am_libgail_la_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libgail_la_SOURCES)
DIST_SOURCES = $(libgail_la_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
libgailincludeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(libgailinclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/tjw/tjKindle/gtk+-2.16.5/missing --run aclocal-1.7 
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/tjw/tjKindle/gtk+-2.16.5/missing --run tar
AR = ar
AS = as
ATK_PREFIX = /usr/local
AUTOCONF = ${SHELL} /home/tjw/tjKindle/gtk+-2.16.5/missing --run autoconf
AUTOHEADER = ${SHELL} /home/tjw/tjKindle/gtk+-2.16.5/missing --run autoheader
AUTOMAKE = ${SHELL} /home/tjw/tjKindle/gtk+-2.16.5/missing --run automake-1.7
AWK = gawk
BASE_DEPENDENCIES_CFLAGS = -pthread -D_REENTRANT -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/local/include/atk-1.0 -I/usr/local/include/pango-1.0 -I/usr/local/include/cairo -I/usr/local/include/pixman-1 -I/usr/local/include -I/usr/local/include/freetype2 -I/usr/local/include/directfb -I/usr/local/include/libpng14  
BASE_DEPENDENCIES_LIBS = -pthread -L/usr/local/lib -latk-1.0 -lpango-1.0 -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lrt -lglib-2.0 -lcairo  
BUILD_DYNAMIC_MODULES_FALSE = #
BUILD_DYNAMIC_MODULES_TRUE = 
BUILD_GDIPLUS_LOADERS_FALSE = 
BUILD_GDIPLUS_LOADERS_TRUE = #
CAIRO_PREFIX = /usr/local
CATALOGS =  af.gmo am.gmo ang.gmo ar.gmo as.gmo ast.gmo az.gmo az_IR.gmo be.gmo be@latin.gmo bg.gmo bn.gmo bn_IN.gmo br.gmo bs.gmo ca.gmo ca@valencia.gmo crh.gmo cs.gmo cy.gmo da.gmo de.gmo dz.gmo el.gmo en_CA.gmo en_GB.gmo eo.gmo es.gmo et.gmo eu.gmo fa.gmo fi.gmo fr.gmo ga.gmo gl.gmo gu.gmo he.gmo hi.gmo hr.gmo hu.gmo hy.gmo ia.gmo id.gmo io.gmo is.gmo it.gmo ja.gmo ka.gmo kn.gmo ko.gmo ku.gmo li.gmo lt.gmo lv.gmo mai.gmo mi.gmo mk.gmo ml.gmo mn.gmo mr.gmo ms.gmo nb.gmo ne.gmo nl.gmo nn.gmo nso.gmo oc.gmo or.gmo pa.gmo pl.gmo ps.gmo pt.gmo pt_BR.gmo ro.gmo ru.gmo rw.gmo si.gmo sk.gmo sl.gmo sq.gmo sr.gmo sr@latin.gmo sr@ije.gmo sv.gmo ta.gmo te.gmo th.gmo tk.gmo tr.gmo tt.gmo uk.gmo ur.gmo uz.gmo uz@cyrillic.gmo vi.gmo wa.gmo xh.gmo yi.gmo zh_CN.gmo zh_HK.gmo zh_TW.gmo
CATOBJEXT = .gmo
CC = gcc
CCAS = $(CC)
CCASFLAGS = $(CFLAGS)
CCDEPMODE = depmode=gcc3
CFLAGS = -DGDK_PIXBUF_DISABLE_DEPRECATED -O2 -march=armv6j -mtune=arm1136jf-s -pipe -fomit-frame-pointer -fno-stack-protector -Wall
CPP = gcc -E
CPPFLAGS =  -DG_DISABLE_SINGLE_INCLUDES -DATK_DISABLE_SINGLE_INCLUDES -DGDK_PIXBUF_DISABLE_SINGLE_INCLUDES -DGTK_DISABLE_SINGLE_INCLUDES
CROSS_COMPILING_FALSE = 
CROSS_COMPILING_TRUE = #
CUPS_API_MAJOR = 
CUPS_API_MINOR = 
CUPS_CFLAGS = 
CUPS_CONFIG = 
CUPS_LIBS = 
CXX = c++
CXXCPP = c++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -O2 -march=armv6j -mtune=arm1136jf-s -pipe -fomit-frame-pointer -fno-stack-protector
CYGPATH_W = echo
DATADIRNAME = share
DB2HTML = false
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DISABLE_EXPLICIT_DEPS_FALSE = #
DISABLE_EXPLICIT_DEPS_TRUE = 
DLLTOOL = dlltool
ECHO = @ECHO@
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /scratchbox/tools/bin/grep -E
ENABLE_GTK_DOC_FALSE = 
ENABLE_GTK_DOC_TRUE = #
ENABLE_MAN_FALSE = 
ENABLE_MAN_TRUE = #
EXEEXT = 
F77 = @F77@
FFLAGS = @FFLAGS@
GAIL_INET_LIBS =  
GAIL_LT_CURRENT_MINUS_AGE = 18
GAIL_LT_VERSION_INFO = 18:1:0
GDK_DEP_CFLAGS = -pthread -D_REENTRANT -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/local/include/pango-1.0 -I/usr/local/include/cairo -I/usr/local/include/pixman-1 -I/usr/local/include -I/usr/local/include/freetype2 -I/usr/local/include/directfb -I/usr/local/include/libpng14    -D_REENTRANT -pthread -I/usr/local/include/cairo -I/usr/local/include/directfb -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/local/include/pixman-1 -I/usr/local/include -I/usr/local/include/freetype2 -I/usr/local/include/libpng14   
GDK_DEP_LIBS = -L/usr/local/lib -lcairo -ldirectfb -lfusion -ldirect -lpthread -pthread -L/usr/local/lib -lpangocairo-1.0 -lpango-1.0 -lcairo -lgio-2.0 -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lrt -lglib-2.0 -lm
GDK_EXTRA_CFLAGS = -D_REENTRANT -pthread -I/usr/local/include/cairo -I/usr/local/include/directfb -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/local/include/pixman-1 -I/usr/local/include -I/usr/local/include/freetype2 -I/usr/local/include/libpng14   
GDK_EXTRA_LIBS = 
GDK_PACKAGES = pango pangocairo
GDK_PIXBUF_CSOURCE = 
GDK_PIXBUF_DEP_CFLAGS = -pthread -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include   
GDK_PIXBUF_DEP_LIBS = -pthread -L/usr/local/lib -lgio-2.0 -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lrt -lglib-2.0 -lm
GDK_PIXBUF_EXTRA_CFLAGS = 
GDK_PIXBUF_EXTRA_LIBS = 
GDK_PIXBUF_MAJOR = 2
GDK_PIXBUF_MICRO = 5
GDK_PIXBUF_MINOR = 16
GDK_PIXBUF_PACKAGES = gmodule-no-export-2.0 gobject-2.0 gio-2.0
GDK_PIXBUF_VERSION = 2.16.5
GDK_PIXBUF_XLIB_DEP_CFLAGS = -pthread -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include    
GDK_PIXBUF_XLIB_DEP_LIBS = -pthread -L/usr/local/lib -lgio-2.0 -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lrt -lglib-2.0 -lm
GDK_PIXBUF_XLIB_EXTRA_CFLAGS = 
GDK_PIXBUF_XLIB_EXTRA_LIBS = 
GDK_PIXBUF_XLIB_PACKAGES = 
GDK_WLIBS = 
GETTEXT_PACKAGE = gtk20
GLIB_GENMARSHAL = glib-genmarshal
GLIB_MKENUMS = glib-mkenums
GLIB_PREFIX = /usr/local
GMOFILES =  af.gmo am.gmo ang.gmo ar.gmo as.gmo ast.gmo az.gmo az_IR.gmo be.gmo be@latin.gmo bg.gmo bn.gmo bn_IN.gmo br.gmo bs.gmo ca.gmo ca@valencia.gmo crh.gmo cs.gmo cy.gmo da.gmo de.gmo dz.gmo el.gmo en_CA.gmo en_GB.gmo eo.gmo es.gmo et.gmo eu.gmo fa.gmo fi.gmo fr.gmo ga.gmo gl.gmo gu.gmo he.gmo hi.gmo hr.gmo hu.gmo hy.gmo ia.gmo id.gmo io.gmo is.gmo it.gmo ja.gmo ka.gmo kn.gmo ko.gmo ku.gmo li.gmo lt.gmo lv.gmo mai.gmo mi.gmo mk.gmo ml.gmo mn.gmo mr.gmo ms.gmo nb.gmo ne.gmo nl.gmo nn.gmo nso.gmo oc.gmo or.gmo pa.gmo pl.gmo ps.gmo pt.gmo pt_BR.gmo ro.gmo ru.gmo rw.gmo si.gmo sk.gmo sl.gmo sq.gmo sr.gmo sr@latin.gmo sr@ije.gmo sv.gmo ta.gmo te.gmo th.gmo tk.gmo tr.gmo tt.gmo uk.gmo ur.gmo uz.gmo uz@cyrillic.gmo vi.gmo wa.gmo xh.gmo yi.gmo zh_CN.gmo zh_HK.gmo zh_TW.gmo
GMSGFMT = /usr/local/bin/msgfmt
GREP = /scratchbox/tools/bin/grep
GTKDOC_CHECK = /usr/local/bin/gtkdoc-check
GTKDOC_MKPDF = @GTKDOC_MKPDF@
GTKDOC_REBASE = @GTKDOC_REBASE@
GTK_API_VERSION = 2.0
GTK_BINARY_AGE = 1605
GTK_BINARY_VERSION = 2.10.0
GTK_DEBUG_FLAGS = -DG_DISABLE_CAST_CHECKS
GTK_DEP_CFLAGS = -pthread -D_REENTRANT -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/local/include/pango-1.0 -I/usr/local/include/cairo -I/usr/local/include/pixman-1 -I/usr/local/include -I/usr/local/include/freetype2 -I/usr/local/include/directfb -I/usr/local/include/libpng14 -I/usr/local/include/atk-1.0    -D_REENTRANT -pthread -I/usr/local/include/cairo -I/usr/local/include/directfb -I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include -I/usr/local/include/pixman-1 -I/usr/local/include -I/usr/local/include/freetype2 -I/usr/local/include/libpng14    
GTK_DEP_LIBS = -pthread -L/usr/local/lib -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo -lgio-2.0 -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lrt -lglib-2.0 -lm
GTK_DOC_BUILD_HTML_FALSE = @GTK_DOC_BUILD_HTML_FALSE@
GTK_DOC_BUILD_HTML_TRUE = @GTK_DOC_BUILD_HTML_TRUE@
GTK_DOC_BUILD_PDF_FALSE = @GTK_DOC_BUILD_PDF_FALSE@
GTK_DOC_BUILD_PDF_TRUE = @GTK_DOC_BUILD_PDF_TRUE@
GTK_DOC_USE_LIBTOOL_FALSE = #
GTK_DOC_USE_LIBTOOL_TRUE = 
GTK_DOC_USE_REBASE_FALSE = @GTK_DOC_USE_REBASE_FALSE@
GTK_DOC_USE_REBASE_TRUE = @GTK_DOC_USE_REBASE_TRUE@
GTK_EXTRA_CFLAGS = 
GTK_EXTRA_LIBS = 
GTK_INTERFACE_AGE = 5
GTK_MAJOR_VERSION = 2
GTK_MICRO_VERSION = 5
GTK_MINOR_VERSION = 16
GTK_PACKAGES = atk cairo gio-2.0
GTK_UPDATE_ICON_CACHE = 
GTK_VERSION = 2.16.5
GTK_XIM_FLAGS = 
HAVE_CUPS_FALSE = 
HAVE_CUPS_TRUE = #
HAVE_CXX_FALSE = #
HAVE_CXX_TRUE = 
HAVE_DOCBOOK_FALSE = 
HAVE_DOCBOOK_TRUE = #
HAVE_HTTP_AUTHSTRING = 
HAVE_INCLUDED_IMMMODULES_FALSE = 
HAVE_INCLUDED_IMMMODULES_TRUE = #
HAVE_JASPER_FALSE = 
HAVE_JASPER_TRUE = #
HAVE_JPEG_FALSE = #
HAVE_JPEG_TRUE = 
HAVE_OBJC_FALSE = 
HAVE_OBJC_TRUE = #
HAVE_PAPI_CUPS_FALSE = 
HAVE_PAPI_CUPS_TRUE = #
HAVE_PAPI_FALSE = 
HAVE_PAPI_TRUE = #
HAVE_PNG_FALSE = #
HAVE_PNG_TRUE = 
HAVE_TIFF_FALSE = #
HAVE_TIFF_TRUE = 
HAVE_X11R6_FALSE = 
HAVE_X11R6_TRUE = #
HTML_DIR = ${datadir}/gtk-doc/html
INCLUDED_IMMODULE_DEFINE = 
INCLUDED_IMMODULE_OBJ = 
INCLUDED_LOADER_DEFINE = 
INCLUDED_LOADER_OBJ = 
INCLUDE_ANI_FALSE = 
INCLUDE_ANI_TRUE = #
INCLUDE_BMP_FALSE = 
INCLUDE_BMP_TRUE = #
INCLUDE_GDIPLUS_FALSE = 
INCLUDE_GDIPLUS_TRUE = #
INCLUDE_GIF_FALSE = 
INCLUDE_GIF_TRUE = #
INCLUDE_ICNS_FALSE = 
INCLUDE_ICNS_TRUE = #
INCLUDE_ICO_FALSE = 
INCLUDE_ICO_TRUE = #
INCLUDE_IM_AM_ET_FALSE = 
INCLUDE_IM_AM_ET_TRUE = #
INCLUDE_IM_CEDILLA_FALSE = 
INCLUDE_IM_CEDILLA_TRUE = #
INCLUDE_IM_CYRILLIC_TRANSLIT_FALSE = 
INCLUDE_IM_CYRILLIC_TRANSLIT_TRUE = #
INCLUDE_IM_IME_FALSE = 
INCLUDE_IM_IME_TRUE = #
INCLUDE_IM_INUKTITUT_FALSE = 
INCLUDE_IM_INUKTITUT_TRUE = #
INCLUDE_IM_IPA_FALSE = 
INCLUDE_IM_IPA_TRUE = #
INCLUDE_IM_MULTIPRESS_FALSE = 
INCLUDE_IM_MULTIPRESS_TRUE = #
INCLUDE_IM_THAI_FALSE = 
INCLUDE_IM_THAI_TRUE = #
INCLUDE_IM_TI_ER_FALSE = 
INCLUDE_IM_TI_ER_TRUE = #
INCLUDE_IM_TI_ET_FALSE = 
INCLUDE_IM_TI_ET_TRUE = #
INCLUDE_IM_VIQR_FALSE = 
INCLUDE_IM_VIQR_TRUE = #
INCLUDE_IM_XIM_FALSE = 
INCLUDE_IM_XIM_TRUE = #
INCLUDE_JASPER_FALSE = 
INCLUDE_JASPER_TRUE = #
INCLUDE_JPEG_FALSE = 
INCLUDE_JPEG_TRUE = #
INCLUDE_PCX_FALSE = 
INCLUDE_PCX_TRUE = #
INCLUDE_PNG_FALSE = 
INCLUDE_PNG_TRUE = #
INCLUDE_PNM_FALSE = 
INCLUDE_PNM_TRUE = #
INCLUDE_RAS_FALSE = 
INCLUDE_RAS_TRUE = #
INCLUDE_TGA_FALSE = 
INCLUDE_TGA_TRUE = #
INCLUDE_TIFF_FALSE = 
INCLUDE_TIFF_TRUE = #
INCLUDE_WBMP_FALSE = 
INCLUDE_WBMP_TRUE = #
INCLUDE_XBM_FALSE = 
INCLUDE_XBM_TRUE = #
INCLUDE_XPM_FALSE = 
INCLUDE_XPM_TRUE = #
INDENT = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
INSTOBJEXT = .mo
INTLLIBS = 
LDFLAGS = 
LIBJASPER = 
LIBJPEG = -ljpeg
LIBOBJS = 
LIBPNG = -lpng -lz
LIBS =  
LIBTIFF = -ltiff
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBTOOL_EXPORT_OPTIONS = -export-symbols-regex "^[^_].*"
LIB_EXE_MACHINE_FLAG = X86
LN_S = ln -s
LTLIBOBJS = 
LT_CURRENT_MINUS_AGE = 0
LT_VERSION_INFO = 1600:5:1600
MAINT = #
MAINTAINER_MODE_FALSE = 
MAINTAINER_MODE_TRUE = #
MAKEINFO = ${SHELL} /home/tjw/tjKindle/gtk+-2.16.5/missing --run makeinfo
MKINSTALLDIRS = ./mkinstalldirs
MSGFMT = /usr/local/bin/msgfmt
MSGFMT_OPTS = -c
MS_LIB_AVAILABLE_FALSE = 
MS_LIB_AVAILABLE_TRUE = #
NM = /scratchbox/compilers/bin/nm -B
OBJDUMP = objdump
OBJEXT = o
OS_LINUX_FALSE = #
OS_LINUX_TRUE = 
OS_UNIX_FALSE = #
OS_UNIX_TRUE = 
OS_WIN32_FALSE = 
OS_WIN32_TRUE = #
PACKAGE = gtk+
PACKAGE_BUGREPORT = http://bugzilla.gnome.org/enter_bug.cgi?product=gtk%2B
PACKAGE_NAME = gtk+
PACKAGE_STRING = gtk+ 2.16.5
PACKAGE_TARNAME = gtk+
PACKAGE_VERSION = 2.16.5
PANGO_PREFIX = /usr/local
PATH_SEPARATOR = :
PERL = /scratchbox/tools/bin/perl
PKG_CONFIG = /usr/local/bin/pkg-config
PLATFORM_WIN32_FALSE = 
PLATFORM_WIN32_TRUE = #
POFILES =  af.po am.po ang.po ar.po as.po ast.po az.po az_IR.po be.po be@latin.po bg.po bn.po bn_IN.po br.po bs.po ca.po ca@valencia.po crh.po cs.po cy.po da.po de.po dz.po el.po en_CA.po en_GB.po eo.po es.po et.po eu.po fa.po fi.po fr.po ga.po gl.po gu.po he.po hi.po hr.po hu.po hy.po ia.po id.po io.po is.po it.po ja.po ka.po kn.po ko.po ku.po li.po lt.po lv.po mai.po mi.po mk.po ml.po mn.po mr.po ms.po nb.po ne.po nl.po nn.po nso.po oc.po or.po pa.po pl.po ps.po pt.po pt_BR.po ro.po ru.po rw.po si.po sk.po sl.po sq.po sr.po sr@latin.po sr@ije.po sv.po ta.po te.po th.po tk.po tr.po tt.po uk.po ur.po uz.po uz@cyrillic.po vi.po wa.po xh.po yi.po zh_CN.po zh_HK.po zh_TW.po
POSUB = po
PO_IN_DATADIR_FALSE = 
PO_IN_DATADIR_TRUE = 
RANLIB = ranlib
REBUILD = 
REBUILD_PNGS = 
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
TEST_PRINT_BACKEND_FALSE = 
TEST_PRINT_BACKEND_TRUE = #
USE_DIRECTFB_FALSE = #
USE_DIRECTFB_TRUE = 
USE_MEDIALIB25_FALSE = 
USE_MEDIALIB25_TRUE = #
USE_MEDIALIB_FALSE = 
USE_MEDIALIB_TRUE = #
USE_MMX_FALSE = 
USE_MMX_TRUE = #
USE_NLS = yes
USE_QUARTZ_FALSE = 
USE_QUARTZ_TRUE = #
USE_WIN32_FALSE = 
USE_WIN32_TRUE = #
USE_X11_FALSE = 
USE_X11_TRUE = #
VERSION = 2.16.5
WINDRES = 
XGETTEXT = /usr/local/bin/xgettext
XINPUT_XFREE_FALSE = 
XINPUT_XFREE_TRUE = #
XMKMF = 
XMLCATALOG = 
XML_CATALOG_FILE = 
XSLTPROC = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS = 
ac_ct_CC = gcc
ac_ct_CXX = c++
ac_ct_F77 = @ac_ct_F77@
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = @am__tar@
am__untar = @am__untar@
bindir = ${exec_prefix}/bin
build = arm-unknown-linux-gnu
build_alias = 
build_cpu = arm
build_os = linux-gnu
build_vendor = unknown
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
gdktarget = directfb
gdktargetlib = libgdk-directfb-2.0.la
gtktargetlib = libgtk-directfb-2.0.la
host = arm-unknown-linux-gnu
host_alias = 
host_cpu = arm
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /home/tjw/tjKindle/gtk+-2.16.5/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = /usr/local/share/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = @mkdir_p@
ms_librarian = 
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
GTESTER = gtester		# in $PATH for non-GLIB packages
GTESTER_REPORT = gtester-report		# in $PATH for non-GLIB packages

# initialize variables for unconditional += appending
EXTRA_DIST = 
TEST_PROGS = 

### testing rules

# Xvfb based test rules
XVFB = Xvfb -ac -noreset -screen 0 800x600x16
XIDS = 101 102 103 104 105 106 107 197 199 211 223 227 293 307 308 309 310 311 \
   491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 \
   991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 \
  1008 1009 4703 4721 4723 4729 4733 4751 9973 9974 9975 9976 9977 9978 9979 \
  9980 9981 9982 9983 9984 9985 9986 9987 9988 9989 9990 9991 9992 9993 9994 \
  9995 9996 9997 9998 9999

SKIP_GDKTARGET = \
	test "$(gdktarget)" != "x11" \
	&& echo "Gtk+Tests:INFO: Skipping GUI tests for non-X11 target."

XVFB_START = \
	${XVFB} -help 2>/dev/null 1>&2 \
	&& XID=`for id in $(XIDS) ; do test -e /tmp/.X$$id-lock || { echo $$id; exit 0; }; done; exit 1` \
	&& { ${XVFB} :$$XID -screen 0 800x600x16 -nolisten tcp -auth /dev/null >/dev/null 2>&1 & \
	       trap "kill -15 $$! " 0 HUP INT QUIT TRAP USR1 PIPE TERM ; } \
	|| { echo "Gtk+Tests:ERROR: Failed to start Xvfb environment for X11 target tests."; exit 1; } \
	&& DISPLAY=:$$XID && export DISPLAY

SUBDIRS = libgail-util tests
#no_undefined = -no-undefined
moduledir = $(libdir)/gtk-2.0/modules
module_LTLIBRARIES = libgail.la
gail_c_sources = \
	gail-private-macros.h		\
	gail.c				\
	gailadjustment.c		\
	gailarrow.c			\
	gailbooleancell.c		\
	gailbox.c			\
	gailbutton.c			\
	gailcalendar.c			\
	gailcell.c			\
	gailcellparent.c		\
	gailcheckmenuitem.c		\
	gailchecksubmenuitem.c		\
	gailclist.c			\
	gailclistcell.c			\
	gailcombo.c			\
	gailcombobox.c			\
	gailcontainer.c			\
	gailcontainercell.c		\
	gailentry.c			\
	gailexpander.c			\
	gailframe.c			\
	gailimage.c			\
	gailimagecell.c			\
	gailitem.c			\
	gaillabel.c			\
	gaillist.c			\
	gailmenu.c			\
	gailmenushell.c			\
	gailmenuitem.c			\
	gailnotebook.c			\
	gailnotebookpage.c		\
	gailobject.c			\
	gailoptionmenu.c		\
	gailpaned.c			\
	gailpixmap.c			\
	gailprogressbar.c		\
	gailradiobutton.c		\
	gailradiomenuitem.c		\
	gailradiosubmenuitem.c		\
	gailrange.c			\
	gailrenderercell.c		\
	gailscale.c			\
	gailscalebutton.c		\
	gailscrollbar.c			\
	gailscrolledwindow.c		\
	gailseparator.c			\
	gailspinbutton.c		\
	gailsubmenuitem.c		\
	gailstatusbar.c			\
	gailtextcell.c			\
	gailtextview.c			\
	gailtogglebutton.c		\
	gailtoplevel.c			\
	gailtreeview.c			\
	gailutil.c			\
	gailwidget.c			\
	gailwindow.c

libgailincludedir = $(includedir)/gail-1.0/gail
gail_private_h_sources = \
	gail.h				\
	gailadjustment.h		\
	gailarrow.h			\
	gailbooleancell.h		\
	gailbox.h			\
	gailbutton.h			\
	gailcalendar.h			\
	gailcell.h			\
	gailcellparent.h		\
	gailcheckmenuitem.h		\
	gailchecksubmenuitem.h		\
	gailclist.h			\
	gailclistcell.h			\
	gailcombo.h			\
	gailcombobox.h			\
	gailcontainercell.h		\
	gailcontainer.h			\
	gailentry.h			\
	gailexpander.h			\
	gailfactory.h			\
	gailframe.h			\
	gailimage.h			\
	gailimagecell.h			\
	gailitem.h			\
	gaillabel.h			\
	gaillist.h			\
	gailmenu.h			\
	gailmenushell.h			\
	gailmenuitem.h			\
	gailnotebook.h			\
	gailnotebookpage.h		\
	gailobject.h			\
	gailoptionmenu.h		\
	gailpaned.h			\
	gailpixmap.h			\
	gailprogressbar.h		\
	gailradiobutton.h		\
	gailradiomenuitem.h		\
	gailradiosubmenuitem.h		\
	gailrange.h			\
	gailrenderercell.h		\
	gailscale.h			\
	gailscalebutton.h		\
	gailscrollbar.h			\
	gailscrolledwindow.h		\
	gailseparator.h			\
	gailspinbutton.h		\
	gailsubmenuitem.h		\
	gailstatusbar.h			\
	gailtextcell.h			\
	gailtextview.h			\
	gailtogglebutton.h		\
	gailtoplevel.h			\
	gailtreeview.h			\
	gailutil.h			\
	gailwindow.h

gail_public_h_sources = \
	gailwidget.h

libgail_la_SOURCES = \
	$(gail_c_sources)		\
	$(gail_public_h_sources)	\
	$(gail_private_h_sources)

libgailinclude_HEADERS = \
	$(gail_public_h_sources)

libgail_la_CPPFLAGS = \
	-I$(top_srcdir)			\
	-I$(top_srcdir)/modules/other	\
	-I$(top_srcdir)/gdk		\
	-I$(top_builddir)/gdk		\
	-I$(top_srcdir)/gtk		\
	-I$(top_builddir)/gtk		\
	-DGTK_VERSION=\"$(GTK_VERSION)\"\
	-DGDK_DISABLE_DEPRECATED	\
	-DGTK_DISABLE_DEPRECATED	\
	$(AM_CPPFLAGS)

libgail_la_CFLAGS = \
	$(GTK_DEP_CFLAGS)	\
	$(GTK_DEBUG_FLAGS)	\
	$(AM_CFLAGS)

libgail_la_LIBADD = \
	$(top_builddir)/gdk-pixbuf/libgdk_pixbuf-$(GTK_API_VERSION).la 	\
	$(top_builddir)/gdk/$(gdktargetlib) 				\
	$(top_builddir)/gtk/$(gtktargetlib)				\
	$(top_builddir)/modules/other/gail/libgail-util/libgailutil.la	\
	$(GTK_DEP_LIBS)							\
	$(INTLLIBS)

libgail_la_LDFLAGS = \
	-rpath $(moduledir) -module -avoid-version \
	$(no_undefined) \
        $(LDFLAGS)

all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(top_srcdir)/Makefile.decl $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  modules/other/gail/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  modules/other/gail/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-moduleLTLIBRARIES: $(module_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(moduledir)" || $(mkdir_p) "$(DESTDIR)$(moduledir)"
	@list='$(module_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(moduleLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(moduledir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(moduleLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(moduledir)/$$f"; \
	  else :; fi; \
	done

uninstall-moduleLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(module_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(moduledir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(moduledir)/$$p"; \
	done

clean-moduleLTLIBRARIES:
	-test -z "$(module_LTLIBRARIES)" || rm -f $(module_LTLIBRARIES)
	@list='$(module_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libgail.la: $(libgail_la_OBJECTS) $(libgail_la_DEPENDENCIES) 
	$(LINK) -rpath $(moduledir) $(libgail_la_LDFLAGS) $(libgail_la_OBJECTS) $(libgail_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libgail_la-gail.Plo
include ./$(DEPDIR)/libgail_la-gailadjustment.Plo
include ./$(DEPDIR)/libgail_la-gailarrow.Plo
include ./$(DEPDIR)/libgail_la-gailbooleancell.Plo
include ./$(DEPDIR)/libgail_la-gailbox.Plo
include ./$(DEPDIR)/libgail_la-gailbutton.Plo
include ./$(DEPDIR)/libgail_la-gailcalendar.Plo
include ./$(DEPDIR)/libgail_la-gailcell.Plo
include ./$(DEPDIR)/libgail_la-gailcellparent.Plo
include ./$(DEPDIR)/libgail_la-gailcheckmenuitem.Plo
include ./$(DEPDIR)/libgail_la-gailchecksubmenuitem.Plo
include ./$(DEPDIR)/libgail_la-gailclist.Plo
include ./$(DEPDIR)/libgail_la-gailclistcell.Plo
include ./$(DEPDIR)/libgail_la-gailcombo.Plo
include ./$(DEPDIR)/libgail_la-gailcombobox.Plo
include ./$(DEPDIR)/libgail_la-gailcontainer.Plo
include ./$(DEPDIR)/libgail_la-gailcontainercell.Plo
include ./$(DEPDIR)/libgail_la-gailentry.Plo
include ./$(DEPDIR)/libgail_la-gailexpander.Plo
include ./$(DEPDIR)/libgail_la-gailframe.Plo
include ./$(DEPDIR)/libgail_la-gailimage.Plo
include ./$(DEPDIR)/libgail_la-gailimagecell.Plo
include ./$(DEPDIR)/libgail_la-gailitem.Plo
include ./$(DEPDIR)/libgail_la-gaillabel.Plo
include ./$(DEPDIR)/libgail_la-gaillist.Plo
include ./$(DEPDIR)/libgail_la-gailmenu.Plo
include ./$(DEPDIR)/libgail_la-gailmenuitem.Plo
include ./$(DEPDIR)/libgail_la-gailmenushell.Plo
include ./$(DEPDIR)/libgail_la-gailnotebook.Plo
include ./$(DEPDIR)/libgail_la-gailnotebookpage.Plo
include ./$(DEPDIR)/libgail_la-gailobject.Plo
include ./$(DEPDIR)/libgail_la-gailoptionmenu.Plo
include ./$(DEPDIR)/libgail_la-gailpaned.Plo
include ./$(DEPDIR)/libgail_la-gailpixmap.Plo
include ./$(DEPDIR)/libgail_la-gailprogressbar.Plo
include ./$(DEPDIR)/libgail_la-gailradiobutton.Plo
include ./$(DEPDIR)/libgail_la-gailradiomenuitem.Plo
include ./$(DEPDIR)/libgail_la-gailradiosubmenuitem.Plo
include ./$(DEPDIR)/libgail_la-gailrange.Plo
include ./$(DEPDIR)/libgail_la-gailrenderercell.Plo
include ./$(DEPDIR)/libgail_la-gailscale.Plo
include ./$(DEPDIR)/libgail_la-gailscalebutton.Plo
include ./$(DEPDIR)/libgail_la-gailscrollbar.Plo
include ./$(DEPDIR)/libgail_la-gailscrolledwindow.Plo
include ./$(DEPDIR)/libgail_la-gailseparator.Plo
include ./$(DEPDIR)/libgail_la-gailspinbutton.Plo
include ./$(DEPDIR)/libgail_la-gailstatusbar.Plo
include ./$(DEPDIR)/libgail_la-gailsubmenuitem.Plo
include ./$(DEPDIR)/libgail_la-gailtextcell.Plo
include ./$(DEPDIR)/libgail_la-gailtextview.Plo
include ./$(DEPDIR)/libgail_la-gailtogglebutton.Plo
include ./$(DEPDIR)/libgail_la-gailtoplevel.Plo
include ./$(DEPDIR)/libgail_la-gailtreeview.Plo
include ./$(DEPDIR)/libgail_la-gailutil.Plo
include ./$(DEPDIR)/libgail_la-gailwidget.Plo
include ./$(DEPDIR)/libgail_la-gailwindow.Plo

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libgail_la-gail.lo: gail.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gail.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gail.Tpo" -c -o libgail_la-gail.lo `test -f 'gail.c' || echo '$(srcdir)/'`gail.c; \
	then mv -f "$(DEPDIR)/libgail_la-gail.Tpo" "$(DEPDIR)/libgail_la-gail.Plo"; else rm -f "$(DEPDIR)/libgail_la-gail.Tpo"; exit 1; fi
#	source='gail.c' object='libgail_la-gail.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gail.lo `test -f 'gail.c' || echo '$(srcdir)/'`gail.c

libgail_la-gailadjustment.lo: gailadjustment.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailadjustment.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailadjustment.Tpo" -c -o libgail_la-gailadjustment.lo `test -f 'gailadjustment.c' || echo '$(srcdir)/'`gailadjustment.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailadjustment.Tpo" "$(DEPDIR)/libgail_la-gailadjustment.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailadjustment.Tpo"; exit 1; fi
#	source='gailadjustment.c' object='libgail_la-gailadjustment.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailadjustment.lo `test -f 'gailadjustment.c' || echo '$(srcdir)/'`gailadjustment.c

libgail_la-gailarrow.lo: gailarrow.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailarrow.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailarrow.Tpo" -c -o libgail_la-gailarrow.lo `test -f 'gailarrow.c' || echo '$(srcdir)/'`gailarrow.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailarrow.Tpo" "$(DEPDIR)/libgail_la-gailarrow.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailarrow.Tpo"; exit 1; fi
#	source='gailarrow.c' object='libgail_la-gailarrow.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailarrow.lo `test -f 'gailarrow.c' || echo '$(srcdir)/'`gailarrow.c

libgail_la-gailbooleancell.lo: gailbooleancell.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailbooleancell.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailbooleancell.Tpo" -c -o libgail_la-gailbooleancell.lo `test -f 'gailbooleancell.c' || echo '$(srcdir)/'`gailbooleancell.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailbooleancell.Tpo" "$(DEPDIR)/libgail_la-gailbooleancell.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailbooleancell.Tpo"; exit 1; fi
#	source='gailbooleancell.c' object='libgail_la-gailbooleancell.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailbooleancell.lo `test -f 'gailbooleancell.c' || echo '$(srcdir)/'`gailbooleancell.c

libgail_la-gailbox.lo: gailbox.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailbox.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailbox.Tpo" -c -o libgail_la-gailbox.lo `test -f 'gailbox.c' || echo '$(srcdir)/'`gailbox.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailbox.Tpo" "$(DEPDIR)/libgail_la-gailbox.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailbox.Tpo"; exit 1; fi
#	source='gailbox.c' object='libgail_la-gailbox.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailbox.lo `test -f 'gailbox.c' || echo '$(srcdir)/'`gailbox.c

libgail_la-gailbutton.lo: gailbutton.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailbutton.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailbutton.Tpo" -c -o libgail_la-gailbutton.lo `test -f 'gailbutton.c' || echo '$(srcdir)/'`gailbutton.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailbutton.Tpo" "$(DEPDIR)/libgail_la-gailbutton.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailbutton.Tpo"; exit 1; fi
#	source='gailbutton.c' object='libgail_la-gailbutton.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailbutton.lo `test -f 'gailbutton.c' || echo '$(srcdir)/'`gailbutton.c

libgail_la-gailcalendar.lo: gailcalendar.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailcalendar.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailcalendar.Tpo" -c -o libgail_la-gailcalendar.lo `test -f 'gailcalendar.c' || echo '$(srcdir)/'`gailcalendar.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailcalendar.Tpo" "$(DEPDIR)/libgail_la-gailcalendar.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailcalendar.Tpo"; exit 1; fi
#	source='gailcalendar.c' object='libgail_la-gailcalendar.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailcalendar.lo `test -f 'gailcalendar.c' || echo '$(srcdir)/'`gailcalendar.c

libgail_la-gailcell.lo: gailcell.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailcell.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailcell.Tpo" -c -o libgail_la-gailcell.lo `test -f 'gailcell.c' || echo '$(srcdir)/'`gailcell.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailcell.Tpo" "$(DEPDIR)/libgail_la-gailcell.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailcell.Tpo"; exit 1; fi
#	source='gailcell.c' object='libgail_la-gailcell.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailcell.lo `test -f 'gailcell.c' || echo '$(srcdir)/'`gailcell.c

libgail_la-gailcellparent.lo: gailcellparent.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailcellparent.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailcellparent.Tpo" -c -o libgail_la-gailcellparent.lo `test -f 'gailcellparent.c' || echo '$(srcdir)/'`gailcellparent.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailcellparent.Tpo" "$(DEPDIR)/libgail_la-gailcellparent.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailcellparent.Tpo"; exit 1; fi
#	source='gailcellparent.c' object='libgail_la-gailcellparent.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailcellparent.lo `test -f 'gailcellparent.c' || echo '$(srcdir)/'`gailcellparent.c

libgail_la-gailcheckmenuitem.lo: gailcheckmenuitem.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailcheckmenuitem.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailcheckmenuitem.Tpo" -c -o libgail_la-gailcheckmenuitem.lo `test -f 'gailcheckmenuitem.c' || echo '$(srcdir)/'`gailcheckmenuitem.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailcheckmenuitem.Tpo" "$(DEPDIR)/libgail_la-gailcheckmenuitem.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailcheckmenuitem.Tpo"; exit 1; fi
#	source='gailcheckmenuitem.c' object='libgail_la-gailcheckmenuitem.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailcheckmenuitem.lo `test -f 'gailcheckmenuitem.c' || echo '$(srcdir)/'`gailcheckmenuitem.c

libgail_la-gailchecksubmenuitem.lo: gailchecksubmenuitem.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailchecksubmenuitem.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailchecksubmenuitem.Tpo" -c -o libgail_la-gailchecksubmenuitem.lo `test -f 'gailchecksubmenuitem.c' || echo '$(srcdir)/'`gailchecksubmenuitem.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailchecksubmenuitem.Tpo" "$(DEPDIR)/libgail_la-gailchecksubmenuitem.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailchecksubmenuitem.Tpo"; exit 1; fi
#	source='gailchecksubmenuitem.c' object='libgail_la-gailchecksubmenuitem.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailchecksubmenuitem.lo `test -f 'gailchecksubmenuitem.c' || echo '$(srcdir)/'`gailchecksubmenuitem.c

libgail_la-gailclist.lo: gailclist.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailclist.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailclist.Tpo" -c -o libgail_la-gailclist.lo `test -f 'gailclist.c' || echo '$(srcdir)/'`gailclist.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailclist.Tpo" "$(DEPDIR)/libgail_la-gailclist.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailclist.Tpo"; exit 1; fi
#	source='gailclist.c' object='libgail_la-gailclist.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailclist.lo `test -f 'gailclist.c' || echo '$(srcdir)/'`gailclist.c

libgail_la-gailclistcell.lo: gailclistcell.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailclistcell.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailclistcell.Tpo" -c -o libgail_la-gailclistcell.lo `test -f 'gailclistcell.c' || echo '$(srcdir)/'`gailclistcell.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailclistcell.Tpo" "$(DEPDIR)/libgail_la-gailclistcell.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailclistcell.Tpo"; exit 1; fi
#	source='gailclistcell.c' object='libgail_la-gailclistcell.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailclistcell.lo `test -f 'gailclistcell.c' || echo '$(srcdir)/'`gailclistcell.c

libgail_la-gailcombo.lo: gailcombo.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailcombo.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailcombo.Tpo" -c -o libgail_la-gailcombo.lo `test -f 'gailcombo.c' || echo '$(srcdir)/'`gailcombo.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailcombo.Tpo" "$(DEPDIR)/libgail_la-gailcombo.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailcombo.Tpo"; exit 1; fi
#	source='gailcombo.c' object='libgail_la-gailcombo.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailcombo.lo `test -f 'gailcombo.c' || echo '$(srcdir)/'`gailcombo.c

libgail_la-gailcombobox.lo: gailcombobox.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailcombobox.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailcombobox.Tpo" -c -o libgail_la-gailcombobox.lo `test -f 'gailcombobox.c' || echo '$(srcdir)/'`gailcombobox.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailcombobox.Tpo" "$(DEPDIR)/libgail_la-gailcombobox.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailcombobox.Tpo"; exit 1; fi
#	source='gailcombobox.c' object='libgail_la-gailcombobox.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailcombobox.lo `test -f 'gailcombobox.c' || echo '$(srcdir)/'`gailcombobox.c

libgail_la-gailcontainer.lo: gailcontainer.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailcontainer.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailcontainer.Tpo" -c -o libgail_la-gailcontainer.lo `test -f 'gailcontainer.c' || echo '$(srcdir)/'`gailcontainer.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailcontainer.Tpo" "$(DEPDIR)/libgail_la-gailcontainer.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailcontainer.Tpo"; exit 1; fi
#	source='gailcontainer.c' object='libgail_la-gailcontainer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailcontainer.lo `test -f 'gailcontainer.c' || echo '$(srcdir)/'`gailcontainer.c

libgail_la-gailcontainercell.lo: gailcontainercell.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailcontainercell.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailcontainercell.Tpo" -c -o libgail_la-gailcontainercell.lo `test -f 'gailcontainercell.c' || echo '$(srcdir)/'`gailcontainercell.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailcontainercell.Tpo" "$(DEPDIR)/libgail_la-gailcontainercell.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailcontainercell.Tpo"; exit 1; fi
#	source='gailcontainercell.c' object='libgail_la-gailcontainercell.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailcontainercell.lo `test -f 'gailcontainercell.c' || echo '$(srcdir)/'`gailcontainercell.c

libgail_la-gailentry.lo: gailentry.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailentry.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailentry.Tpo" -c -o libgail_la-gailentry.lo `test -f 'gailentry.c' || echo '$(srcdir)/'`gailentry.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailentry.Tpo" "$(DEPDIR)/libgail_la-gailentry.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailentry.Tpo"; exit 1; fi
#	source='gailentry.c' object='libgail_la-gailentry.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailentry.lo `test -f 'gailentry.c' || echo '$(srcdir)/'`gailentry.c

libgail_la-gailexpander.lo: gailexpander.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailexpander.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailexpander.Tpo" -c -o libgail_la-gailexpander.lo `test -f 'gailexpander.c' || echo '$(srcdir)/'`gailexpander.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailexpander.Tpo" "$(DEPDIR)/libgail_la-gailexpander.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailexpander.Tpo"; exit 1; fi
#	source='gailexpander.c' object='libgail_la-gailexpander.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailexpander.lo `test -f 'gailexpander.c' || echo '$(srcdir)/'`gailexpander.c

libgail_la-gailframe.lo: gailframe.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailframe.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailframe.Tpo" -c -o libgail_la-gailframe.lo `test -f 'gailframe.c' || echo '$(srcdir)/'`gailframe.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailframe.Tpo" "$(DEPDIR)/libgail_la-gailframe.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailframe.Tpo"; exit 1; fi
#	source='gailframe.c' object='libgail_la-gailframe.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailframe.lo `test -f 'gailframe.c' || echo '$(srcdir)/'`gailframe.c

libgail_la-gailimage.lo: gailimage.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailimage.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailimage.Tpo" -c -o libgail_la-gailimage.lo `test -f 'gailimage.c' || echo '$(srcdir)/'`gailimage.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailimage.Tpo" "$(DEPDIR)/libgail_la-gailimage.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailimage.Tpo"; exit 1; fi
#	source='gailimage.c' object='libgail_la-gailimage.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailimage.lo `test -f 'gailimage.c' || echo '$(srcdir)/'`gailimage.c

libgail_la-gailimagecell.lo: gailimagecell.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailimagecell.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailimagecell.Tpo" -c -o libgail_la-gailimagecell.lo `test -f 'gailimagecell.c' || echo '$(srcdir)/'`gailimagecell.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailimagecell.Tpo" "$(DEPDIR)/libgail_la-gailimagecell.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailimagecell.Tpo"; exit 1; fi
#	source='gailimagecell.c' object='libgail_la-gailimagecell.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailimagecell.lo `test -f 'gailimagecell.c' || echo '$(srcdir)/'`gailimagecell.c

libgail_la-gailitem.lo: gailitem.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailitem.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailitem.Tpo" -c -o libgail_la-gailitem.lo `test -f 'gailitem.c' || echo '$(srcdir)/'`gailitem.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailitem.Tpo" "$(DEPDIR)/libgail_la-gailitem.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailitem.Tpo"; exit 1; fi
#	source='gailitem.c' object='libgail_la-gailitem.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailitem.lo `test -f 'gailitem.c' || echo '$(srcdir)/'`gailitem.c

libgail_la-gaillabel.lo: gaillabel.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gaillabel.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gaillabel.Tpo" -c -o libgail_la-gaillabel.lo `test -f 'gaillabel.c' || echo '$(srcdir)/'`gaillabel.c; \
	then mv -f "$(DEPDIR)/libgail_la-gaillabel.Tpo" "$(DEPDIR)/libgail_la-gaillabel.Plo"; else rm -f "$(DEPDIR)/libgail_la-gaillabel.Tpo"; exit 1; fi
#	source='gaillabel.c' object='libgail_la-gaillabel.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gaillabel.lo `test -f 'gaillabel.c' || echo '$(srcdir)/'`gaillabel.c

libgail_la-gaillist.lo: gaillist.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gaillist.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gaillist.Tpo" -c -o libgail_la-gaillist.lo `test -f 'gaillist.c' || echo '$(srcdir)/'`gaillist.c; \
	then mv -f "$(DEPDIR)/libgail_la-gaillist.Tpo" "$(DEPDIR)/libgail_la-gaillist.Plo"; else rm -f "$(DEPDIR)/libgail_la-gaillist.Tpo"; exit 1; fi
#	source='gaillist.c' object='libgail_la-gaillist.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gaillist.lo `test -f 'gaillist.c' || echo '$(srcdir)/'`gaillist.c

libgail_la-gailmenu.lo: gailmenu.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailmenu.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailmenu.Tpo" -c -o libgail_la-gailmenu.lo `test -f 'gailmenu.c' || echo '$(srcdir)/'`gailmenu.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailmenu.Tpo" "$(DEPDIR)/libgail_la-gailmenu.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailmenu.Tpo"; exit 1; fi
#	source='gailmenu.c' object='libgail_la-gailmenu.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailmenu.lo `test -f 'gailmenu.c' || echo '$(srcdir)/'`gailmenu.c

libgail_la-gailmenushell.lo: gailmenushell.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailmenushell.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailmenushell.Tpo" -c -o libgail_la-gailmenushell.lo `test -f 'gailmenushell.c' || echo '$(srcdir)/'`gailmenushell.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailmenushell.Tpo" "$(DEPDIR)/libgail_la-gailmenushell.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailmenushell.Tpo"; exit 1; fi
#	source='gailmenushell.c' object='libgail_la-gailmenushell.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailmenushell.lo `test -f 'gailmenushell.c' || echo '$(srcdir)/'`gailmenushell.c

libgail_la-gailmenuitem.lo: gailmenuitem.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailmenuitem.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailmenuitem.Tpo" -c -o libgail_la-gailmenuitem.lo `test -f 'gailmenuitem.c' || echo '$(srcdir)/'`gailmenuitem.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailmenuitem.Tpo" "$(DEPDIR)/libgail_la-gailmenuitem.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailmenuitem.Tpo"; exit 1; fi
#	source='gailmenuitem.c' object='libgail_la-gailmenuitem.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailmenuitem.lo `test -f 'gailmenuitem.c' || echo '$(srcdir)/'`gailmenuitem.c

libgail_la-gailnotebook.lo: gailnotebook.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailnotebook.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailnotebook.Tpo" -c -o libgail_la-gailnotebook.lo `test -f 'gailnotebook.c' || echo '$(srcdir)/'`gailnotebook.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailnotebook.Tpo" "$(DEPDIR)/libgail_la-gailnotebook.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailnotebook.Tpo"; exit 1; fi
#	source='gailnotebook.c' object='libgail_la-gailnotebook.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailnotebook.lo `test -f 'gailnotebook.c' || echo '$(srcdir)/'`gailnotebook.c

libgail_la-gailnotebookpage.lo: gailnotebookpage.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailnotebookpage.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailnotebookpage.Tpo" -c -o libgail_la-gailnotebookpage.lo `test -f 'gailnotebookpage.c' || echo '$(srcdir)/'`gailnotebookpage.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailnotebookpage.Tpo" "$(DEPDIR)/libgail_la-gailnotebookpage.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailnotebookpage.Tpo"; exit 1; fi
#	source='gailnotebookpage.c' object='libgail_la-gailnotebookpage.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailnotebookpage.lo `test -f 'gailnotebookpage.c' || echo '$(srcdir)/'`gailnotebookpage.c

libgail_la-gailobject.lo: gailobject.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailobject.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailobject.Tpo" -c -o libgail_la-gailobject.lo `test -f 'gailobject.c' || echo '$(srcdir)/'`gailobject.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailobject.Tpo" "$(DEPDIR)/libgail_la-gailobject.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailobject.Tpo"; exit 1; fi
#	source='gailobject.c' object='libgail_la-gailobject.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailobject.lo `test -f 'gailobject.c' || echo '$(srcdir)/'`gailobject.c

libgail_la-gailoptionmenu.lo: gailoptionmenu.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailoptionmenu.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailoptionmenu.Tpo" -c -o libgail_la-gailoptionmenu.lo `test -f 'gailoptionmenu.c' || echo '$(srcdir)/'`gailoptionmenu.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailoptionmenu.Tpo" "$(DEPDIR)/libgail_la-gailoptionmenu.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailoptionmenu.Tpo"; exit 1; fi
#	source='gailoptionmenu.c' object='libgail_la-gailoptionmenu.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailoptionmenu.lo `test -f 'gailoptionmenu.c' || echo '$(srcdir)/'`gailoptionmenu.c

libgail_la-gailpaned.lo: gailpaned.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailpaned.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailpaned.Tpo" -c -o libgail_la-gailpaned.lo `test -f 'gailpaned.c' || echo '$(srcdir)/'`gailpaned.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailpaned.Tpo" "$(DEPDIR)/libgail_la-gailpaned.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailpaned.Tpo"; exit 1; fi
#	source='gailpaned.c' object='libgail_la-gailpaned.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailpaned.lo `test -f 'gailpaned.c' || echo '$(srcdir)/'`gailpaned.c

libgail_la-gailpixmap.lo: gailpixmap.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailpixmap.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailpixmap.Tpo" -c -o libgail_la-gailpixmap.lo `test -f 'gailpixmap.c' || echo '$(srcdir)/'`gailpixmap.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailpixmap.Tpo" "$(DEPDIR)/libgail_la-gailpixmap.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailpixmap.Tpo"; exit 1; fi
#	source='gailpixmap.c' object='libgail_la-gailpixmap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailpixmap.lo `test -f 'gailpixmap.c' || echo '$(srcdir)/'`gailpixmap.c

libgail_la-gailprogressbar.lo: gailprogressbar.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailprogressbar.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailprogressbar.Tpo" -c -o libgail_la-gailprogressbar.lo `test -f 'gailprogressbar.c' || echo '$(srcdir)/'`gailprogressbar.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailprogressbar.Tpo" "$(DEPDIR)/libgail_la-gailprogressbar.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailprogressbar.Tpo"; exit 1; fi
#	source='gailprogressbar.c' object='libgail_la-gailprogressbar.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailprogressbar.lo `test -f 'gailprogressbar.c' || echo '$(srcdir)/'`gailprogressbar.c

libgail_la-gailradiobutton.lo: gailradiobutton.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailradiobutton.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailradiobutton.Tpo" -c -o libgail_la-gailradiobutton.lo `test -f 'gailradiobutton.c' || echo '$(srcdir)/'`gailradiobutton.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailradiobutton.Tpo" "$(DEPDIR)/libgail_la-gailradiobutton.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailradiobutton.Tpo"; exit 1; fi
#	source='gailradiobutton.c' object='libgail_la-gailradiobutton.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailradiobutton.lo `test -f 'gailradiobutton.c' || echo '$(srcdir)/'`gailradiobutton.c

libgail_la-gailradiomenuitem.lo: gailradiomenuitem.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailradiomenuitem.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailradiomenuitem.Tpo" -c -o libgail_la-gailradiomenuitem.lo `test -f 'gailradiomenuitem.c' || echo '$(srcdir)/'`gailradiomenuitem.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailradiomenuitem.Tpo" "$(DEPDIR)/libgail_la-gailradiomenuitem.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailradiomenuitem.Tpo"; exit 1; fi
#	source='gailradiomenuitem.c' object='libgail_la-gailradiomenuitem.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailradiomenuitem.lo `test -f 'gailradiomenuitem.c' || echo '$(srcdir)/'`gailradiomenuitem.c

libgail_la-gailradiosubmenuitem.lo: gailradiosubmenuitem.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailradiosubmenuitem.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailradiosubmenuitem.Tpo" -c -o libgail_la-gailradiosubmenuitem.lo `test -f 'gailradiosubmenuitem.c' || echo '$(srcdir)/'`gailradiosubmenuitem.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailradiosubmenuitem.Tpo" "$(DEPDIR)/libgail_la-gailradiosubmenuitem.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailradiosubmenuitem.Tpo"; exit 1; fi
#	source='gailradiosubmenuitem.c' object='libgail_la-gailradiosubmenuitem.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailradiosubmenuitem.lo `test -f 'gailradiosubmenuitem.c' || echo '$(srcdir)/'`gailradiosubmenuitem.c

libgail_la-gailrange.lo: gailrange.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailrange.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailrange.Tpo" -c -o libgail_la-gailrange.lo `test -f 'gailrange.c' || echo '$(srcdir)/'`gailrange.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailrange.Tpo" "$(DEPDIR)/libgail_la-gailrange.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailrange.Tpo"; exit 1; fi
#	source='gailrange.c' object='libgail_la-gailrange.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailrange.lo `test -f 'gailrange.c' || echo '$(srcdir)/'`gailrange.c

libgail_la-gailrenderercell.lo: gailrenderercell.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailrenderercell.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailrenderercell.Tpo" -c -o libgail_la-gailrenderercell.lo `test -f 'gailrenderercell.c' || echo '$(srcdir)/'`gailrenderercell.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailrenderercell.Tpo" "$(DEPDIR)/libgail_la-gailrenderercell.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailrenderercell.Tpo"; exit 1; fi
#	source='gailrenderercell.c' object='libgail_la-gailrenderercell.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailrenderercell.lo `test -f 'gailrenderercell.c' || echo '$(srcdir)/'`gailrenderercell.c

libgail_la-gailscale.lo: gailscale.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailscale.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailscale.Tpo" -c -o libgail_la-gailscale.lo `test -f 'gailscale.c' || echo '$(srcdir)/'`gailscale.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailscale.Tpo" "$(DEPDIR)/libgail_la-gailscale.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailscale.Tpo"; exit 1; fi
#	source='gailscale.c' object='libgail_la-gailscale.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailscale.lo `test -f 'gailscale.c' || echo '$(srcdir)/'`gailscale.c

libgail_la-gailscalebutton.lo: gailscalebutton.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailscalebutton.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailscalebutton.Tpo" -c -o libgail_la-gailscalebutton.lo `test -f 'gailscalebutton.c' || echo '$(srcdir)/'`gailscalebutton.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailscalebutton.Tpo" "$(DEPDIR)/libgail_la-gailscalebutton.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailscalebutton.Tpo"; exit 1; fi
#	source='gailscalebutton.c' object='libgail_la-gailscalebutton.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailscalebutton.lo `test -f 'gailscalebutton.c' || echo '$(srcdir)/'`gailscalebutton.c

libgail_la-gailscrollbar.lo: gailscrollbar.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailscrollbar.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailscrollbar.Tpo" -c -o libgail_la-gailscrollbar.lo `test -f 'gailscrollbar.c' || echo '$(srcdir)/'`gailscrollbar.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailscrollbar.Tpo" "$(DEPDIR)/libgail_la-gailscrollbar.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailscrollbar.Tpo"; exit 1; fi
#	source='gailscrollbar.c' object='libgail_la-gailscrollbar.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailscrollbar.lo `test -f 'gailscrollbar.c' || echo '$(srcdir)/'`gailscrollbar.c

libgail_la-gailscrolledwindow.lo: gailscrolledwindow.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailscrolledwindow.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailscrolledwindow.Tpo" -c -o libgail_la-gailscrolledwindow.lo `test -f 'gailscrolledwindow.c' || echo '$(srcdir)/'`gailscrolledwindow.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailscrolledwindow.Tpo" "$(DEPDIR)/libgail_la-gailscrolledwindow.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailscrolledwindow.Tpo"; exit 1; fi
#	source='gailscrolledwindow.c' object='libgail_la-gailscrolledwindow.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailscrolledwindow.lo `test -f 'gailscrolledwindow.c' || echo '$(srcdir)/'`gailscrolledwindow.c

libgail_la-gailseparator.lo: gailseparator.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailseparator.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailseparator.Tpo" -c -o libgail_la-gailseparator.lo `test -f 'gailseparator.c' || echo '$(srcdir)/'`gailseparator.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailseparator.Tpo" "$(DEPDIR)/libgail_la-gailseparator.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailseparator.Tpo"; exit 1; fi
#	source='gailseparator.c' object='libgail_la-gailseparator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailseparator.lo `test -f 'gailseparator.c' || echo '$(srcdir)/'`gailseparator.c

libgail_la-gailspinbutton.lo: gailspinbutton.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailspinbutton.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailspinbutton.Tpo" -c -o libgail_la-gailspinbutton.lo `test -f 'gailspinbutton.c' || echo '$(srcdir)/'`gailspinbutton.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailspinbutton.Tpo" "$(DEPDIR)/libgail_la-gailspinbutton.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailspinbutton.Tpo"; exit 1; fi
#	source='gailspinbutton.c' object='libgail_la-gailspinbutton.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailspinbutton.lo `test -f 'gailspinbutton.c' || echo '$(srcdir)/'`gailspinbutton.c

libgail_la-gailsubmenuitem.lo: gailsubmenuitem.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailsubmenuitem.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailsubmenuitem.Tpo" -c -o libgail_la-gailsubmenuitem.lo `test -f 'gailsubmenuitem.c' || echo '$(srcdir)/'`gailsubmenuitem.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailsubmenuitem.Tpo" "$(DEPDIR)/libgail_la-gailsubmenuitem.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailsubmenuitem.Tpo"; exit 1; fi
#	source='gailsubmenuitem.c' object='libgail_la-gailsubmenuitem.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailsubmenuitem.lo `test -f 'gailsubmenuitem.c' || echo '$(srcdir)/'`gailsubmenuitem.c

libgail_la-gailstatusbar.lo: gailstatusbar.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailstatusbar.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailstatusbar.Tpo" -c -o libgail_la-gailstatusbar.lo `test -f 'gailstatusbar.c' || echo '$(srcdir)/'`gailstatusbar.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailstatusbar.Tpo" "$(DEPDIR)/libgail_la-gailstatusbar.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailstatusbar.Tpo"; exit 1; fi
#	source='gailstatusbar.c' object='libgail_la-gailstatusbar.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailstatusbar.lo `test -f 'gailstatusbar.c' || echo '$(srcdir)/'`gailstatusbar.c

libgail_la-gailtextcell.lo: gailtextcell.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailtextcell.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailtextcell.Tpo" -c -o libgail_la-gailtextcell.lo `test -f 'gailtextcell.c' || echo '$(srcdir)/'`gailtextcell.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailtextcell.Tpo" "$(DEPDIR)/libgail_la-gailtextcell.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailtextcell.Tpo"; exit 1; fi
#	source='gailtextcell.c' object='libgail_la-gailtextcell.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailtextcell.lo `test -f 'gailtextcell.c' || echo '$(srcdir)/'`gailtextcell.c

libgail_la-gailtextview.lo: gailtextview.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailtextview.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailtextview.Tpo" -c -o libgail_la-gailtextview.lo `test -f 'gailtextview.c' || echo '$(srcdir)/'`gailtextview.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailtextview.Tpo" "$(DEPDIR)/libgail_la-gailtextview.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailtextview.Tpo"; exit 1; fi
#	source='gailtextview.c' object='libgail_la-gailtextview.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailtextview.lo `test -f 'gailtextview.c' || echo '$(srcdir)/'`gailtextview.c

libgail_la-gailtogglebutton.lo: gailtogglebutton.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailtogglebutton.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailtogglebutton.Tpo" -c -o libgail_la-gailtogglebutton.lo `test -f 'gailtogglebutton.c' || echo '$(srcdir)/'`gailtogglebutton.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailtogglebutton.Tpo" "$(DEPDIR)/libgail_la-gailtogglebutton.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailtogglebutton.Tpo"; exit 1; fi
#	source='gailtogglebutton.c' object='libgail_la-gailtogglebutton.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailtogglebutton.lo `test -f 'gailtogglebutton.c' || echo '$(srcdir)/'`gailtogglebutton.c

libgail_la-gailtoplevel.lo: gailtoplevel.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailtoplevel.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailtoplevel.Tpo" -c -o libgail_la-gailtoplevel.lo `test -f 'gailtoplevel.c' || echo '$(srcdir)/'`gailtoplevel.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailtoplevel.Tpo" "$(DEPDIR)/libgail_la-gailtoplevel.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailtoplevel.Tpo"; exit 1; fi
#	source='gailtoplevel.c' object='libgail_la-gailtoplevel.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailtoplevel.lo `test -f 'gailtoplevel.c' || echo '$(srcdir)/'`gailtoplevel.c

libgail_la-gailtreeview.lo: gailtreeview.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailtreeview.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailtreeview.Tpo" -c -o libgail_la-gailtreeview.lo `test -f 'gailtreeview.c' || echo '$(srcdir)/'`gailtreeview.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailtreeview.Tpo" "$(DEPDIR)/libgail_la-gailtreeview.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailtreeview.Tpo"; exit 1; fi
#	source='gailtreeview.c' object='libgail_la-gailtreeview.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailtreeview.lo `test -f 'gailtreeview.c' || echo '$(srcdir)/'`gailtreeview.c

libgail_la-gailutil.lo: gailutil.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailutil.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailutil.Tpo" -c -o libgail_la-gailutil.lo `test -f 'gailutil.c' || echo '$(srcdir)/'`gailutil.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailutil.Tpo" "$(DEPDIR)/libgail_la-gailutil.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailutil.Tpo"; exit 1; fi
#	source='gailutil.c' object='libgail_la-gailutil.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailutil.lo `test -f 'gailutil.c' || echo '$(srcdir)/'`gailutil.c

libgail_la-gailwidget.lo: gailwidget.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailwidget.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailwidget.Tpo" -c -o libgail_la-gailwidget.lo `test -f 'gailwidget.c' || echo '$(srcdir)/'`gailwidget.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailwidget.Tpo" "$(DEPDIR)/libgail_la-gailwidget.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailwidget.Tpo"; exit 1; fi
#	source='gailwidget.c' object='libgail_la-gailwidget.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailwidget.lo `test -f 'gailwidget.c' || echo '$(srcdir)/'`gailwidget.c

libgail_la-gailwindow.lo: gailwindow.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -MT libgail_la-gailwindow.lo -MD -MP -MF "$(DEPDIR)/libgail_la-gailwindow.Tpo" -c -o libgail_la-gailwindow.lo `test -f 'gailwindow.c' || echo '$(srcdir)/'`gailwindow.c; \
	then mv -f "$(DEPDIR)/libgail_la-gailwindow.Tpo" "$(DEPDIR)/libgail_la-gailwindow.Plo"; else rm -f "$(DEPDIR)/libgail_la-gailwindow.Tpo"; exit 1; fi
#	source='gailwindow.c' object='libgail_la-gailwindow.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgail_la_CPPFLAGS) $(CPPFLAGS) $(libgail_la_CFLAGS) $(CFLAGS) -c -o libgail_la-gailwindow.lo `test -f 'gailwindow.c' || echo '$(srcdir)/'`gailwindow.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
install-libgailincludeHEADERS: $(libgailinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(libgailincludedir)" || $(mkdir_p) "$(DESTDIR)$(libgailincludedir)"
	@list='$(libgailinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(libgailincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(libgailincludedir)/$$f'"; \
	  $(libgailincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(libgailincludedir)/$$f"; \
	done

uninstall-libgailincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libgailinclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libgailincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(libgailincludedir)/$$f"; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/../../..
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(mkdir_p) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(moduledir)" "$(DESTDIR)$(libgailincludedir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-libtool clean-moduleLTLIBRARIES \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am: install-libgailincludeHEADERS \
	install-moduleLTLIBRARIES

install-exec-am:

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-info-am uninstall-libgailincludeHEADERS \
	uninstall-moduleLTLIBRARIES

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
	check-local clean clean-generic clean-libtool \
	clean-moduleLTLIBRARIES clean-recursive ctags ctags-recursive \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-recursive distclean-tags distdir \
	dvi dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-libgailincludeHEADERS \
	install-man install-moduleLTLIBRARIES install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool mostlyclean-recursive \
	pdf pdf-am ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-info-am uninstall-libgailincludeHEADERS \
	uninstall-moduleLTLIBRARIES

# call as: $(XVFB_START) && someprogram

# test: run all tests in cwd and subdirs
test:	${TEST_PROGS}
	@$(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \
	  $(XVFB_START) && { set -e; ${GTESTER} --verbose ${TEST_PROGS}; }; \
	}
	@ for subdir in $(SUBDIRS) ; do \
	    test "$$subdir" = "." -o "$$subdir" = "po" -o "$$subdir" = "po-properties" || \
	    ( cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $@ ) || exit $? ; \
	  done
# test-report: run tests in subdirs and generate report
# perf-report: run tests in subdirs with -m perf and generate report
# full-report: like test-report: with -m perf and -m slow
test-report perf-report full-report:	${TEST_PROGS}
	@ ignore_logdir=true ; \
	  if test -z "$$GTESTER_LOGDIR" ; then \
	    GTESTER_LOGDIR=`mktemp -d "\`pwd\`/.testlogs-XXXXXX"`; export GTESTER_LOGDIR ; \
	    ignore_logdir=false ; \
	  fi ; \
	  for subdir in $(SUBDIRS) ; do \
	    test "$$subdir" = "." -o "$$subdir" = "po" -o "$$subdir" = "po-properties" || \
	    ( cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $@ ) || exit $? ; \
	  done ; \
	  $(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \
	    case $@ in \
	    test-report) test_options="-k";; \
	    perf-report) test_options="-k -m=perf";; \
	    full-report) test_options="-k -m=perf -m=slow";; \
	    esac ; \
	    $(XVFB_START) && { \
	      set -e; \
	      if test -z "$$GTESTER_LOGDIR" ; then \
	        ${GTESTER} --verbose $$test_options -o test-report.xml ${TEST_PROGS} ; \
	      elif test -n "${TEST_PROGS}" ; then \
	        ${GTESTER} --verbose $$test_options -o `mktemp "$$GTESTER_LOGDIR/log-XXXXXX"` ${TEST_PROGS} ; \
	      fi ; \
	    }; \
	  }; \
	  $$ignore_logdir || { \
	    echo '<?xml version="1.0"?>' > $@.xml ; \
	    echo '<report-collection>'  >> $@.xml ; \
	    for lf in `ls -L "$$GTESTER_LOGDIR"/.` ; do \
	      sed '1,1s/^<?xml\b[^>?]*?>//' <"$$GTESTER_LOGDIR"/"$$lf" >> $@.xml ; \
	    done ; \
	    echo >> $@.xml ; \
	    echo '</report-collection>' >> $@.xml ; \
	    rm -rf "$$GTESTER_LOGDIR"/ ; \
	    ${GTESTER_REPORT} --version 2>/dev/null 1>&2 ; test "$$?" != 0 || ${GTESTER_REPORT} $@.xml >$@.html ; \
	  }
.PHONY: test test-report perf-report full-report
# run make test as part of make check
check-local: test
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
