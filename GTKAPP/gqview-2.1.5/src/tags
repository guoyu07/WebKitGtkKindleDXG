!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACLOCAL	Makefile	/^ACLOCAL = ${SHELL} \/home\/tjw\/kindle\/gqview-2.1.5\/missing --run aclocal-1.9$/;"	m
ACLOCAL	icons/Makefile	/^ACLOCAL = ${SHELL} \/home\/tjw\/kindle\/gqview-2.1.5\/missing --run aclocal-1.9$/;"	m
ACLOCAL	icons/svg/Makefile	/^ACLOCAL = ${SHELL} \/home\/tjw\/kindle\/gqview-2.1.5\/missing --run aclocal-1.9$/;"	m
ACLOCAL_M4	Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	icons/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	icons/svg/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ALTER_DESATURATE	typedefs.h	/^	ALTER_DESATURATE$/;"	e	enum:__anon2
ALTER_FLIP	typedefs.h	/^	ALTER_FLIP,$/;"	e	enum:__anon2
ALTER_MIRROR	typedefs.h	/^	ALTER_MIRROR,$/;"	e	enum:__anon2
ALTER_NONE	typedefs.h	/^	ALTER_NONE,		\/* do nothing *\/$/;"	e	enum:__anon2
ALTER_ROTATE_180	typedefs.h	/^	ALTER_ROTATE_180,$/;"	e	enum:__anon2
ALTER_ROTATE_90	typedefs.h	/^	ALTER_ROTATE_90,$/;"	e	enum:__anon2
ALTER_ROTATE_90_CC	typedefs.h	/^	ALTER_ROTATE_90_CC,	\/* counterclockwise *\/$/;"	e	enum:__anon2
AMDEP_FALSE	Makefile	/^AMDEP_FALSE = #$/;"	m
AMDEP_FALSE	icons/Makefile	/^AMDEP_FALSE = #$/;"	m
AMDEP_FALSE	icons/svg/Makefile	/^AMDEP_FALSE = #$/;"	m
AMDEP_TRUE	Makefile	/^AMDEP_TRUE = $/;"	m
AMDEP_TRUE	icons/Makefile	/^AMDEP_TRUE = $/;"	m
AMDEP_TRUE	icons/svg/Makefile	/^AMDEP_TRUE = $/;"	m
AMTAR	Makefile	/^AMTAR = ${SHELL} \/home\/tjw\/kindle\/gqview-2.1.5\/missing --run tar$/;"	m
AMTAR	icons/Makefile	/^AMTAR = ${SHELL} \/home\/tjw\/kindle\/gqview-2.1.5\/missing --run tar$/;"	m
AMTAR	icons/svg/Makefile	/^AMTAR = ${SHELL} \/home\/tjw\/kindle\/gqview-2.1.5\/missing --run tar$/;"	m
AUTOCONF	Makefile	/^AUTOCONF = ${SHELL} \/home\/tjw\/kindle\/gqview-2.1.5\/missing --run autoconf$/;"	m
AUTOCONF	icons/Makefile	/^AUTOCONF = ${SHELL} \/home\/tjw\/kindle\/gqview-2.1.5\/missing --run autoconf$/;"	m
AUTOCONF	icons/svg/Makefile	/^AUTOCONF = ${SHELL} \/home\/tjw\/kindle\/gqview-2.1.5\/missing --run autoconf$/;"	m
AUTOHEADER	Makefile	/^AUTOHEADER = ${SHELL} \/home\/tjw\/kindle\/gqview-2.1.5\/missing --run autoheader$/;"	m
AUTOHEADER	icons/Makefile	/^AUTOHEADER = ${SHELL} \/home\/tjw\/kindle\/gqview-2.1.5\/missing --run autoheader$/;"	m
AUTOHEADER	icons/svg/Makefile	/^AUTOHEADER = ${SHELL} \/home\/tjw\/kindle\/gqview-2.1.5\/missing --run autoheader$/;"	m
AUTOMAKE	Makefile	/^AUTOMAKE = ${SHELL} \/home\/tjw\/kindle\/gqview-2.1.5\/missing --run automake-1.9$/;"	m
AUTOMAKE	icons/Makefile	/^AUTOMAKE = ${SHELL} \/home\/tjw\/kindle\/gqview-2.1.5\/missing --run automake-1.9$/;"	m
AUTOMAKE	icons/svg/Makefile	/^AUTOMAKE = ${SHELL} \/home\/tjw\/kindle\/gqview-2.1.5\/missing --run automake-1.9$/;"	m
AUTO_SCROLL_DEFAULT_REGION	ui_tree_edit.c	513;"	d	file:
AUTO_SCROLL_DEFAULT_SPEED	ui_tree_edit.c	512;"	d	file:
AWK	Makefile	/^AWK = gawk$/;"	m
AWK	icons/Makefile	/^AWK = gawk$/;"	m
AWK	icons/svg/Makefile	/^AWK = gawk$/;"	m
AlterType	typedefs.h	/^} AlterType;$/;"	t	typeref:enum:__anon2
AutoScrollData	ui_tree_edit.c	/^typedef struct _AutoScrollData AutoScrollData;$/;"	t	typeref:struct:_AutoScrollData	file:
BAR_EXIF_DATA_COLUMN_WIDTH	bar_exif.c	27;"	d	file:
BAR_EXIF_H	bar_exif.h	14;"	d
BAR_INFO_H	bar_info.h	14;"	d
BAR_KEYWORD_AUTOSAVE_TIME	bar_info.c	26;"	d	file:
BAR_SORT_COPY	bar_info.c	/^	BAR_SORT_COPY,$/;"	e	enum:__anon63	file:
BAR_SORT_COPY	bar_sort.c	/^	BAR_SORT_COPY,$/;"	e	enum:__anon10	file:
BAR_SORT_H	bar_sort.h	14;"	d
BAR_SORT_LINK	bar_info.c	/^	BAR_SORT_LINK$/;"	e	enum:__anon63	file:
BAR_SORT_LINK	bar_sort.c	/^	BAR_SORT_LINK$/;"	e	enum:__anon10	file:
BAR_SORT_MODE_COLLECTION	bar_sort.c	/^	BAR_SORT_MODE_COLLECTION$/;"	e	enum:__anon9	file:
BAR_SORT_MODE_FOLDER	bar_sort.c	/^	BAR_SORT_MODE_FOLDER = 0,$/;"	e	enum:__anon9	file:
BAR_SORT_MOVE	bar_info.c	/^	BAR_SORT_MOVE,$/;"	e	enum:__anon63	file:
BAR_SORT_MOVE	bar_sort.c	/^	BAR_SORT_MOVE,$/;"	e	enum:__anon10	file:
BAR_SORT_SELECTION_IMAGE	bar_sort.c	/^	BAR_SORT_SELECTION_IMAGE,$/;"	e	enum:__anon11	file:
BAR_SORT_SELECTION_SELECTED	bar_sort.c	/^	BAR_SORT_SELECTION_SELECTED$/;"	e	enum:__anon11	file:
BLACK_BACKGROUND	fullscreen.h	18;"	d
BOOKMARK_DATA_KEY	ui_bookmark.c	363;"	d	file:
BUTTON_ABOVE_KEY	fullscreen.c	583;"	d	file:
BarInfoData	bar_info.c	/^typedef struct _BarInfoData BarInfoData;$/;"	t	typeref:struct:_BarInfoData	file:
BookButtonData	ui_bookmark.c	/^typedef struct _BookButtonData BookButtonData;$/;"	t	typeref:struct:_BookButtonData	file:
BookMarkData	ui_bookmark.c	/^typedef struct _BookMarkData BookMarkData;$/;"	t	typeref:struct:_BookMarkData	file:
BookPropData	ui_bookmark.c	/^typedef struct _BookPropData BookPropData;$/;"	t	typeref:struct:_BookPropData	file:
CACHE_H	cache.h	14;"	d
CACHE_LOADER_DATE	cache-loader.h	/^	CACHE_LOADER_DATE	= 1 << 1,$/;"	e	enum:__anon8
CACHE_LOADER_DIMENSIONS	cache-loader.h	/^	CACHE_LOADER_DIMENSIONS	= 1 << 0,$/;"	e	enum:__anon8
CACHE_LOADER_H	cache-loader.h	14;"	d
CACHE_LOADER_MD5SUM	cache-loader.h	/^	CACHE_LOADER_MD5SUM	= 1 << 2,$/;"	e	enum:__anon8
CACHE_LOADER_NONE	cache-loader.h	/^	CACHE_LOADER_NONE	= 0,$/;"	e	enum:__anon8
CACHE_LOADER_SIMILARITY	cache-loader.h	/^	CACHE_LOADER_SIMILARITY	= 1 << 3$/;"	e	enum:__anon8
CACHE_LOAD_LINE_NOISE	cache.c	435;"	d	file:
CACHE_MAINT_H	cache_maint.h	14;"	d
CACHE_TYPE_METADATA	cache.h	/^	CACHE_TYPE_METADATA$/;"	e	enum:__anon18
CACHE_TYPE_SIM	cache.h	/^	CACHE_TYPE_SIM,$/;"	e	enum:__anon18
CACHE_TYPE_THUMB	cache.h	/^	CACHE_TYPE_THUMB,$/;"	e	enum:__anon18
CASE_SORT	ui_fileops.h	23;"	d
CASE_SORT	ui_pathsel.c	141;"	d	file:
CASE_SORT	ui_tabcomp.c	341;"	d	file:
CATALOGS	Makefile	/^CATALOGS =  ar.gmo be.gmo bg.gmo ca.gmo cs.gmo da.gmo de.gmo eo.gmo es.gmo et.gmo eu.gmo fi.gmo fr.gmo hu.gmo id.gmo it.gmo ja.gmo ko.gmo nl.gmo no.gmo pl.gmo pt_BR.gmo ro.gmo ru.gmo sk.gmo sl.gmo sv.gmo th.gmo tr.gmo uk.gmo vi.gmo zh_CN.GB2312.gmo zh_TW.gmo$/;"	m
CATALOGS	icons/Makefile	/^CATALOGS =  ar.gmo be.gmo bg.gmo ca.gmo cs.gmo da.gmo de.gmo eo.gmo es.gmo et.gmo eu.gmo fi.gmo fr.gmo hu.gmo id.gmo it.gmo ja.gmo ko.gmo nl.gmo no.gmo pl.gmo pt_BR.gmo ro.gmo ru.gmo sk.gmo sl.gmo sv.gmo th.gmo tr.gmo uk.gmo vi.gmo zh_CN.GB2312.gmo zh_TW.gmo$/;"	m
CATALOGS	icons/svg/Makefile	/^CATALOGS =  ar.gmo be.gmo bg.gmo ca.gmo cs.gmo da.gmo de.gmo eo.gmo es.gmo et.gmo eu.gmo fi.gmo fr.gmo hu.gmo id.gmo it.gmo ja.gmo ko.gmo nl.gmo no.gmo pl.gmo pt_BR.gmo ro.gmo ru.gmo sk.gmo sl.gmo sv.gmo th.gmo tr.gmo uk.gmo vi.gmo zh_CN.GB2312.gmo zh_TW.gmo$/;"	m
CATOBJEXT	Makefile	/^CATOBJEXT = .gmo$/;"	m
CATOBJEXT	icons/Makefile	/^CATOBJEXT = .gmo$/;"	m
CATOBJEXT	icons/svg/Makefile	/^CATOBJEXT = .gmo$/;"	m
CB	layout_util.c	774;"	d	file:
CB	layout_util.c	852;"	d	file:
CC	Makefile	/^CC = gcc$/;"	m
CC	icons/Makefile	/^CC = gcc$/;"	m
CC	icons/svg/Makefile	/^CC = gcc$/;"	m
CCDEPMODE	Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	icons/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	icons/svg/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCLD	Makefile	/^CCLD = $(CC)$/;"	m
CDupeConfirmD	dupe.c	/^} CDupeConfirmD;$/;"	t	typeref:struct:__anon44	file:
CELL_HEIGHT_OVERRIDE	dupe.c	2612;"	d	file:
CELL_HEIGHT_OVERRIDE	view_file_list.c	1485;"	d	file:
CFLAGS	Makefile	/^CFLAGS = -g -O2$/;"	m
CFLAGS	icons/Makefile	/^CFLAGS = -g -O2$/;"	m
CFLAGS	icons/svg/Makefile	/^CFLAGS = -g -O2$/;"	m
CLEANFILES	Makefile	/^CLEANFILES = $(noinst_DATA)$/;"	m
CLEANFILES	icons/Makefile	/^CLEANFILES = $(noinst_DATA)$/;"	m
CMData	cache_maint.c	/^typedef struct _CMData CMData;$/;"	t	typeref:struct:_CMData	file:
COLLECTION_MANAGER_ADD	collect-io.c	/^	COLLECTION_MANAGER_ADD,$/;"	e	enum:__anon71	file:
COLLECTION_MANAGER_REMOVE	collect-io.c	/^	COLLECTION_MANAGER_REMOVE$/;"	e	enum:__anon71	file:
COLLECTION_MANAGER_UPDATE	collect-io.c	/^	COLLECTION_MANAGER_UPDATE,$/;"	e	enum:__anon71	file:
COLLECT_DEF_HEIGHT	collect.c	35;"	d	file:
COLLECT_DEF_WIDTH	collect.c	34;"	d	file:
COLLECT_DLG_H	collect-dlg.h	14;"	d
COLLECT_H	collect.h	14;"	d
COLLECT_IO_H	collect-io.h	14;"	d
COLLECT_MANAGER_ACTIONS_PER_IDLE	collect-io.c	386;"	d	file:
COLLECT_MANAGER_FLUSH_DELAY	collect-io.c	387;"	d	file:
COLLECT_TABLE_H	collect-table.h	14;"	d
COLLECT_TABLE_MAX_COLUMNS	collect-table.c	45;"	d	file:
COLLECT_TABLE_TIP_DELAY	collect-table.c	48;"	d	file:
COLOR_MAN_CHUNK_SIZE	color-man.c	48;"	d	file:
COLOR_MAN_H	color-man.h	14;"	d
COLOR_MENU_KEY	layout.c	329;"	d	file:
COLOR_PROFILE_FILE	color-man.h	/^	COLOR_PROFILE_FILE,$/;"	e	enum:__anon23
COLOR_PROFILE_INPUTS	gqview.h	82;"	d
COLOR_PROFILE_MEM	color-man.h	/^	COLOR_PROFILE_MEM$/;"	e	enum:__anon23
COLOR_PROFILE_NONE	color-man.h	/^	COLOR_PROFILE_NONE = 0,$/;"	e	enum:__anon23
COLOR_PROFILE_SRGB	color-man.h	/^	COLOR_PROFILE_SRGB,$/;"	e	enum:__anon23
COLOR_RETURN_ERROR	color-man.h	/^	COLOR_RETURN_ERROR,$/;"	e	enum:__anon24
COLOR_RETURN_IMAGE_CHANGED	color-man.h	/^	COLOR_RETURN_IMAGE_CHANGED$/;"	e	enum:__anon24
COLOR_RETURN_SUCCESS	color-man.h	/^	COLOR_RETURN_SUCCESS = 0,$/;"	e	enum:__anon24
COLUMN_KEY	layout_config.c	/^	COLUMN_KEY$/;"	e	enum:__anon7	file:
COLUMN_TEXT	layout_config.c	/^	COLUMN_TEXT = 0,$/;"	e	enum:__anon7	file:
COMMAND_OPT	editors.c	28;"	d	file:
COMMAND_SHELL	editors.c	27;"	d	file:
COMPILE	Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
CONFIG_CLEAN_FILES	Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	icons/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	icons/svg/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_HEADER	Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	icons/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	icons/svg/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CPP	Makefile	/^CPP = gcc -E$/;"	m
CPP	icons/Makefile	/^CPP = gcc -E$/;"	m
CPP	icons/svg/Makefile	/^CPP = gcc -E$/;"	m
CPPFLAGS	Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	icons/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	icons/svg/Makefile	/^CPPFLAGS = $/;"	m
CRW_BYTE_ORDER	format_canon.c	146;"	d	file:
CRW_DIR_ENTRY_SIZE	format_canon.c	148;"	d	file:
CRW_HEADER_SIZE	format_canon.c	147;"	d	file:
CTABLE_COLUMN_COUNT	collect-table.c	/^	CTABLE_COLUMN_COUNT$/;"	e	enum:__anon39	file:
CTABLE_COLUMN_POINTER	collect-table.c	/^	CTABLE_COLUMN_POINTER = 0,$/;"	e	enum:__anon39	file:
CTAGS	Makefile	/^CTAGS = ctags$/;"	m
CTAGS	icons/Makefile	/^CTAGS = ctags$/;"	m
CViewConfirmD	img-view.c	/^} CViewConfirmD;$/;"	t	typeref:struct:__anon70	file:
CYGPATH_W	Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	icons/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	icons/svg/Makefile	/^CYGPATH_W = echo$/;"	m
CacheData	cache.h	/^typedef struct _CacheData CacheData;$/;"	t	typeref:struct:_CacheData
CacheDataType	cache-loader.h	/^} CacheDataType;$/;"	t	typeref:enum:__anon8
CacheLoader	cache-loader.h	/^typedef struct _CacheLoader CacheLoader;$/;"	t	typeref:struct:_CacheLoader
CacheLoaderDoneFunc	cache-loader.h	/^typedef void (* CacheLoaderDoneFunc)(CacheLoader *cl, gint error, gpointer data);$/;"	t
CacheManager	cache_maint.c	/^typedef struct _CacheManager CacheManager;$/;"	t	typeref:struct:_CacheManager	file:
CacheType	cache.h	/^} CacheType;$/;"	t	typeref:enum:__anon18
CanonExifMarkersList	format_canon.c	/^static ExifMarker CanonExifMarkersList[] = {$/;"	v	file:
CanonSet1	format_canon.c	/^static ExifMarker CanonSet1[] = {$/;"	v	file:
CanonSet1AutoFocusPoint	format_canon.c	/^static ExifTextList CanonSet1AutoFocusPoint[] = {$/;"	v	file:
CanonSet1ConSatSharp	format_canon.c	/^static ExifTextList CanonSet1ConSatSharp[] = {$/;"	v	file:
CanonSet1DigitalZoom	format_canon.c	/^static ExifTextList CanonSet1DigitalZoom[] = {$/;"	v	file:
CanonSet1DriveMode	format_canon.c	/^static ExifTextList CanonSet1DriveMode[] = {$/;"	v	file:
CanonSet1ExposureMode	format_canon.c	/^static ExifTextList CanonSet1ExposureMode[] = {$/;"	v	file:
CanonSet1FlashFired	format_canon.c	/^static ExifTextList CanonSet1FlashFired[] = {$/;"	v	file:
CanonSet1FlashMode	format_canon.c	/^static ExifTextList CanonSet1FlashMode[] = {$/;"	v	file:
CanonSet1FocusCont	format_canon.c	/^static ExifTextList CanonSet1FocusCont[] = {$/;"	v	file:
CanonSet1FocusMode	format_canon.c	/^static ExifTextList CanonSet1FocusMode[] = {$/;"	v	file:
CanonSet1FocusType	format_canon.c	/^static ExifTextList CanonSet1FocusType[] = {$/;"	v	file:
CanonSet1ISOSpeed	format_canon.c	/^static ExifTextList CanonSet1ISOSpeed[] = {$/;"	v	file:
CanonSet1ImageSize	format_canon.c	/^static ExifTextList CanonSet1ImageSize[] = {$/;"	v	file:
CanonSet1MacroMode	format_canon.c	/^static ExifTextList CanonSet1MacroMode[] = {$/;"	v	file:
CanonSet1MeteringMode	format_canon.c	/^static ExifTextList CanonSet1MeteringMode[] = {$/;"	v	file:
CanonSet1Quality	format_canon.c	/^static ExifTextList CanonSet1Quality[] = {$/;"	v	file:
CanonSet1ShootingMode	format_canon.c	/^static ExifTextList CanonSet1ShootingMode[] = {$/;"	v	file:
CanonSet2	format_canon.c	/^static ExifMarker CanonSet2[] = {$/;"	v	file:
CanonSet2FlashBias	format_canon.c	/^static ExifTextList CanonSet2FlashBias[] = {$/;"	v	file:
CanonSet2WhiteBalance	format_canon.c	/^static ExifTextList CanonSet2WhiteBalance[] = {$/;"	v	file:
CleanData	cache_maint.c	/^typedef struct _CleanData CleanData;$/;"	t	typeref:struct:_CleanData	file:
CollectInfo	typedefs.h	/^typedef struct _CollectInfo CollectInfo;$/;"	t	typeref:struct:_CollectInfo
CollectManagerAction	collect-io.c	/^typedef struct _CollectManagerAction CollectManagerAction;$/;"	t	typeref:struct:_CollectManagerAction	file:
CollectManagerEntry	collect-io.c	/^typedef struct _CollectManagerEntry CollectManagerEntry;$/;"	t	typeref:struct:_CollectManagerEntry	file:
CollectManagerType	collect-io.c	/^} CollectManagerType;$/;"	t	typeref:enum:__anon71	file:
CollectTable	typedefs.h	/^typedef struct _CollectTable CollectTable;$/;"	t	typeref:struct:_CollectTable
CollectWindow	typedefs.h	/^typedef struct _CollectWindow CollectWindow;$/;"	t	typeref:struct:_CollectWindow
CollectionData	typedefs.h	/^typedef struct _CollectionData CollectionData;$/;"	t	typeref:struct:_CollectionData
ColorMan	color-man.h	/^typedef struct _ColorMan ColorMan;$/;"	t	typeref:struct:_ColorMan
ColorManCache	color-man.c	/^typedef struct _ColorManCache ColorManCache;$/;"	t	typeref:struct:_ColorManCache	file:
ColorManDoneFunc	color-man.h	/^typedef void (* ColorManDoneFunc)(ColorMan *cm, ColorManReturnType success, gpointer data);$/;"	t
ColorManProfileType	color-man.h	/^} ColorManProfileType;$/;"	t	typeref:enum:__anon23
ColorManReturnType	color-man.h	/^} ColorManReturnType;$/;"	t	typeref:enum:__anon24
ColumnData	collect-table.c	/^typedef struct _ColumnData ColumnData;$/;"	t	typeref:struct:_ColumnData	file:
ColumnData	view_file_icon.c	/^typedef struct _ColumnData ColumnData;$/;"	t	typeref:struct:_ColumnData	file:
DATA	Makefile	/^DATA = $(noinst_DATA)$/;"	m
DATA	icons/Makefile	/^DATA = $(noinst_DATA)$/;"	m
DATADIRNAME	Makefile	/^DATADIRNAME = share$/;"	m
DATADIRNAME	icons/Makefile	/^DATADIRNAME = share$/;"	m
DATADIRNAME	icons/svg/Makefile	/^DATADIRNAME = share$/;"	m
DATE_SELECION_KEY	ui_misc.c	839;"	d	file:
DEBUG_RAW_TIFF	format_raw.h	62;"	d
DEFAULT_INCLUDES	Makefile	/^DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)$/;"	m
DEFS	Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	icons/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	icons/svg/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEF_PROPERTY_HEIGHT	info.c	35;"	d	file:
DEF_PROPERTY_WIDTH	info.c	34;"	d	file:
DEF_SEARCH_HEIGHT	search.c	44;"	d	file:
DEF_SEARCH_WIDTH	search.c	43;"	d	file:
DEPDIR	Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	icons/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	icons/svg/Makefile	/^DEPDIR = .deps$/;"	m
DEST_HEIGHT	ui_pathsel.c	43;"	d	file:
DEST_WIDTH	ui_pathsel.c	42;"	d	file:
DIALOG_APPEND	collect-dlg.c	/^	DIALOG_APPEND$/;"	e	enum:__anon62	file:
DIALOG_COPY	utilops.c	/^	DIALOG_COPY,$/;"	e	enum:__anon65	file:
DIALOG_DEF_IMAGE_DIM_X	utilops.c	141;"	d	file:
DIALOG_DEF_IMAGE_DIM_Y	utilops.c	142;"	d	file:
DIALOG_DELETE	utilops.c	/^	DIALOG_DELETE,$/;"	e	enum:__anon65	file:
DIALOG_LOAD	collect-dlg.c	/^	DIALOG_LOAD,$/;"	e	enum:__anon62	file:
DIALOG_MOVE	utilops.c	/^	DIALOG_MOVE,$/;"	e	enum:__anon65	file:
DIALOG_NEW_DIR	utilops.c	/^	DIALOG_NEW_DIR,$/;"	e	enum:__anon65	file:
DIALOG_RENAME	utilops.c	/^	DIALOG_RENAME$/;"	e	enum:__anon65	file:
DIALOG_SAVE	collect-dlg.c	/^	DIALOG_SAVE,$/;"	e	enum:__anon62	file:
DIALOG_SAVE_CLOSE	collect-dlg.c	/^	DIALOG_SAVE_CLOSE,$/;"	e	enum:__anon62	file:
DIR_COLUMN_COLOR	view_dir_list.c	/^	DIR_COLUMN_COLOR,$/;"	e	enum:__anon52	file:
DIR_COLUMN_COLOR	view_dir_tree.c	/^	DIR_COLUMN_COLOR,$/;"	e	enum:__anon69	file:
DIR_COLUMN_COUNT	view_dir_list.c	/^	DIR_COLUMN_COUNT$/;"	e	enum:__anon52	file:
DIR_COLUMN_COUNT	view_dir_tree.c	/^	DIR_COLUMN_COUNT$/;"	e	enum:__anon69	file:
DIR_COLUMN_ICON	view_dir_list.c	/^	DIR_COLUMN_ICON,$/;"	e	enum:__anon52	file:
DIR_COLUMN_ICON	view_dir_tree.c	/^	DIR_COLUMN_ICON,$/;"	e	enum:__anon69	file:
DIR_COLUMN_NAME	view_dir_list.c	/^	DIR_COLUMN_NAME,$/;"	e	enum:__anon52	file:
DIR_COLUMN_NAME	view_dir_tree.c	/^	DIR_COLUMN_NAME,$/;"	e	enum:__anon69	file:
DIR_COLUMN_POINTER	view_dir_list.c	/^	DIR_COLUMN_POINTER = 0,$/;"	e	enum:__anon52	file:
DIR_COLUMN_POINTER	view_dir_tree.c	/^	DIR_COLUMN_POINTER = 0,$/;"	e	enum:__anon69	file:
DISTFILES	Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	icons/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	icons/svg/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DIST_COMMON	Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(srcdir)\/Makefile.in$/;"	m
DIST_COMMON	icons/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(srcdir)\/Makefile.in$/;"	m
DIST_COMMON	icons/svg/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(srcdir)\/Makefile.in$/;"	m
DIST_SOURCES	Makefile	/^DIST_SOURCES = $(gqview_SOURCES)$/;"	m
DIST_SOURCES	icons/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	icons/svg/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SUBDIRS	Makefile	/^DIST_SUBDIRS = icons$/;"	m
DIST_SUBDIRS	icons/Makefile	/^DIST_SUBDIRS = svg$/;"	m
DND_H	dnd.h	14;"	d
DND_ICON_SIZE	dnd.c	35;"	d	file:
DUPE_COLUMN_COLOR	dupe.c	/^	DUPE_COLUMN_COLOR,$/;"	e	enum:__anon42	file:
DUPE_COLUMN_COUNT	dupe.c	/^	DUPE_COLUMN_COUNT	\/* total columns *\/$/;"	e	enum:__anon42	file:
DUPE_COLUMN_DATE	dupe.c	/^	DUPE_COLUMN_DATE,$/;"	e	enum:__anon42	file:
DUPE_COLUMN_DIMENSIONS	dupe.c	/^	DUPE_COLUMN_DIMENSIONS,$/;"	e	enum:__anon42	file:
DUPE_COLUMN_NAME	dupe.c	/^	DUPE_COLUMN_NAME,$/;"	e	enum:__anon42	file:
DUPE_COLUMN_PATH	dupe.c	/^	DUPE_COLUMN_PATH,$/;"	e	enum:__anon42	file:
DUPE_COLUMN_POINTER	dupe.c	/^	DUPE_COLUMN_POINTER = 0,$/;"	e	enum:__anon42	file:
DUPE_COLUMN_RANK	dupe.c	/^	DUPE_COLUMN_RANK,$/;"	e	enum:__anon42	file:
DUPE_COLUMN_SIZE	dupe.c	/^	DUPE_COLUMN_SIZE,$/;"	e	enum:__anon42	file:
DUPE_COLUMN_THUMB	dupe.c	/^	DUPE_COLUMN_THUMB,$/;"	e	enum:__anon42	file:
DUPE_DEF_HEIGHT	dupe.c	45;"	d	file:
DUPE_DEF_WIDTH	dupe.c	44;"	d	file:
DUPE_H	dupe.h	14;"	d
DUPE_MATCH_DATE	dupe.h	/^	DUPE_MATCH_DATE = 1 << 2,$/;"	e	enum:__anon45
DUPE_MATCH_DIM	dupe.h	/^	DUPE_MATCH_DIM  = 1 << 3,	\/* image dimensions *\/$/;"	e	enum:__anon45
DUPE_MATCH_NAME	dupe.h	/^	DUPE_MATCH_NAME = 1 << 0,$/;"	e	enum:__anon45
DUPE_MATCH_NONE	dupe.h	/^	DUPE_MATCH_NONE = 0,$/;"	e	enum:__anon45
DUPE_MATCH_PATH	dupe.h	/^	DUPE_MATCH_PATH = 1 << 5,$/;"	e	enum:__anon45
DUPE_MATCH_SIM_CUSTOM	dupe.h	/^	DUPE_MATCH_SIM_CUSTOM = 1 << 9$/;"	e	enum:__anon45
DUPE_MATCH_SIM_HIGH	dupe.h	/^	DUPE_MATCH_SIM_HIGH = 1 << 6,	\/* similarity *\/$/;"	e	enum:__anon45
DUPE_MATCH_SIM_LOW	dupe.h	/^	DUPE_MATCH_SIM_LOW  = 1 << 8,$/;"	e	enum:__anon45
DUPE_MATCH_SIM_MED	dupe.h	/^	DUPE_MATCH_SIM_MED  = 1 << 7,$/;"	e	enum:__anon45
DUPE_MATCH_SIZE	dupe.h	/^	DUPE_MATCH_SIZE = 1 << 1,$/;"	e	enum:__anon45
DUPE_MATCH_SUM	dupe.h	/^	DUPE_MATCH_SUM  = 1 << 4,	\/* simple checksum *\/$/;"	e	enum:__anon45
DUPE_MENU_COLUMN_MASK	dupe.c	/^	DUPE_MENU_COLUMN_MASK$/;"	e	enum:__anon43	file:
DUPE_MENU_COLUMN_NAME	dupe.c	/^	DUPE_MENU_COLUMN_NAME = 0,$/;"	e	enum:__anon43	file:
DateSelection	ui_misc.c	/^typedef struct _DateSelection DateSelection;$/;"	t	typeref:struct:_DateSelection	file:
DestDel_Data	ui_pathsel.c	/^typedef struct _DestDel_Data DestDel_Data;$/;"	t	typeref:struct:_DestDel_Data	file:
Dest_Data	ui_pathsel.c	/^typedef struct _Dest_Data Dest_Data;$/;"	t	typeref:struct:_Dest_Data	file:
DupeItem	dupe.h	/^typedef struct _DupeItem DupeItem;$/;"	t	typeref:struct:_DupeItem
DupeMatch	dupe.h	/^typedef struct _DupeMatch DupeMatch;$/;"	t	typeref:struct:_DupeMatch
DupeMatchType	dupe.h	/^} DupeMatchType;$/;"	t	typeref:enum:__anon45
DupeWindow	dupe.h	/^typedef struct _DupeWindow DupeWindow;$/;"	t	typeref:struct:_DupeWindow
ECHO_C	Makefile	/^ECHO_C = $/;"	m
ECHO_C	icons/Makefile	/^ECHO_C = $/;"	m
ECHO_C	icons/svg/Makefile	/^ECHO_C = $/;"	m
ECHO_N	Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	icons/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	icons/svg/Makefile	/^ECHO_N = -n$/;"	m
ECHO_T	Makefile	/^ECHO_T = $/;"	m
ECHO_T	icons/Makefile	/^ECHO_T = $/;"	m
ECHO_T	icons/svg/Makefile	/^ECHO_T = $/;"	m
EDITORS_H	editors.h	14;"	d
EDITOR_COMMAND_MAX_LENGTH	preferences.c	36;"	d	file:
EDITOR_NAME_MAX_LENGTH	preferences.c	35;"	d	file:
EDITOR_WINDOW_HEIGHT	editors.c	25;"	d	file:
EDITOR_WINDOW_WIDTH	editors.c	24;"	d	file:
EGREP	Makefile	/^EGREP = grep -E$/;"	m
EGREP	icons/Makefile	/^EGREP = grep -E$/;"	m
EGREP	icons/svg/Makefile	/^EGREP = grep -E$/;"	m
ETAGS	Makefile	/^ETAGS = etags$/;"	m
ETAGS	icons/Makefile	/^ETAGS = etags$/;"	m
EXEEXT	Makefile	/^EXEEXT = $/;"	m
EXEEXT	icons/Makefile	/^EXEEXT = $/;"	m
EXEEXT	icons/svg/Makefile	/^EXEEXT = $/;"	m
EXIF_ADVCOL_COUNT	bar_exif.c	/^	EXIF_ADVCOL_COUNT$/;"	e	enum:__anon17	file:
EXIF_ADVCOL_DESCRIPTION	bar_exif.c	/^	EXIF_ADVCOL_DESCRIPTION,$/;"	e	enum:__anon17	file:
EXIF_ADVCOL_ELEMENTS	bar_exif.c	/^	EXIF_ADVCOL_ELEMENTS,$/;"	e	enum:__anon17	file:
EXIF_ADVCOL_ENABLED	bar_exif.c	/^	EXIF_ADVCOL_ENABLED = 0,$/;"	e	enum:__anon17	file:
EXIF_ADVCOL_FORMAT	bar_exif.c	/^	EXIF_ADVCOL_FORMAT,$/;"	e	enum:__anon17	file:
EXIF_ADVCOL_NAME	bar_exif.c	/^	EXIF_ADVCOL_NAME,$/;"	e	enum:__anon17	file:
EXIF_ADVCOL_TAG	bar_exif.c	/^	EXIF_ADVCOL_TAG,$/;"	e	enum:__anon17	file:
EXIF_ADVCOL_VALUE	bar_exif.c	/^	EXIF_ADVCOL_VALUE,$/;"	e	enum:__anon17	file:
EXIF_BAR_ARROW_SIZE	bar_exif.c	23;"	d	file:
EXIF_BAR_CUSTOM_COUNT	bar_exif.c	25;"	d	file:
EXIF_BAR_SIZE_INCREMENT	bar_exif.c	22;"	d	file:
EXIF_BYTE_ORDER_INTEL	exif.h	/^	EXIF_BYTE_ORDER_INTEL,$/;"	e	enum:__anon14
EXIF_BYTE_ORDER_MOTOROLA	exif.h	/^	EXIF_BYTE_ORDER_MOTOROLA$/;"	e	enum:__anon14
EXIF_DATA_AS_TEXT_MAX_COUNT	exif.c	1283;"	d	file:
EXIF_FORMAT_BYTE	exif.h	/^	EXIF_FORMAT_BYTE		= 6,$/;"	e	enum:__anon13
EXIF_FORMAT_BYTE_UNSIGNED	exif.h	/^	EXIF_FORMAT_BYTE_UNSIGNED	= 1,$/;"	e	enum:__anon13
EXIF_FORMAT_COUNT	exif.h	36;"	d
EXIF_FORMAT_DOUBLE	exif.h	/^	EXIF_FORMAT_DOUBLE		= 12$/;"	e	enum:__anon13
EXIF_FORMAT_FLOAT	exif.h	/^	EXIF_FORMAT_FLOAT		= 11,$/;"	e	enum:__anon13
EXIF_FORMAT_LONG	exif.h	/^	EXIF_FORMAT_LONG		= 9,$/;"	e	enum:__anon13
EXIF_FORMAT_LONG_UNSIGNED	exif.h	/^	EXIF_FORMAT_LONG_UNSIGNED	= 4,$/;"	e	enum:__anon13
EXIF_FORMAT_RATIONAL	exif.h	/^	EXIF_FORMAT_RATIONAL		= 10,$/;"	e	enum:__anon13
EXIF_FORMAT_RATIONAL_UNSIGNED	exif.h	/^	EXIF_FORMAT_RATIONAL_UNSIGNED	= 5,$/;"	e	enum:__anon13
EXIF_FORMAT_SHORT	exif.h	/^	EXIF_FORMAT_SHORT		= 8,$/;"	e	enum:__anon13
EXIF_FORMAT_SHORT_UNSIGNED	exif.h	/^	EXIF_FORMAT_SHORT_UNSIGNED	= 3,$/;"	e	enum:__anon13
EXIF_FORMAT_STRING	exif.h	/^	EXIF_FORMAT_STRING		= 2,$/;"	e	enum:__anon13
EXIF_FORMAT_UNDEFINED	exif.h	/^	EXIF_FORMAT_UNDEFINED		= 7,$/;"	e	enum:__anon13
EXIF_FORMAT_UNKNOWN	exif.h	/^	EXIF_FORMAT_UNKNOWN		= 0,$/;"	e	enum:__anon13
EXIF_MARKER_LIST_END	exif.h	116;"	d
EXIF_ORIENTATION_BOTTOM_LEFT	exif.h	/^	EXIF_ORIENTATION_BOTTOM_LEFT	= 4,$/;"	e	enum:__anon15
EXIF_ORIENTATION_BOTTOM_RIGHT	exif.h	/^	EXIF_ORIENTATION_BOTTOM_RIGHT	= 3,$/;"	e	enum:__anon15
EXIF_ORIENTATION_LEFT_BOTTOM	exif.h	/^	EXIF_ORIENTATION_LEFT_BOTTOM	= 8$/;"	e	enum:__anon15
EXIF_ORIENTATION_LEFT_TOP	exif.h	/^	EXIF_ORIENTATION_LEFT_TOP	= 5,$/;"	e	enum:__anon15
EXIF_ORIENTATION_RIGHT_BOTTOM	exif.h	/^	EXIF_ORIENTATION_RIGHT_BOTTOM	= 7,$/;"	e	enum:__anon15
EXIF_ORIENTATION_RIGHT_TOP	exif.h	/^	EXIF_ORIENTATION_RIGHT_TOP	= 6,$/;"	e	enum:__anon15
EXIF_ORIENTATION_TOP_LEFT	exif.h	/^	EXIF_ORIENTATION_TOP_LEFT	= 1,$/;"	e	enum:__anon15
EXIF_ORIENTATION_TOP_RIGHT	exif.h	/^	EXIF_ORIENTATION_TOP_RIGHT	= 2,$/;"	e	enum:__anon15
EXIF_ORIENTATION_UNKNOWN	exif.h	/^	EXIF_ORIENTATION_UNKNOWN	= 0,$/;"	e	enum:__anon15
EXIF_TEXT_LIST_END	exif.h	124;"	d
EXIF_TIFD_OFFSET_COUNT	exif.h	209;"	d
EXIF_TIFD_OFFSET_DATA	exif.h	210;"	d
EXIF_TIFD_OFFSET_FORMAT	exif.h	208;"	d
EXIF_TIFD_OFFSET_TAG	exif.h	207;"	d
EXIF_TIFD_SIZE	exif.h	211;"	d
EXIF_TIFF_MAX_LEVELS	exif.h	205;"	d
EXIF_UNIT_CENTIMETER	exif.h	/^	EXIF_UNIT_CENTIMETER	= 3$/;"	e	enum:__anon16
EXIF_UNIT_INCH	exif.h	/^	EXIF_UNIT_INCH		= 2,$/;"	e	enum:__anon16
EXIF_UNIT_NOUNIT	exif.h	/^	EXIF_UNIT_NOUNIT	= 1,$/;"	e	enum:__anon16
EXIF_UNIT_UNKNOWN	exif.h	/^	EXIF_UNIT_UNKNOWN	= 0,$/;"	e	enum:__anon16
EXTRA_DIST	Makefile	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	icons/Makefile	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	icons/svg/Makefile	/^EXTRA_DIST = $(svg_images)$/;"	m
EditorVerboseData	editors.c	/^typedef struct _EditorVerboseData EditorVerboseData;$/;"	t	typeref:struct:_EditorVerboseData	file:
ExifBar	bar_exif.c	/^typedef struct _ExifBar ExifBar;$/;"	t	typeref:struct:_ExifBar	file:
ExifByteOrder	exif.h	/^} ExifByteOrder;$/;"	t	typeref:enum:__anon14
ExifColorSpaceList	exif.c	/^static ExifTextList ExifColorSpaceList[] = {$/;"	v	file:
ExifContrastList	exif.c	/^static ExifTextList ExifContrastList[] = {$/;"	v	file:
ExifCustRenderList	exif.c	/^static ExifTextList ExifCustRenderList[] = {$/;"	v	file:
ExifData	exif.h	/^typedef struct _ExifData ExifData;$/;"	t	typeref:struct:_ExifData
ExifExposureModeList	exif.c	/^static ExifTextList ExifExposureModeList[] = {$/;"	v	file:
ExifExposureProgramList	exif.c	/^static ExifTextList ExifExposureProgramList[] = {$/;"	v	file:
ExifFlashList	exif.c	/^static ExifTextList ExifFlashList[] = {$/;"	v	file:
ExifFormatAttrib	exif.h	/^typedef struct _ExifFormatAttrib ExifFormatAttrib;$/;"	t	typeref:struct:_ExifFormatAttrib
ExifFormatList	exif.c	/^ExifFormatAttrib ExifFormatList[] = {$/;"	v
ExifFormatType	exif.h	/^} ExifFormatType;$/;"	t	typeref:enum:__anon13
ExifFormattedList	exif.c	/^ExifFormattedText ExifFormattedList[] = {$/;"	v
ExifFormattedText	exif.h	/^typedef struct _ExifFormattedText ExifFormattedText;$/;"	t	typeref:struct:_ExifFormattedText
ExifGainControlList	exif.c	/^static ExifTextList ExifGainControlList[] = {$/;"	v	file:
ExifItem	exif.h	/^typedef struct _ExifItem ExifItem;$/;"	t	typeref:struct:_ExifItem
ExifKnownMarkersList	exif.c	/^ExifMarker ExifKnownMarkersList[] = {$/;"	v
ExifLightSourceList	exif.c	/^static ExifTextList ExifLightSourceList[] = {$/;"	v	file:
ExifMarker	exif.h	/^typedef struct _ExifMarker ExifMarker;$/;"	t	typeref:struct:_ExifMarker
ExifMeteringModeList	exif.c	/^static ExifTextList ExifMeteringModeList[] = {$/;"	v	file:
ExifOrientationList	exif.c	/^static ExifTextList ExifOrientationList[] = {$/;"	v	file:
ExifOrientationType	exif.h	/^} ExifOrientationType;$/;"	t	typeref:enum:__anon15
ExifRational	exif.h	/^typedef struct _ExifRational ExifRational;$/;"	t	typeref:struct:_ExifRational
ExifSaturationList	exif.c	/^static ExifTextList ExifSaturationList[] = {$/;"	v	file:
ExifSceneCaptureList	exif.c	/^static ExifTextList ExifSceneCaptureList[] = {$/;"	v	file:
ExifSceneList	exif.c	/^static ExifTextList ExifSceneList[] = {$/;"	v	file:
ExifSensorList	exif.c	/^static ExifTextList ExifSensorList[] = {$/;"	v	file:
ExifSharpnessList	exif.c	/^static ExifTextList ExifSharpnessList[] = {$/;"	v	file:
ExifSourceList	exif.c	/^static ExifTextList ExifSourceList[] = {$/;"	v	file:
ExifSubjectRangeList	exif.c	/^static ExifTextList ExifSubjectRangeList[] = {$/;"	v	file:
ExifTextList	exif.h	/^typedef struct _ExifTextList ExifTextList;$/;"	t	typeref:struct:_ExifTextList
ExifUnitList	exif.c	/^static ExifTextList ExifUnitList[] = {$/;"	v	file:
ExifUnitType	exif.h	/^} ExifUnitType;$/;"	t	typeref:enum:__anon16
ExifUnknownMarkersList	exif.c	/^ExifMarker ExifUnknownMarkersList[] = {$/;"	v
ExifWhiteBalanceList	exif.c	/^static ExifTextList ExifWhiteBalanceList[] = {$/;"	v	file:
ExifYCbCrPosList	exif.c	/^static ExifTextList ExifYCbCrPosList[] = {$/;"	v	file:
F1	md5-util.c	207;"	d	file:
F2	md5-util.c	208;"	d	file:
F3	md5-util.c	209;"	d	file:
F4	md5-util.c	210;"	d	file:
FE_DESCRIPTION	preferences.c	/^	FE_DESCRIPTION$/;"	e	enum:__anon38	file:
FE_ENABLE	preferences.c	/^	FE_ENABLE,$/;"	e	enum:__anon38	file:
FE_EXTENSION	preferences.c	/^	FE_EXTENSION,$/;"	e	enum:__anon38	file:
FILELIST_H	filelist.h	14;"	d
FILE_COLUMN_COLOR	view_file_list.c	/^	FILE_COLUMN_COLOR,$/;"	e	enum:__anon22	file:
FILE_COLUMN_COUNT	view_file_icon.c	/^	FILE_COLUMN_COUNT$/;"	e	enum:__anon59	file:
FILE_COLUMN_COUNT	view_file_list.c	/^	FILE_COLUMN_COUNT$/;"	e	enum:__anon22	file:
FILE_COLUMN_DATE	view_file_list.c	/^	FILE_COLUMN_DATE,$/;"	e	enum:__anon22	file:
FILE_COLUMN_NAME	view_file_list.c	/^	FILE_COLUMN_NAME,$/;"	e	enum:__anon22	file:
FILE_COLUMN_POINTER	view_file_icon.c	/^	FILE_COLUMN_POINTER = 0,$/;"	e	enum:__anon59	file:
FILE_COLUMN_POINTER	view_file_list.c	/^	FILE_COLUMN_POINTER = 0,$/;"	e	enum:__anon22	file:
FILE_COLUMN_SIZE	view_file_list.c	/^	FILE_COLUMN_SIZE,$/;"	e	enum:__anon22	file:
FILE_COLUMN_THUMB	view_file_list.c	/^	FILE_COLUMN_THUMB,$/;"	e	enum:__anon22	file:
FILE_DATA	view_file_icon.c	47;"	d	file:
FILTER_COLUMN_FILTER	ui_pathsel.c	/^	FILTER_COLUMN_FILTER$/;"	e	enum:__anon5	file:
FILTER_COLUMN_NAME	ui_pathsel.c	/^	FILTER_COLUMN_NAME = 0,$/;"	e	enum:__anon5	file:
FIXED_ICON_SIZE_MAX	cellrenderericon.c	27;"	d	file:
FORMAT_EXIF_CANON	format_canon.h	44;"	d
FORMAT_EXIF_FUJI	format_fuji.h	33;"	d
FORMAT_EXIF_MATCH_MAKE	format_raw.h	/^	FORMAT_EXIF_MATCH_MAKE,$/;"	e	enum:__anon51
FORMAT_EXIF_MATCH_MAKERNOTE	format_raw.h	/^	FORMAT_EXIF_MATCH_MAKERNOTE$/;"	e	enum:__anon51
FORMAT_EXIF_NIKON	format_nikon.h	36;"	d
FORMAT_EXIF_OLYMPUS	format_olympus.h	30;"	d
FORMAT_RAW_CANON	format_canon.h	31;"	d
FORMAT_RAW_DEBUG_TIFF	format_raw.h	66;"	d
FORMAT_RAW_EXIF_IFD_II	format_raw.h	/^	FORMAT_RAW_EXIF_IFD_II,$/;"	e	enum:__anon50
FORMAT_RAW_EXIF_IFD_MM	format_raw.h	/^	FORMAT_RAW_EXIF_IFD_MM,$/;"	e	enum:__anon50
FORMAT_RAW_EXIF_JPEG	format_raw.h	/^	FORMAT_RAW_EXIF_JPEG,$/;"	e	enum:__anon50
FORMAT_RAW_EXIF_NONE	format_raw.h	/^	FORMAT_RAW_EXIF_NONE,$/;"	e	enum:__anon50
FORMAT_RAW_EXIF_PROPRIETARY	format_raw.h	/^	FORMAT_RAW_EXIF_PROPRIETARY$/;"	e	enum:__anon50
FORMAT_RAW_EXIF_TIFF	format_raw.h	/^	FORMAT_RAW_EXIF_TIFF,$/;"	e	enum:__anon50
FORMAT_RAW_FUJI	format_fuji.h	24;"	d
FORMAT_RAW_MATCH_MAGIC	format_raw.h	/^	FORMAT_RAW_MATCH_MAGIC,$/;"	e	enum:__anon49
FORMAT_RAW_MATCH_TIFF_MAKE	format_raw.h	/^	FORMAT_RAW_MATCH_TIFF_MAKE$/;"	e	enum:__anon49
FORMAT_RAW_NIKON	format_nikon.h	19;"	d
FORMAT_RAW_OLYMPUS	format_olympus.h	21;"	d
FORMAT_RAW_PENTAX	format_nikon.h	27;"	d
FS_MENU_COLUMN_NAME	fullscreen.c	/^	FS_MENU_COLUMN_NAME = 0,$/;"	e	enum:__anon29	file:
FS_MENU_COLUMN_VALUE	fullscreen.c	/^	FS_MENU_COLUMN_VALUE$/;"	e	enum:__anon29	file:
FULLSCREEN_CURSOR_BUSY	fullscreen.c	/^	FULLSCREEN_CURSOR_BUSY   = 1 << 2$/;"	e	enum:__anon28	file:
FULLSCREEN_CURSOR_HIDDEN	fullscreen.c	/^	FULLSCREEN_CURSOR_HIDDEN = 1 << 0,$/;"	e	enum:__anon28	file:
FULLSCREEN_CURSOR_NORMAL	fullscreen.c	/^	FULLSCREEN_CURSOR_NORMAL = 1 << 1,$/;"	e	enum:__anon28	file:
FULLSCREEN_H	fullscreen.h	14;"	d
FULL_SCREEN_BUSY_MOUSE_DELAY	fullscreen.h	17;"	d
FULL_SCREEN_HIDE_MOUSE_DELAY	fullscreen.h	16;"	d
FileData	typedefs.h	/^typedef struct _FileData FileData;$/;"	t	typeref:struct:_FileData
FileDataMult	utilops.c	/^typedef struct _FileDataMult FileDataMult;$/;"	t	typeref:struct:_FileDataMult	file:
FileDataSingle	utilops.c	/^typedef struct _FileDataSingle FileDataSingle;$/;"	t	typeref:struct:_FileDataSingle	file:
FileDialog	ui_utildlg.h	/^typedef struct _FileDialog FileDialog;$/;"	t	typeref:struct:_FileDialog
FilterEntry	filelist.h	/^typedef struct _FilterEntry FilterEntry;$/;"	t	typeref:struct:_FilterEntry
FlowerGroup	pan-folder.c	/^typedef struct _FlowerGroup FlowerGroup;$/;"	t	typeref:struct:_FlowerGroup	file:
FormatExifEntry	format_raw.c	/^typedef struct _FormatExifEntry FormatExifEntry;$/;"	t	typeref:struct:_FormatExifEntry	file:
FormatExifMatchType	format_raw.h	/^} FormatExifMatchType;$/;"	t	typeref:enum:__anon51
FormatExifParseFunc	format_raw.h	/^typedef gint (* FormatExifParseFunc)(ExifData *exif, unsigned char *tiff, guint offset,$/;"	t
FormatRawEntry	format_raw.c	/^typedef struct _FormatRawEntry FormatRawEntry;$/;"	t	typeref:struct:_FormatRawEntry	file:
FormatRawExifParseFunc	format_raw.h	/^typedef gint (* FormatRawExifParseFunc)(unsigned char *data, const guint len,$/;"	t
FormatRawExifType	format_raw.h	/^} FormatRawExifType;$/;"	t	typeref:enum:__anon50
FormatRawMatchType	format_raw.h	/^} FormatRawMatchType;$/;"	t	typeref:enum:__anon49
FormatRawParseFunc	format_raw.h	/^typedef gint (* FormatRawParseFunc)(unsigned char *data, const guint len,$/;"	t
FujiExifMarkersList	format_fuji.c	/^static ExifMarker FujiExifMarkersList[] = {$/;"	v	file:
FujiTagColorTone	format_fuji.c	/^static ExifTextList FujiTagColorTone[]= {$/;"	v	file:
FujiTagFlashMode	format_fuji.c	/^static ExifTextList FujiTagFlashMode[]= {$/;"	v	file:
FujiTagFocusMode	format_fuji.c	/^static ExifTextList FujiTagFocusMode[]= {$/;"	v	file:
FujiTagNoYes	format_fuji.c	/^static ExifTextList FujiTagNoYes[]= {$/;"	v	file:
FujiTagOffOn	format_fuji.c	/^static ExifTextList FujiTagOffOn[]= {$/;"	v	file:
FujiTagPictureMode	format_fuji.c	/^static ExifTextList FujiTagPictureMode[]= {$/;"	v	file:
FujiTagSharpness	format_fuji.c	/^static ExifTextList FujiTagSharpness[] = {$/;"	v	file:
FujiTagWhiteBalance	format_fuji.c	/^static ExifTextList FujiTagWhiteBalance[]= {$/;"	v	file:
FullScreenData	typedefs.h	/^typedef struct _FullScreenData FullScreenData;$/;"	t	typeref:struct:_FullScreenData
GENERIC_DIALOG	ui_utildlg.h	16;"	d
GETTEXT_PACKAGE	Makefile	/^GETTEXT_PACKAGE = gqview$/;"	m
GETTEXT_PACKAGE	icons/Makefile	/^GETTEXT_PACKAGE = gqview$/;"	m
GETTEXT_PACKAGE	icons/svg/Makefile	/^GETTEXT_PACKAGE = gqview$/;"	m
GMOFILES	Makefile	/^GMOFILES =  ar.gmo be.gmo bg.gmo ca.gmo cs.gmo da.gmo de.gmo eo.gmo es.gmo et.gmo eu.gmo fi.gmo fr.gmo hu.gmo id.gmo it.gmo ja.gmo ko.gmo nl.gmo no.gmo pl.gmo pt_BR.gmo ro.gmo ru.gmo sk.gmo sl.gmo sv.gmo th.gmo tr.gmo uk.gmo vi.gmo zh_CN.GB2312.gmo zh_TW.gmo$/;"	m
GMOFILES	icons/Makefile	/^GMOFILES =  ar.gmo be.gmo bg.gmo ca.gmo cs.gmo da.gmo de.gmo eo.gmo es.gmo et.gmo eu.gmo fi.gmo fr.gmo hu.gmo id.gmo it.gmo ja.gmo ko.gmo nl.gmo no.gmo pl.gmo pt_BR.gmo ro.gmo ru.gmo sk.gmo sl.gmo sv.gmo th.gmo tr.gmo uk.gmo vi.gmo zh_CN.GB2312.gmo zh_TW.gmo$/;"	m
GMOFILES	icons/svg/Makefile	/^GMOFILES =  ar.gmo be.gmo bg.gmo ca.gmo cs.gmo da.gmo de.gmo eo.gmo es.gmo et.gmo eu.gmo fi.gmo fr.gmo hu.gmo id.gmo it.gmo ja.gmo ko.gmo nl.gmo no.gmo pl.gmo pt_BR.gmo ro.gmo ru.gmo sk.gmo sl.gmo sv.gmo th.gmo tr.gmo uk.gmo vi.gmo zh_CN.GB2312.gmo zh_TW.gmo$/;"	m
GMSGFMT	Makefile	/^GMSGFMT = \/scratchbox\/tools\/bin\/msgfmt$/;"	m
GMSGFMT	icons/Makefile	/^GMSGFMT = \/scratchbox\/tools\/bin\/msgfmt$/;"	m
GMSGFMT	icons/svg/Makefile	/^GMSGFMT = \/scratchbox\/tools\/bin\/msgfmt$/;"	m
GQVIEW_BUILD	pixbuf-renderer.c	25;"	d	file:
GQVIEW_CACHE_EXT_METADATA	cache.h	28;"	d
GQVIEW_CACHE_EXT_SIM	cache.h	27;"	d
GQVIEW_CACHE_EXT_THUMB	cache.h	26;"	d
GQVIEW_CACHE_LOCAL_METADATA	cache.h	24;"	d
GQVIEW_CACHE_LOCAL_THUMB	cache.h	23;"	d
GQVIEW_CACHE_RC_METADATA	cache.h	21;"	d
GQVIEW_CACHE_RC_THUMB	cache.h	20;"	d
GQVIEW_COLLECTION_FAIL_MIN	collect-io.c	25;"	d	file:
GQVIEW_COLLECTION_FAIL_PERCENT	collect-io.c	26;"	d	file:
GQVIEW_COLLECTION_MARKER	collect-io.c	23;"	d	file:
GQVIEW_EDITOR_SLOTS	gqview.h	80;"	d
GQVIEW_H	gqview.h	14;"	d
GQVIEW_RC_DIR	gqview.h	64;"	d
GQVIEW_RC_DIR_COLLECTIONS	gqview.h	65;"	d
GQVIEW_RC_DIR_TRASH	gqview.h	66;"	d
GQV_CELL_RENDERER_ICON	cellrenderericon.h	33;"	d
GQV_CELL_RENDERER_ICON_CLASS	cellrenderericon.h	34;"	d
GQV_CELL_RENDERER_ICON_GET_CLASS	cellrenderericon.h	37;"	d
GQV_IS_CELL_RENDERER_ICON	cellrenderericon.h	35;"	d
GQV_IS_CELL_RENDERER_ICON_CLASS	cellrenderericon.h	36;"	d
GQV_TYPE_CELL_RENDERER_ICON	cellrenderericon.h	32;"	d
GQvCellRendererIcon	cellrenderericon.h	/^typedef struct _GQvCellRendererIcon GQvCellRendererIcon;$/;"	t	typeref:struct:_GQvCellRendererIcon
GQvCellRendererIconClass	cellrenderericon.h	/^typedef struct _GQvCellRendererIconClass GQvCellRendererIconClass;$/;"	t	typeref:struct:_GQvCellRendererIconClass
GTK_CFLAGS	Makefile	/^GTK_CFLAGS = -pthread -D_REENTRANT -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/glib-2.0\/include -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng14 -I\/usr\/local\/include\/gtk-2.0 -I\/usr\/local\/lib\/gtk-2.0\/include -I\/usr\/local\/include\/cairo -I\/usr\/local\/include\/directfb -I\/usr\/local\/include\/pixman-1 -I\/usr\/local\/include -I\/usr\/local\/include\/atk-1.0 -I\/usr\/local\/include\/pango-1.0  $/;"	m
GTK_CFLAGS	icons/Makefile	/^GTK_CFLAGS = -pthread -D_REENTRANT -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/glib-2.0\/include -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng14 -I\/usr\/local\/include\/gtk-2.0 -I\/usr\/local\/lib\/gtk-2.0\/include -I\/usr\/local\/include\/cairo -I\/usr\/local\/include\/directfb -I\/usr\/local\/include\/pixman-1 -I\/usr\/local\/include -I\/usr\/local\/include\/atk-1.0 -I\/usr\/local\/include\/pango-1.0  $/;"	m
GTK_CFLAGS	icons/svg/Makefile	/^GTK_CFLAGS = -pthread -D_REENTRANT -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/glib-2.0\/include -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng14 -I\/usr\/local\/include\/gtk-2.0 -I\/usr\/local\/lib\/gtk-2.0\/include -I\/usr\/local\/include\/cairo -I\/usr\/local\/include\/directfb -I\/usr\/local\/include\/pixman-1 -I\/usr\/local\/include -I\/usr\/local\/include\/atk-1.0 -I\/usr\/local\/include\/pango-1.0  $/;"	m
GTK_LIBS	Makefile	/^GTK_LIBS = -pthread -L\/usr\/local\/lib -lgtk-directfb-2.0 -lgdk-directfb-2.0 -latk-1.0 -lgio-2.0 -lgdk_pixbuf-2.0 -lpangocairo-1.0 -lpango-1.0 -lcairo -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lrt -lglib-2.0  $/;"	m
GTK_LIBS	icons/Makefile	/^GTK_LIBS = -pthread -L\/usr\/local\/lib -lgtk-directfb-2.0 -lgdk-directfb-2.0 -latk-1.0 -lgio-2.0 -lgdk_pixbuf-2.0 -lpangocairo-1.0 -lpango-1.0 -lcairo -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lrt -lglib-2.0  $/;"	m
GTK_LIBS	icons/svg/Makefile	/^GTK_LIBS = -pthread -L\/usr\/local\/lib -lgtk-directfb-2.0 -lgdk-directfb-2.0 -latk-1.0 -lgio-2.0 -lgdk_pixbuf-2.0 -lpangocairo-1.0 -lpango-1.0 -lcairo -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lrt -lglib-2.0  $/;"	m
GenericDialog	ui_utildlg.h	/^typedef struct _GenericDialog GenericDialog;$/;"	t	typeref:struct:_GenericDialog
HAVE_LCMS_FALSE	Makefile	/^HAVE_LCMS_FALSE = $/;"	m
HAVE_LCMS_FALSE	icons/Makefile	/^HAVE_LCMS_FALSE = $/;"	m
HAVE_LCMS_FALSE	icons/svg/Makefile	/^HAVE_LCMS_FALSE = $/;"	m
HAVE_LCMS_TRUE	Makefile	/^HAVE_LCMS_TRUE = #$/;"	m
HAVE_LCMS_TRUE	icons/Makefile	/^HAVE_LCMS_TRUE = #$/;"	m
HAVE_LCMS_TRUE	icons/svg/Makefile	/^HAVE_LCMS_TRUE = #$/;"	m
HELP_WINDOW_HEIGHT	ui_help.c	30;"	d	file:
HELP_WINDOW_WIDTH	ui_help.c	29;"	d	file:
HISTORY_DEFAULT_KEY_COUNT	ui_bookmark.c	40;"	d	file:
HistoryComboData	ui_bookmark.c	/^typedef struct _HistoryComboData HistoryComboData;$/;"	t	typeref:struct:_HistoryComboData	file:
HistoryData	ui_bookmark.c	/^typedef struct _HistoryData HistoryData;$/;"	t	typeref:struct:_HistoryData	file:
ICONS_INLINE	icons/Makefile	/^ICONS_INLINE = \\$/;"	m
ICONS_INLINE_PAIRS	icons/Makefile	/^ICONS_INLINE_PAIRS = \\$/;"	m
ICON_DATA	view_file_icon.c	46;"	d	file:
ICON_PAIRS	Makefile	/^ICON_PAIRS = \\$/;"	m
IMAGE_AUTO_REFRESH_TIME	image.c	40;"	d	file:
IMAGE_H	image.h	14;"	d
IMAGE_LOADER_BUFFER_DEFAULT_COUNT	image-load.c	26;"	d	file:
IMAGE_LOADER_BUFFER_SIZE	image-load.c	23;"	d	file:
IMAGE_LOAD_BUFFER_COUNT	image.c	29;"	d	file:
IMAGE_LOAD_H	image-load.h	14;"	d
IMAGE_OSD_COLOR	image-overlay.h	/^	IMAGE_OSD_COLOR,$/;"	e	enum:__anon61
IMAGE_OSD_COUNT	image-overlay.h	/^	IMAGE_OSD_COUNT$/;"	e	enum:__anon61
IMAGE_OSD_DEFAULT_DURATION	image-overlay.c	73;"	d	file:
IMAGE_OSD_FIRST	image-overlay.h	/^	IMAGE_OSD_FIRST,$/;"	e	enum:__anon61
IMAGE_OSD_ICON	image-overlay.h	/^	IMAGE_OSD_ICON,$/;"	e	enum:__anon61
IMAGE_OSD_LAST	image-overlay.h	/^	IMAGE_OSD_LAST,$/;"	e	enum:__anon61
IMAGE_OSD_NONE	image-overlay.h	/^	IMAGE_OSD_NONE = 0,$/;"	e	enum:__anon61
IMAGE_OSD_ROTATE_AUTO	image-overlay.h	/^	IMAGE_OSD_ROTATE_AUTO,$/;"	e	enum:__anon61
IMAGE_OSD_ROTATE_USER	image-overlay.h	/^	IMAGE_OSD_ROTATE_USER,$/;"	e	enum:__anon61
IMAGE_OVERLAY_H	image-overlay.h	13;"	d
IMAGE_SIZE_H	info.c	32;"	d	file:
IMAGE_SIZE_W	info.c	31;"	d	file:
IMAGE_STATE_COLOR_ADJ	typedefs.h	/^	IMAGE_STATE_COLOR_ADJ	= 1 << 3,$/;"	e	enum:__anon4
IMAGE_STATE_DELAY_FLIP	typedefs.h	/^	IMAGE_STATE_DELAY_FLIP	= 1 << 6$/;"	e	enum:__anon4
IMAGE_STATE_ERROR	typedefs.h	/^	IMAGE_STATE_ERROR	= 1 << 2,$/;"	e	enum:__anon4
IMAGE_STATE_IMAGE	typedefs.h	/^	IMAGE_STATE_IMAGE	= 1 << 0,$/;"	e	enum:__anon4
IMAGE_STATE_LOADING	typedefs.h	/^	IMAGE_STATE_LOADING	= 1 << 1,$/;"	e	enum:__anon4
IMAGE_STATE_NONE	typedefs.h	/^	IMAGE_STATE_NONE	= 0,$/;"	e	enum:__anon4
IMAGE_STATE_ROTATE_AUTO	typedefs.h	/^	IMAGE_STATE_ROTATE_AUTO	= 1 << 4,$/;"	e	enum:__anon4
IMAGE_STATE_ROTATE_USER	typedefs.h	/^	IMAGE_STATE_ROTATE_USER	= 1 << 5,$/;"	e	enum:__anon4
IMAGE_THROTTLE_FACTOR	image.c	35;"	d	file:
IMAGE_THROTTLE_LARGER_IMAGES	image.c	32;"	d	file:
IMAGE_THROTTLE_THRESHOLD	image.c	38;"	d	file:
IMG_VIEW_H	img-view.h	14;"	d
INCLUDES	Makefile	/^INCLUDES = -I$(srcdir) -I$(builddir)    \\$/;"	m
INFO_H	info.h	14;"	d
INFO_IMAGE_SIZE_KEY	pan-view.c	2622;"	d	file:
INFO_SELECTED	collect-table.c	64;"	d	file:
INSTALL	Makefile	/^INSTALL = \/scratchbox\/tools\/bin\/install -c$/;"	m
INSTALL	icons/Makefile	/^INSTALL = \/scratchbox\/tools\/bin\/install -c$/;"	m
INSTALL	icons/svg/Makefile	/^INSTALL = \/scratchbox\/tools\/bin\/install -c$/;"	m
INSTALL_DATA	Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	icons/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	icons/svg/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_HEADER	Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	icons/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	icons/svg/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_PROGRAM	Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	icons/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	icons/svg/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_SCRIPT	Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	icons/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	icons/svg/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_STRIP_PROGRAM	Makefile	/^INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	icons/Makefile	/^INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	icons/svg/Makefile	/^INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s$/;"	m
INSTOBJEXT	Makefile	/^INSTOBJEXT = .mo$/;"	m
INSTOBJEXT	icons/Makefile	/^INSTOBJEXT = .mo$/;"	m
INSTOBJEXT	icons/svg/Makefile	/^INSTOBJEXT = .mo$/;"	m
INTLLIBS	Makefile	/^INTLLIBS = $/;"	m
INTLLIBS	icons/Makefile	/^INTLLIBS = $/;"	m
INTLLIBS	icons/svg/Makefile	/^INTLLIBS = $/;"	m
IS_BIG_ENDIAN	md5-util.c	41;"	d	file:
IS_LITTLE_ENDIAN	md5-util.c	42;"	d	file:
IS_PIXBUF_RENDERER	pixbuf-renderer.h	22;"	d
IS_PIXBUF_RENDERER_CLASS	pixbuf-renderer.h	23;"	d
IconData	view_file_icon.c	/^typedef struct _IconData IconData;$/;"	t	typeref:struct:_IconData	file:
ImageLoader	typedefs.h	/^typedef struct _ImageLoader ImageLoader;$/;"	t	typeref:struct:_ImageLoader
ImageOSDFlag	image-overlay.h	/^} ImageOSDFlag;$/;"	t	typeref:enum:__anon61
ImageSimilarityData	similar.h	/^typedef struct _ImageSimilarityData ImageSimilarityData;$/;"	t	typeref:struct:_ImageSimilarityData
ImageState	typedefs.h	/^} ImageState;$/;"	t	typeref:enum:__anon4
ImageTile	pixbuf-renderer.c	/^typedef struct _ImageTile ImageTile;$/;"	t	typeref:struct:_ImageTile	file:
ImageTileDisposeFunc	typedefs.h	/^typedef void (* ImageTileDisposeFunc)(ImageWindow *imd, gint x, gint y,$/;"	t
ImageTileRenderType	pixbuf-renderer.c	/^} ImageTileRenderType;$/;"	t	typeref:enum:__anon46	file:
ImageTileRequestFunc	typedefs.h	/^typedef gint (* ImageTileRequestFunc)(ImageWindow *imd, gint x, gint y,$/;"	t
ImageWindow	typedefs.h	/^typedef struct _ImageWindow ImageWindow;$/;"	t	typeref:struct:_ImageWindow
InfoData	info.h	/^typedef struct _InfoData InfoData;$/;"	t	typeref:struct:_InfoData
InfoTabGeneral	info.c	/^typedef struct _InfoTabGeneral InfoTabGeneral;$/;"	t	typeref:struct:_InfoTabGeneral	file:
InfoTabMeta	info.c	/^typedef struct _InfoTabMeta InfoTabMeta;$/;"	t	typeref:struct:_InfoTabMeta	file:
JPEG_MARKER	exif.c	946;"	d	file:
JPEG_MARKER_APP1	exif.c	949;"	d	file:
JPEG_MARKER_APP2	exif.c	950;"	d	file:
JPEG_MARKER_EOI	exif.c	948;"	d	file:
JPEG_MARKER_SOI	exif.c	947;"	d	file:
KEYWORD_COLUMN_TEXT	bar_info.c	/^	KEYWORD_COLUMN_TEXT$/;"	e	enum:__anon64	file:
KEYWORD_COLUMN_TOGGLE	bar_info.c	/^	KEYWORD_COLUMN_TOGGLE = 0,$/;"	e	enum:__anon64	file:
KEYWORD_DIALOG_HEIGHT	bar_info.c	338;"	d	file:
KEYWORD_DIALOG_WIDTH	bar_info.c	337;"	d	file:
KeywordDlg	bar_info.c	/^typedef struct _KeywordDlg KeywordDlg;$/;"	t	typeref:struct:_KeywordDlg	file:
KonMinTagColorMode	format_olympus.c	/^static ExifTextList KonMinTagColorMode[]= {$/;"	v	file:
KonMinTagQuality	format_olympus.c	/^static ExifTextList KonMinTagQuality[]= {$/;"	v	file:
LAYOUT_BOTTOM	typedefs.h	/^	LAYOUT_BOTTOM = 1 << 3$/;"	e	enum:__anon3
LAYOUT_CONFIG_H	layout_config.h	13;"	d
LAYOUT_H	layout.h	13;"	d
LAYOUT_HIDE	typedefs.h	/^	LAYOUT_HIDE   = 0,$/;"	e	enum:__anon3
LAYOUT_IMAGE_H	layout_image.h	13;"	d
LAYOUT_LEFT	typedefs.h	/^	LAYOUT_LEFT   = 1 << 0,$/;"	e	enum:__anon3
LAYOUT_RIGHT	typedefs.h	/^	LAYOUT_RIGHT  = 1 << 1,$/;"	e	enum:__anon3
LAYOUT_STYLE_SIZE	layout_config.c	229;"	d	file:
LAYOUT_TOP	typedefs.h	/^	LAYOUT_TOP    = 1 << 2,$/;"	e	enum:__anon3
LAYOUT_UTIL_H	layout_util.h	14;"	d
LCMS_LIBS	Makefile	/^LCMS_LIBS = $/;"	m
LCMS_LIBS	icons/Makefile	/^LCMS_LIBS = $/;"	m
LCMS_LIBS	icons/svg/Makefile	/^LCMS_LIBS = $/;"	m
LDFLAGS	Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	icons/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	icons/svg/Makefile	/^LDFLAGS = $/;"	m
LIBOBJS	Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	icons/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	icons/svg/Makefile	/^LIBOBJS = $/;"	m
LIBS	Makefile	/^LIBS = $/;"	m
LIBS	icons/Makefile	/^LIBS = $/;"	m
LIBS	icons/svg/Makefile	/^LIBS = $/;"	m
LINK	Makefile	/^LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@$/;"	m
LTLIBOBJS	Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	icons/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	icons/svg/Makefile	/^LTLIBOBJS = $/;"	m
LayoutConfig	layout_config.c	/^typedef struct _LayoutConfig LayoutConfig;$/;"	t	typeref:struct:_LayoutConfig	file:
LayoutLocation	typedefs.h	/^} LayoutLocation;$/;"	t	typeref:enum:__anon3
LayoutStyle	layout_config.c	/^typedef struct _LayoutStyle LayoutStyle;$/;"	t	typeref:struct:_LayoutStyle	file:
LayoutWindow	typedefs.h	/^typedef struct _LayoutWindow LayoutWindow;$/;"	t	typeref:struct:_LayoutWindow
MAINT	Makefile	/^MAINT = #$/;"	m
MAINT	icons/Makefile	/^MAINT = #$/;"	m
MAINT	icons/svg/Makefile	/^MAINT = #$/;"	m
MAINTAINER_MODE_FALSE	Makefile	/^MAINTAINER_MODE_FALSE = $/;"	m
MAINTAINER_MODE_FALSE	icons/Makefile	/^MAINTAINER_MODE_FALSE = $/;"	m
MAINTAINER_MODE_FALSE	icons/svg/Makefile	/^MAINTAINER_MODE_FALSE = $/;"	m
MAINTAINER_MODE_TRUE	Makefile	/^MAINTAINER_MODE_TRUE = #$/;"	m
MAINTAINER_MODE_TRUE	icons/Makefile	/^MAINTAINER_MODE_TRUE = #$/;"	m
MAINTAINER_MODE_TRUE	icons/svg/Makefile	/^MAINTAINER_MODE_TRUE = #$/;"	m
MAINWINDOW_DEF_HEIGHT	layout.c	35;"	d	file:
MAINWINDOW_DEF_WIDTH	layout.c	34;"	d	file:
MAIN_WINDOW_DIV_HPOS	layout.c	37;"	d	file:
MAIN_WINDOW_DIV_VPOS	layout.c	38;"	d	file:
MAKEINFO	Makefile	/^MAKEINFO = ${SHELL} \/home\/tjw\/kindle\/gqview-2.1.5\/missing --run makeinfo$/;"	m
MAKEINFO	icons/Makefile	/^MAKEINFO = ${SHELL} \/home\/tjw\/kindle\/gqview-2.1.5\/missing --run makeinfo$/;"	m
MAKEINFO	icons/svg/Makefile	/^MAKEINFO = ${SHELL} \/home\/tjw\/kindle\/gqview-2.1.5\/missing --run makeinfo$/;"	m
MARKER_HEIGHT	collect-table.c	37;"	d	file:
MARKER_ICON	ui_bookmark.c	365;"	d	file:
MARKER_PATH	ui_bookmark.c	364;"	d	file:
MARKER_WIDTH	collect-table.c	36;"	d	file:
MATCH_IS_BETWEEN	search.c	1423;"	d	file:
MD5Context	md5-util.h	/^} MD5Context;$/;"	t	typeref:struct:_MD5Context
MD5STEP	md5-util.c	213;"	d	file:
MD5_UTIL_H	md5-util.h	26;"	d
MENU_CHOICE_COLUMN_NAME	search.c	/^	MENU_CHOICE_COLUMN_NAME = 0,$/;"	e	enum:__anon27	file:
MENU_CHOICE_COLUMN_VALUE	search.c	/^	MENU_CHOICE_COLUMN_VALUE$/;"	e	enum:__anon27	file:
MENU_EDIT_ACTION_OFFSET	layout_util.c	42;"	d	file:
MENU_H	menu.h	14;"	d
MKINSTALLDIRS	Makefile	/^MKINSTALLDIRS = .\/mkinstalldirs$/;"	m
MKINSTALLDIRS	icons/Makefile	/^MKINSTALLDIRS = .\/mkinstalldirs$/;"	m
MKINSTALLDIRS	icons/svg/Makefile	/^MKINSTALLDIRS = .\/mkinstalldirs$/;"	m
MOUSEWHEEL_SCROLL_SIZE	gqview.h	78;"	d
MSGFMT	Makefile	/^MSGFMT = \/scratchbox\/tools\/bin\/msgfmt$/;"	m
MSGFMT	icons/Makefile	/^MSGFMT = \/scratchbox\/tools\/bin\/msgfmt$/;"	m
MSGFMT	icons/svg/Makefile	/^MSGFMT = \/scratchbox\/tools\/bin\/msgfmt$/;"	m
MatchFileData	search.c	/^typedef struct _MatchFileData MatchFileData;$/;"	t	typeref:struct:_MatchFileData	file:
MatchList	search.c	/^typedef struct _MatchList MatchList;$/;"	t	typeref:struct:_MatchList	file:
MatchType	search.c	/^} MatchType;$/;"	t	typeref:enum:__anon25	file:
NORMAL_INSTALL	Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	icons/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	icons/svg/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_UNINSTALL	Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	icons/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	icons/svg/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
N_	intl.h	10;"	d
N_	intl.h	14;"	d
N_	intl.h	8;"	d
NikonAFPoint	format_nikon.c	/^static ExifTextList NikonAFPoint[]= {$/;"	v	file:
NikonExifMarkersList1	format_nikon.c	/^static ExifMarker NikonExifMarkersList1[] = {$/;"	v	file:
NikonExifMarkersList2	format_nikon.c	/^static ExifMarker NikonExifMarkersList2[] = {$/;"	v	file:
NikonTag2FlashComp	format_nikon.c	/^static ExifTextList NikonTag2FlashComp[]= {$/;"	v	file:
NikonTag2FlashUsed	format_nikon.c	/^static ExifTextList NikonTag2FlashUsed[]= {$/;"	v	file:
NikonTag2LensType	format_nikon.c	/^static ExifTextList NikonTag2LensType[]= {$/;"	v	file:
NikonTagColorMode	format_nikon.c	/^static ExifTextList NikonTagColorMode[]= {$/;"	v	file:
NikonTagConverter	format_nikon.c	/^static ExifTextList NikonTagConverter[]= {$/;"	v	file:
NikonTagISOSensitivity	format_nikon.c	/^static ExifTextList NikonTagISOSensitivity[]= {$/;"	v	file:
NikonTagImgAdjust	format_nikon.c	/^static ExifTextList NikonTagImgAdjust[]= {$/;"	v	file:
NikonTagQuality	format_nikon.c	/^static ExifTextList NikonTagQuality[]= {$/;"	v	file:
NikonTagWhiteBalance	format_nikon.c	/^static ExifTextList NikonTagWhiteBalance[]= {$/;"	v	file:
NodeData	view_dir_tree.c	/^typedef struct _NodeData NodeData;$/;"	t	typeref:struct:_NodeData	file:
OBJEXT	Makefile	/^OBJEXT = o$/;"	m
OBJEXT	icons/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	icons/svg/Makefile	/^OBJEXT = o$/;"	m
OSDIcon	image-overlay.c	/^typedef struct _OSDIcon OSDIcon;$/;"	t	typeref:struct:_OSDIcon	file:
OSD_DATA	image-overlay.c	68;"	d	file:
OSD_INFO_X	image-overlay.c	70;"	d	file:
OSD_INFO_Y	image-overlay.c	71;"	d	file:
OlympusExifMarkersList	format_olympus.c	/^static ExifMarker OlympusExifMarkersList[] = {$/;"	v	file:
OlympusPanoramaDirection	format_olympus.c	/^static ExifTextList OlympusPanoramaDirection[]= {$/;"	v	file:
OlympusShootingMode	format_olympus.c	/^static ExifTextList OlympusShootingMode[]= {$/;"	v	file:
OlympusTagContrast	format_olympus.c	/^static ExifTextList OlympusTagContrast[]= {$/;"	v	file:
OlympusTagFlashMode	format_olympus.c	/^static ExifTextList OlympusTagFlashMode[]= {$/;"	v	file:
OlympusTagFocusMode	format_olympus.c	/^static ExifTextList OlympusTagFocusMode[]= {$/;"	v	file:
OlympusTagJpegQuality	format_olympus.c	/^static ExifTextList OlympusTagJpegQuality[]= {$/;"	v	file:
OlympusTagMacro	format_olympus.c	/^static ExifTextList OlympusTagMacro[]= {$/;"	v	file:
OlympusTagSharpness	format_olympus.c	/^static ExifTextList OlympusTagSharpness[]= {$/;"	v	file:
OlympusWB	format_olympus.c	/^static ExifTextList OlympusWB[]= {$/;"	v	file:
OlympusWBColorTemp	format_olympus.c	/^static ExifTextList OlympusWBColorTemp[]= {$/;"	v	file:
OverlayData	pixbuf-renderer.c	/^typedef struct _OverlayData OverlayData;$/;"	t	typeref:struct:_OverlayData	file:
OverlayStateData	image-overlay.c	/^typedef struct _OverlayStateData OverlayStateData;$/;"	t	typeref:struct:_OverlayStateData	file:
PACKAGE	Makefile	/^PACKAGE = gqview$/;"	m
PACKAGE	icons/Makefile	/^PACKAGE = gqview$/;"	m
PACKAGE	icons/svg/Makefile	/^PACKAGE = gqview$/;"	m
PACKAGE_BUGREPORT	Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	icons/Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	icons/svg/Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_NAME	Makefile	/^PACKAGE_NAME = $/;"	m
PACKAGE_NAME	icons/Makefile	/^PACKAGE_NAME = $/;"	m
PACKAGE_NAME	icons/svg/Makefile	/^PACKAGE_NAME = $/;"	m
PACKAGE_STRING	Makefile	/^PACKAGE_STRING = $/;"	m
PACKAGE_STRING	icons/Makefile	/^PACKAGE_STRING = $/;"	m
PACKAGE_STRING	icons/svg/Makefile	/^PACKAGE_STRING = $/;"	m
PACKAGE_TARNAME	Makefile	/^PACKAGE_TARNAME = $/;"	m
PACKAGE_TARNAME	icons/Makefile	/^PACKAGE_TARNAME = $/;"	m
PACKAGE_TARNAME	icons/svg/Makefile	/^PACKAGE_TARNAME = $/;"	m
PACKAGE_VERSION	Makefile	/^PACKAGE_VERSION = $/;"	m
PACKAGE_VERSION	icons/Makefile	/^PACKAGE_VERSION = $/;"	m
PACKAGE_VERSION	icons/svg/Makefile	/^PACKAGE_VERSION = $/;"	m
PAGE_LAYOUT_HEIGHT	print.c	60;"	d	file:
PAGE_LAYOUT_WIDTH	print.c	59;"	d	file:
PANE_DIVIDER_SIZE	layout.c	45;"	d	file:
PAN_BACKGROUND_COLOR	pan-types.h	54;"	d
PAN_BORDER_1	pan-types.h	/^	PAN_BORDER_1 = 1 << 0,$/;"	e	enum:__anon57
PAN_BORDER_2	pan-types.h	/^	PAN_BORDER_2 = 1 << 1,$/;"	e	enum:__anon57
PAN_BORDER_3	pan-types.h	/^	PAN_BORDER_3 = 1 << 2,$/;"	e	enum:__anon57
PAN_BORDER_4	pan-types.h	/^	PAN_BORDER_4 = 1 << 3$/;"	e	enum:__anon57
PAN_BORDER_BOTTOM	pan-types.h	133;"	d
PAN_BORDER_LEFT	pan-types.h	134;"	d
PAN_BORDER_NONE	pan-types.h	/^	PAN_BORDER_NONE = 0,$/;"	e	enum:__anon57
PAN_BORDER_RIGHT	pan-types.h	132;"	d
PAN_BORDER_TOP	pan-types.h	131;"	d
PAN_BOX_ALPHA	pan-types.h	61;"	d
PAN_BOX_BORDER	pan-types.h	62;"	d
PAN_BOX_COLOR	pan-types.h	60;"	d
PAN_BOX_OUTLINE_ALPHA	pan-types.h	66;"	d
PAN_BOX_OUTLINE_COLOR	pan-types.h	65;"	d
PAN_BOX_OUTLINE_THICKNESS	pan-types.h	64;"	d
PAN_CAL_DAY_ALPHA	pan-calendar.c	29;"	d	file:
PAN_CAL_DAY_BORDER	pan-calendar.c	30;"	d	file:
PAN_CAL_DAY_BORDER_COLOR	pan-calendar.c	31;"	d	file:
PAN_CAL_DAY_COLOR	pan-calendar.c	28;"	d	file:
PAN_CAL_DAY_HEIGHT	pan-calendar.c	26;"	d	file:
PAN_CAL_DAY_TEXT_COLOR	pan-calendar.c	32;"	d	file:
PAN_CAL_DAY_WIDTH	pan-calendar.c	25;"	d	file:
PAN_CAL_DOT_ALPHA	pan-calendar.c	43;"	d	file:
PAN_CAL_DOT_COLOR	pan-calendar.c	42;"	d	file:
PAN_CAL_DOT_GAP	pan-calendar.c	41;"	d	file:
PAN_CAL_DOT_SIZE	pan-calendar.c	40;"	d	file:
PAN_CAL_MONTH_ALPHA	pan-calendar.c	35;"	d	file:
PAN_CAL_MONTH_BORDER	pan-calendar.c	36;"	d	file:
PAN_CAL_MONTH_BORDER_COLOR	pan-calendar.c	37;"	d	file:
PAN_CAL_MONTH_COLOR	pan-calendar.c	34;"	d	file:
PAN_CAL_MONTH_TEXT_COLOR	pan-calendar.c	38;"	d	file:
PAN_CAL_POPUP_ALPHA	pan-calendar.c	20;"	d	file:
PAN_CAL_POPUP_BORDER	pan-calendar.c	21;"	d	file:
PAN_CAL_POPUP_BORDER_COLOR	pan-calendar.c	22;"	d	file:
PAN_CAL_POPUP_COLOR	pan-calendar.c	19;"	d	file:
PAN_CAL_POPUP_TEXT_COLOR	pan-calendar.c	23;"	d	file:
PAN_DATE_LENGTH_DAY	pan-types.h	/^	PAN_DATE_LENGTH_DAY,$/;"	e	enum:__anon58
PAN_DATE_LENGTH_EXACT	pan-types.h	/^	PAN_DATE_LENGTH_EXACT,$/;"	e	enum:__anon58
PAN_DATE_LENGTH_HOUR	pan-types.h	/^	PAN_DATE_LENGTH_HOUR,$/;"	e	enum:__anon58
PAN_DATE_LENGTH_MONTH	pan-types.h	/^	PAN_DATE_LENGTH_MONTH,$/;"	e	enum:__anon58
PAN_DATE_LENGTH_WEEK	pan-types.h	/^	PAN_DATE_LENGTH_WEEK,$/;"	e	enum:__anon58
PAN_DATE_LENGTH_YEAR	pan-types.h	/^	PAN_DATE_LENGTH_YEAR$/;"	e	enum:__anon58
PAN_GRID_ALPHA	pan-types.h	58;"	d
PAN_GRID_COLOR	pan-types.h	57;"	d
PAN_GRID_SIZE	pan-types.h	56;"	d
PAN_GROUP_MAX	pan-types.h	80;"	d
PAN_IMAGE_SIZE_10	pan-types.h	/^	PAN_IMAGE_SIZE_10,$/;"	e	enum:__anon54
PAN_IMAGE_SIZE_100	pan-types.h	/^	PAN_IMAGE_SIZE_100,$/;"	e	enum:__anon54
PAN_IMAGE_SIZE_25	pan-types.h	/^	PAN_IMAGE_SIZE_25,$/;"	e	enum:__anon54
PAN_IMAGE_SIZE_33	pan-types.h	/^	PAN_IMAGE_SIZE_33,$/;"	e	enum:__anon54
PAN_IMAGE_SIZE_50	pan-types.h	/^	PAN_IMAGE_SIZE_50,$/;"	e	enum:__anon54
PAN_IMAGE_SIZE_COUNT	pan-types.h	/^	PAN_IMAGE_SIZE_COUNT$/;"	e	enum:__anon54
PAN_IMAGE_SIZE_THUMB_DOTS	pan-types.h	/^	PAN_IMAGE_SIZE_THUMB_DOTS = 0,$/;"	e	enum:__anon54
PAN_IMAGE_SIZE_THUMB_LARGE	pan-types.h	/^	PAN_IMAGE_SIZE_THUMB_LARGE,$/;"	e	enum:__anon54
PAN_IMAGE_SIZE_THUMB_NONE	pan-types.h	/^	PAN_IMAGE_SIZE_THUMB_NONE,$/;"	e	enum:__anon54
PAN_IMAGE_SIZE_THUMB_NORMAL	pan-types.h	/^	PAN_IMAGE_SIZE_THUMB_NORMAL,$/;"	e	enum:__anon54
PAN_IMAGE_SIZE_THUMB_SMALL	pan-types.h	/^	PAN_IMAGE_SIZE_THUMB_SMALL,$/;"	e	enum:__anon54
PAN_ITEM_BOX	pan-types.h	/^	PAN_ITEM_BOX,$/;"	e	enum:__anon55
PAN_ITEM_IMAGE	pan-types.h	/^	PAN_ITEM_IMAGE$/;"	e	enum:__anon55
PAN_ITEM_NONE	pan-types.h	/^	PAN_ITEM_NONE,$/;"	e	enum:__anon55
PAN_ITEM_TEXT	pan-types.h	/^	PAN_ITEM_TEXT,$/;"	e	enum:__anon55
PAN_ITEM_THUMB	pan-types.h	/^	PAN_ITEM_THUMB,$/;"	e	enum:__anon55
PAN_ITEM_TRIANGLE	pan-types.h	/^	PAN_ITEM_TRIANGLE,$/;"	e	enum:__anon55
PAN_LAYOUT_CALENDAR	pan-types.h	/^	PAN_LAYOUT_CALENDAR,$/;"	e	enum:__anon53
PAN_LAYOUT_COUNT	pan-types.h	/^	PAN_LAYOUT_COUNT$/;"	e	enum:__anon53
PAN_LAYOUT_FOLDERS_FLOWER	pan-types.h	/^	PAN_LAYOUT_FOLDERS_FLOWER,$/;"	e	enum:__anon53
PAN_LAYOUT_FOLDERS_LINEAR	pan-types.h	/^	PAN_LAYOUT_FOLDERS_LINEAR,$/;"	e	enum:__anon53
PAN_LAYOUT_GRID	pan-types.h	/^	PAN_LAYOUT_GRID,$/;"	e	enum:__anon53
PAN_LAYOUT_TIMELINE	pan-types.h	/^	PAN_LAYOUT_TIMELINE = 0,$/;"	e	enum:__anon53
PAN_OUTLINE_ALPHA	pan-types.h	52;"	d
PAN_OUTLINE_COLOR_1	pan-types.h	50;"	d
PAN_OUTLINE_COLOR_2	pan-types.h	51;"	d
PAN_OUTLINE_THICKNESS	pan-types.h	49;"	d
PAN_POPUP_ALPHA	pan-types.h	74;"	d
PAN_POPUP_BORDER	pan-types.h	75;"	d
PAN_POPUP_BORDER_COLOR	pan-types.h	76;"	d
PAN_POPUP_COLOR	pan-types.h	73;"	d
PAN_POPUP_TEXT_COLOR	pan-types.h	77;"	d
PAN_PREF_EXIF_PAN_DATE	pan-view.c	49;"	d	file:
PAN_PREF_GROUP	pan-view.c	47;"	d	file:
PAN_PREF_HIDE_WARNING	pan-view.c	48;"	d	file:
PAN_PREF_INFO_EXIF	pan-view.c	51;"	d	file:
PAN_PREF_INFO_IMAGE	pan-view.c	50;"	d	file:
PAN_SHADOW_ALPHA	pan-types.h	47;"	d
PAN_SHADOW_COLOR	pan-types.h	46;"	d
PAN_SHADOW_FADE	pan-types.h	45;"	d
PAN_SHADOW_OFFSET	pan-types.h	44;"	d
PAN_TEXT_ATTR_BOLD	pan-types.h	/^	PAN_TEXT_ATTR_BOLD = 1 << 0,$/;"	e	enum:__anon56
PAN_TEXT_ATTR_HEADING	pan-types.h	/^	PAN_TEXT_ATTR_HEADING = 1 << 1,$/;"	e	enum:__anon56
PAN_TEXT_ATTR_MARKUP	pan-types.h	/^	PAN_TEXT_ATTR_MARKUP = 1 << 2$/;"	e	enum:__anon56
PAN_TEXT_ATTR_NONE	pan-types.h	/^	PAN_TEXT_ATTR_NONE = 0,$/;"	e	enum:__anon56
PAN_TEXT_BORDER_SIZE	pan-types.h	68;"	d
PAN_TEXT_COLOR	pan-types.h	69;"	d
PAN_THUMB_GAP	pan-types.h	40;"	d
PAN_THUMB_GAP_DOTS	pan-types.h	35;"	d
PAN_THUMB_GAP_HUGE	pan-types.h	39;"	d
PAN_THUMB_GAP_LARGE	pan-types.h	38;"	d
PAN_THUMB_GAP_NORMAL	pan-types.h	37;"	d
PAN_THUMB_GAP_SMALL	pan-types.h	36;"	d
PAN_THUMB_SIZE	pan-types.h	33;"	d
PAN_THUMB_SIZE_DOTS	pan-types.h	28;"	d
PAN_THUMB_SIZE_LARGE	pan-types.h	32;"	d
PAN_THUMB_SIZE_NONE	pan-types.h	29;"	d
PAN_THUMB_SIZE_NORMAL	pan-types.h	31;"	d
PAN_THUMB_SIZE_SMALL	pan-types.h	30;"	d
PAN_TILE_SIZE	pan-view.c	41;"	d	file:
PAN_TYPES_H	pan-types.h	14;"	d
PAN_VIEW_H	pan-view.h	14;"	d
PAN_WINDOW_DEFAULT_HEIGHT	pan-view.c	39;"	d	file:
PAN_WINDOW_DEFAULT_WIDTH	pan-view.c	38;"	d	file:
PAPER_ORIENTATION_COUNT	print.c	/^	PAPER_ORIENTATION_COUNT$/;"	e	enum:__anon37	file:
PAPER_ORIENTATION_LANDSCAPE	print.c	/^	PAPER_ORIENTATION_LANDSCAPE,$/;"	e	enum:__anon37	file:
PAPER_ORIENTATION_PORTRAIT	print.c	/^	PAPER_ORIENTATION_PORTRAIT = 0,$/;"	e	enum:__anon37	file:
PAPER_UNIT_CM	print.c	/^	PAPER_UNIT_CM,$/;"	e	enum:__anon36	file:
PAPER_UNIT_COUNT	print.c	/^	PAPER_UNIT_COUNT$/;"	e	enum:__anon36	file:
PAPER_UNIT_INCH	print.c	/^	PAPER_UNIT_INCH,$/;"	e	enum:__anon36	file:
PAPER_UNIT_MM	print.c	/^	PAPER_UNIT_MM,$/;"	e	enum:__anon36	file:
PAPER_UNIT_PICAS	print.c	/^	PAPER_UNIT_PICAS,$/;"	e	enum:__anon36	file:
PAPER_UNIT_POINTS	print.c	/^	PAPER_UNIT_POINTS = 0,$/;"	e	enum:__anon36	file:
PATH_SEL_USE_HEADINGS	ui_pathsel.c	47;"	d	file:
PATH_SEPARATOR	Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	icons/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	icons/svg/Makefile	/^PATH_SEPARATOR = :$/;"	m
PI	pan-folder.c	111;"	d	file:
PIXBUF_INLINE_BROKEN	pixbuf_util.h	28;"	d
PIXBUF_INLINE_FOLDER_CLOSED	pixbuf_util.h	23;"	d
PIXBUF_INLINE_FOLDER_LOCKED	pixbuf_util.h	24;"	d
PIXBUF_INLINE_FOLDER_OPEN	pixbuf_util.h	25;"	d
PIXBUF_INLINE_FOLDER_UP	pixbuf_util.h	26;"	d
PIXBUF_INLINE_ICON	pixbuf_util.h	29;"	d
PIXBUF_INLINE_ICON_BOOK	pixbuf_util.h	35;"	d
PIXBUF_INLINE_ICON_CONFIG	pixbuf_util.h	36;"	d
PIXBUF_INLINE_ICON_FLOAT	pixbuf_util.h	32;"	d
PIXBUF_INLINE_ICON_THUMB	pixbuf_util.h	33;"	d
PIXBUF_INLINE_ICON_TOOLS	pixbuf_util.h	37;"	d
PIXBUF_INLINE_ICON_VIEW	pixbuf_util.h	38;"	d
PIXBUF_INLINE_LOGO	pixbuf_util.h	30;"	d
PIXBUF_INLINE_SCROLLER	pixbuf_util.h	27;"	d
PIXBUF_RENDERER	pixbuf-renderer.h	20;"	d
PIXBUF_RENDERER_CLASS	pixbuf-renderer.h	21;"	d
PIXBUF_RENDERER_GET_CLASS	pixbuf-renderer.h	24;"	d
PIXBUF_RENDERER_H	pixbuf-renderer.h	13;"	d
PIXBUF_UTIL_H	pixbuf_util.h	14;"	d
PKG_CONFIG	Makefile	/^PKG_CONFIG = \/scratchbox\/tools\/bin\/pkg-config$/;"	m
PKG_CONFIG	icons/Makefile	/^PKG_CONFIG = \/scratchbox\/tools\/bin\/pkg-config$/;"	m
PKG_CONFIG	icons/svg/Makefile	/^PKG_CONFIG = \/scratchbox\/tools\/bin\/pkg-config$/;"	m
POFILES	Makefile	/^POFILES =  ar.po be.po bg.po ca.po cs.po da.po de.po eo.po es.po et.po eu.po fi.po fr.po hu.po id.po it.po ja.po ko.po nl.po no.po pl.po pt_BR.po ro.po ru.po sk.po sl.po sv.po th.po tr.po uk.po vi.po zh_CN.GB2312.po zh_TW.po$/;"	m
POFILES	icons/Makefile	/^POFILES =  ar.po be.po bg.po ca.po cs.po da.po de.po eo.po es.po et.po eu.po fi.po fr.po hu.po id.po it.po ja.po ko.po nl.po no.po pl.po pt_BR.po ro.po ru.po sk.po sl.po sv.po th.po tr.po uk.po vi.po zh_CN.GB2312.po zh_TW.po$/;"	m
POFILES	icons/svg/Makefile	/^POFILES =  ar.po be.po bg.po ca.po cs.po da.po de.po eo.po es.po et.po eu.po fi.po fr.po hu.po id.po it.po ja.po ko.po nl.po no.po pl.po pt_BR.po ro.po ru.po sk.po sl.po sv.po th.po tr.po uk.po vi.po zh_CN.GB2312.po zh_TW.po$/;"	m
POSTSCRIPT_LOCALE	print.c	79;"	d	file:
POST_INSTALL	Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	icons/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	icons/svg/Makefile	/^POST_INSTALL = :$/;"	m
POST_UNINSTALL	Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	icons/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	icons/svg/Makefile	/^POST_UNINSTALL = :$/;"	m
POSUB	Makefile	/^POSUB = po$/;"	m
POSUB	icons/Makefile	/^POSUB = po$/;"	m
POSUB	icons/svg/Makefile	/^POSUB = po$/;"	m
PO_IN_DATADIR_FALSE	Makefile	/^PO_IN_DATADIR_FALSE = $/;"	m
PO_IN_DATADIR_FALSE	icons/Makefile	/^PO_IN_DATADIR_FALSE = $/;"	m
PO_IN_DATADIR_FALSE	icons/svg/Makefile	/^PO_IN_DATADIR_FALSE = $/;"	m
PO_IN_DATADIR_TRUE	Makefile	/^PO_IN_DATADIR_TRUE = $/;"	m
PO_IN_DATADIR_TRUE	icons/Makefile	/^PO_IN_DATADIR_TRUE = $/;"	m
PO_IN_DATADIR_TRUE	icons/svg/Makefile	/^PO_IN_DATADIR_TRUE = $/;"	m
PREFERENCES_H	preferences.h	14;"	d
PREF_LIST_MARKER_DOUBLE	ui_misc.c	1457;"	d	file:
PREF_LIST_MARKER_INT	ui_misc.c	1456;"	d	file:
PREF_LIST_MARKER_STRING	ui_misc.c	1458;"	d	file:
PREF_PAD_BORDER	ui_misc.h	31;"	d
PREF_PAD_BUTTON_GAP	ui_misc.h	40;"	d
PREF_PAD_BUTTON_ICON_GAP	ui_misc.h	52;"	d
PREF_PAD_BUTTON_SPACE	ui_misc.h	42;"	d
PREF_PAD_GAP	ui_misc.h	27;"	d
PREF_PAD_GROUP	ui_misc.h	35;"	d
PREF_PAD_INDENT	ui_misc.h	33;"	d
PREF_PAD_SPACE	ui_misc.h	29;"	d
PREF_PAD_TOOLBAR_GAP	ui_misc.h	47;"	d
PREF_RADIO_VALUE_KEY	ui_misc.c	430;"	d	file:
PRE_INSTALL	Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	icons/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	icons/svg/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_UNINSTALL	Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	icons/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	icons/svg/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRINT_DLG_HEIGHT	print.c	40;"	d	file:
PRINT_DLG_PREVIEW_HEIGHT	print.c	43;"	d	file:
PRINT_DLG_PREVIEW_WIDTH	print.c	42;"	d	file:
PRINT_DLG_WIDTH	print.c	39;"	d	file:
PRINT_FILE_COUNT	print.c	/^	PRINT_FILE_COUNT$/;"	e	enum:__anon33	file:
PRINT_FILE_JPG_HIGH	print.c	/^	PRINT_FILE_JPG_HIGH,$/;"	e	enum:__anon33	file:
PRINT_FILE_JPG_LOW	print.c	/^	PRINT_FILE_JPG_LOW = 0,$/;"	e	enum:__anon33	file:
PRINT_FILE_JPG_NORMAL	print.c	/^	PRINT_FILE_JPG_NORMAL,$/;"	e	enum:__anon33	file:
PRINT_FILE_PNG	print.c	/^	PRINT_FILE_PNG,$/;"	e	enum:__anon33	file:
PRINT_H	print.h	14;"	d
PRINT_LAYOUT_COUNT	print.c	/^	PRINT_LAYOUT_COUNT$/;"	e	enum:__anon31	file:
PRINT_LAYOUT_IMAGE	print.c	/^	PRINT_LAYOUT_IMAGE = 0,$/;"	e	enum:__anon31	file:
PRINT_LAYOUT_PROOF	print.c	/^	PRINT_LAYOUT_PROOF,$/;"	e	enum:__anon31	file:
PRINT_LPR_COMMAND	print.c	35;"	d	file:
PRINT_LPR_CUSTOM	print.c	36;"	d	file:
PRINT_LPR_QUERY	print.c	37;"	d	file:
PRINT_MARGIN_DEFAULT	print.c	51;"	d	file:
PRINT_MAX_HEIGHT	print.c	49;"	d	file:
PRINT_MAX_WIDTH	print.c	48;"	d	file:
PRINT_MIN_HEIGHT	print.c	47;"	d	file:
PRINT_MIN_WIDTH	print.c	46;"	d	file:
PRINT_OUTPUT_COUNT	print.c	/^	PRINT_OUTPUT_COUNT$/;"	e	enum:__anon32	file:
PRINT_OUTPUT_PS_CUSTOM	print.c	/^	PRINT_OUTPUT_PS_CUSTOM,$/;"	e	enum:__anon32	file:
PRINT_OUTPUT_PS_FILE	print.c	/^	PRINT_OUTPUT_PS_FILE,$/;"	e	enum:__anon32	file:
PRINT_OUTPUT_PS_LPR	print.c	/^	PRINT_OUTPUT_PS_LPR = 0,$/;"	e	enum:__anon32	file:
PRINT_OUTPUT_RGB_FILE	print.c	/^	PRINT_OUTPUT_RGB_FILE,$/;"	e	enum:__anon32	file:
PRINT_PREF_CUSTOM_HEIGHT	print.c	95;"	d	file:
PRINT_PREF_CUSTOM_WIDTH	print.c	94;"	d	file:
PRINT_PREF_DPI	print.c	89;"	d	file:
PRINT_PREF_FORMAT	print.c	88;"	d	file:
PRINT_PREF_GROUP	print.c	83;"	d	file:
PRINT_PREF_MARGIN_BOTTOM	print.c	99;"	d	file:
PRINT_PREF_MARGIN_LEFT	print.c	96;"	d	file:
PRINT_PREF_MARGIN_RIGHT	print.c	97;"	d	file:
PRINT_PREF_MARGIN_TOP	print.c	98;"	d	file:
PRINT_PREF_ORIENTATION	print.c	92;"	d	file:
PRINT_PREF_OUTPUT	print.c	87;"	d	file:
PRINT_PREF_PRINTERC	print.c	103;"	d	file:
PRINT_PREF_PROOF_HEIGHT	print.c	101;"	d	file:
PRINT_PREF_PROOF_WIDTH	print.c	100;"	d	file:
PRINT_PREF_SAVE	print.c	85;"	d	file:
PRINT_PREF_SIZE	print.c	91;"	d	file:
PRINT_PREF_UNITS	print.c	90;"	d	file:
PRINT_PREVIEW_SCALE	print.c	63;"	d	file:
PRINT_PROOF_DEFAULT_SIZE	print.c	55;"	d	file:
PRINT_PROOF_MARGIN	print.c	56;"	d	file:
PRINT_PROOF_MAX_SIZE	print.c	54;"	d	file:
PRINT_PROOF_MIN_SIZE	print.c	53;"	d	file:
PRINT_PS_DPI_DEFAULT	print.c	66;"	d	file:
PRINT_PS_DPI_MIN	print.c	67;"	d	file:
PRINT_PS_MASK_B	print.c	73;"	d	file:
PRINT_PS_MASK_G	print.c	72;"	d	file:
PRINT_PS_MASK_R	print.c	71;"	d	file:
PRINT_PS_MAX_INTERP	print.c	69;"	d	file:
PRINT_SOURCE_ALL	print.c	/^	PRINT_SOURCE_ALL,$/;"	e	enum:__anon30	file:
PRINT_SOURCE_COUNT	print.c	/^	PRINT_SOURCE_COUNT$/;"	e	enum:__anon30	file:
PRINT_SOURCE_IMAGE	print.c	/^	PRINT_SOURCE_IMAGE = 0,$/;"	e	enum:__anon30	file:
PRINT_SOURCE_SELECTION	print.c	/^	PRINT_SOURCE_SELECTION,$/;"	e	enum:__anon30	file:
PRINT_TEXT_PADDING	print.c	76;"	d	file:
PROGRAMS	Makefile	/^PROGRAMS = $(bin_PROGRAMS)$/;"	m
PROGRESS_WIDTH	layout.c	42;"	d	file:
PROP_0	pixbuf-renderer.c	/^	PROP_0,$/;"	e	enum:__anon48	file:
PROP_BACKGROUND_GDK	cellrenderericon.c	/^	PROP_BACKGROUND_GDK,$/;"	e	enum:__anon41	file:
PROP_BACKGROUND_SET	cellrenderericon.c	/^	PROP_BACKGROUND_SET,$/;"	e	enum:__anon41	file:
PROP_CACHE_SIZE_DISPLAY	pixbuf-renderer.c	/^	PROP_CACHE_SIZE_DISPLAY,$/;"	e	enum:__anon48	file:
PROP_CACHE_SIZE_TILES	pixbuf-renderer.c	/^	PROP_CACHE_SIZE_TILES,$/;"	e	enum:__anon48	file:
PROP_COMPLETE	pixbuf-renderer.c	/^	PROP_COMPLETE,$/;"	e	enum:__anon48	file:
PROP_DELAY_FLIP	pixbuf-renderer.c	/^	PROP_DELAY_FLIP,$/;"	e	enum:__anon48	file:
PROP_DITHER_QUALITY	pixbuf-renderer.c	/^	PROP_DITHER_QUALITY,$/;"	e	enum:__anon48	file:
PROP_FIXED_HEIGHT	cellrenderericon.c	/^	PROP_FIXED_HEIGHT,$/;"	e	enum:__anon41	file:
PROP_FIXED_WIDTH	cellrenderericon.c	/^	PROP_FIXED_WIDTH,$/;"	e	enum:__anon41	file:
PROP_FOCUSED	cellrenderericon.c	/^	PROP_FOCUSED,$/;"	e	enum:__anon41	file:
PROP_FOREGROUND_GDK	cellrenderericon.c	/^	PROP_FOREGROUND_GDK,$/;"	e	enum:__anon41	file:
PROP_FOREGROUND_SET	cellrenderericon.c	/^	PROP_FOREGROUND_SET,$/;"	e	enum:__anon41	file:
PROP_LOADING	pixbuf-renderer.c	/^	PROP_LOADING,$/;"	e	enum:__anon48	file:
PROP_PIXBUF	cellrenderericon.c	/^	PROP_PIXBUF,$/;"	e	enum:__anon41	file:
PROP_SCROLL_RESET	pixbuf-renderer.c	/^	PROP_SCROLL_RESET,$/;"	e	enum:__anon48	file:
PROP_SHOW_TEXT	cellrenderericon.c	/^	PROP_SHOW_TEXT$/;"	e	enum:__anon41	file:
PROP_TEXT	cellrenderericon.c	/^	PROP_TEXT,$/;"	e	enum:__anon41	file:
PROP_WINDOW_FIT	pixbuf-renderer.c	/^	PROP_WINDOW_FIT,$/;"	e	enum:__anon48	file:
PROP_WINDOW_LIMIT	pixbuf-renderer.c	/^	PROP_WINDOW_LIMIT,$/;"	e	enum:__anon48	file:
PROP_WINDOW_LIMIT_VALUE	pixbuf-renderer.c	/^	PROP_WINDOW_LIMIT_VALUE$/;"	e	enum:__anon48	file:
PROP_ZERO	cellrenderericon.c	/^	PROP_ZERO,$/;"	e	enum:__anon41	file:
PROP_ZOOM_2PASS	pixbuf-renderer.c	/^	PROP_ZOOM_2PASS,$/;"	e	enum:__anon48	file:
PROP_ZOOM_EXPAND	pixbuf-renderer.c	/^	PROP_ZOOM_EXPAND,$/;"	e	enum:__anon48	file:
PROP_ZOOM_MAX	pixbuf-renderer.c	/^	PROP_ZOOM_MAX,$/;"	e	enum:__anon48	file:
PROP_ZOOM_MIN	pixbuf-renderer.c	/^	PROP_ZOOM_MIN,$/;"	e	enum:__anon48	file:
PROP_ZOOM_QUALITY	pixbuf-renderer.c	/^	PROP_ZOOM_QUALITY,$/;"	e	enum:__anon48	file:
PR_ALPHA_CHECK1	pixbuf-renderer.c	54;"	d	file:
PR_ALPHA_CHECK2	pixbuf-renderer.c	55;"	d	file:
PR_ALPHA_CHECK_SIZE	pixbuf-renderer.c	56;"	d	file:
PR_CACHE_SIZE_DEFAULT	pixbuf-renderer.c	37;"	d	file:
PR_DRAG_SCROLL_THRESHHOLD	pixbuf-renderer.c	44;"	d	file:
PR_MIN_SCALE_SIZE	pixbuf-renderer.c	61;"	d	file:
PR_PAN_SHIFT_MULTIPLIER	pixbuf-renderer.c	47;"	d	file:
PR_SCROLLER_DEAD_ZONE	pixbuf-renderer.c	51;"	d	file:
PR_SCROLLER_UPDATES_PER_SEC	pixbuf-renderer.c	50;"	d	file:
PR_SCROLL_RESET_CENTER	pixbuf-renderer.h	/^	PR_SCROLL_RESET_CENTER,$/;"	e	enum:__anon20
PR_SCROLL_RESET_NOCHANGE	pixbuf-renderer.h	/^	PR_SCROLL_RESET_NOCHANGE$/;"	e	enum:__anon20
PR_SCROLL_RESET_TOPLEFT	pixbuf-renderer.h	/^	PR_SCROLL_RESET_TOPLEFT = 0,$/;"	e	enum:__anon20
PR_TILE_SIZE	pixbuf-renderer.c	34;"	d	file:
PR_ZOOM_MAX	pixbuf-renderer.c	41;"	d	file:
PR_ZOOM_MIN	pixbuf-renderer.c	40;"	d	file:
PURGE_DIALOG_WIDTH	cache_maint.c	41;"	d	file:
PanBorderType	pan-types.h	/^} PanBorderType;$/;"	t	typeref:enum:__anon57
PanCacheData	pan-types.h	/^typedef struct _PanCacheData PanCacheData;$/;"	t	typeref:struct:_PanCacheData
PanDateLengthType	pan-types.h	/^} PanDateLengthType;$/;"	t	typeref:enum:__anon58
PanGrid	pan-types.h	/^typedef struct _PanGrid PanGrid;$/;"	t	typeref:struct:_PanGrid
PanImageSize	pan-types.h	/^} PanImageSize;$/;"	t	typeref:enum:__anon54
PanItem	pan-types.h	/^typedef struct _PanItem PanItem;$/;"	t	typeref:struct:_PanItem
PanItemType	pan-types.h	/^} PanItemType;$/;"	t	typeref:enum:__anon55
PanLayoutType	pan-types.h	/^} PanLayoutType;$/;"	t	typeref:enum:__anon53
PanTextAlignment	pan-types.h	/^typedef struct _PanTextAlignment PanTextAlignment;$/;"	t	typeref:struct:_PanTextAlignment
PanTextAttrType	pan-types.h	/^} PanTextAttrType;$/;"	t	typeref:enum:__anon56
PanWindow	pan-types.h	/^typedef struct _PanWindow PanWindow;$/;"	t	typeref:struct:_PanWindow
PaperOrientation	print.c	/^} PaperOrientation;$/;"	t	typeref:enum:__anon37	file:
PaperSize	print.c	/^typedef struct _PaperSize PaperSize;$/;"	t	typeref:struct:_PaperSize	file:
PaperUnits	print.c	/^} PaperUnits;$/;"	t	typeref:enum:__anon36	file:
PathData	view_dir_tree.c	/^typedef struct _PathData PathData;$/;"	t	typeref:struct:_PathData	file:
PipeError	print.c	/^typedef struct _PipeError PipeError;$/;"	t	typeref:struct:_PipeError	file:
PixbufInline	pixbuf_util.c	/^typedef struct _PixbufInline PixbufInline;$/;"	t	typeref:struct:_PixbufInline	file:
PixbufRenderer	pixbuf-renderer.h	/^typedef struct _PixbufRenderer PixbufRenderer;$/;"	t	typeref:struct:_PixbufRenderer
PixbufRendererClass	pixbuf-renderer.h	/^typedef struct _PixbufRendererClass PixbufRendererClass;$/;"	t	typeref:struct:_PixbufRendererClass
PixbufRendererScrollResetType	pixbuf-renderer.h	/^} PixbufRendererScrollResetType;$/;"	t	typeref:enum:__anon20
PixbufRendererTileDisposeFunc	pixbuf-renderer.h	/^typedef void (* PixbufRendererTileDisposeFunc)(PixbufRenderer *pr, gint x, gint y,$/;"	t
PixbufRendererTileRequestFunc	pixbuf-renderer.h	/^typedef gint (* PixbufRendererTileRequestFunc)(PixbufRenderer *pr, gint x, gint y,$/;"	t
PixmapFolders	typedefs.h	/^typedef struct _PixmapFolders PixmapFolders;$/;"	t	typeref:struct:_PixmapFolders
PrintFileFormat	print.c	/^} PrintFileFormat;$/;"	t	typeref:enum:__anon33	file:
PrintLayout	print.c	/^} PrintLayout;$/;"	t	typeref:enum:__anon31	file:
PrintOutput	print.c	/^} PrintOutput;$/;"	t	typeref:enum:__anon32	file:
PrintSource	print.c	/^} PrintSource;$/;"	t	typeref:enum:__anon30	file:
PrintWindow	print.c	/^typedef struct _PrintWindow PrintWindow;$/;"	t	typeref:struct:_PrintWindow	file:
QueueData	pixbuf-renderer.c	/^typedef struct _QueueData QueueData;$/;"	t	typeref:struct:_QueueData	file:
RCFILE_H	rcfile.h	14;"	d
RC_FILE_NAME	gqview.h	68;"	d
RC_HISTORY_NAME	main.c	1064;"	d	file:
RECURSIVE_TARGETS	Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \\$/;"	m
RECURSIVE_TARGETS	icons/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \\$/;"	m
REMOTE_H	remote.h	14;"	d
REMOTE_SERVER_BACKLOG	remote.c	26;"	d	file:
RENAME_COLUMN_COUNT	utilops.c	/^	RENAME_COLUMN_COUNT$/;"	e	enum:__anon66	file:
RENAME_COLUMN_NAME	utilops.c	/^	RENAME_COLUMN_NAME,$/;"	e	enum:__anon66	file:
RENAME_COLUMN_PATH	utilops.c	/^	RENAME_COLUMN_PATH = 0,$/;"	e	enum:__anon66	file:
RENAME_COLUMN_PREVIEW	utilops.c	/^	RENAME_COLUMN_PREVIEW,$/;"	e	enum:__anon66	file:
RENAME_PRESS_DELAY	ui_pathsel.c	45;"	d	file:
RENAME_TYPE_AUTO	utilops.c	/^	RENAME_TYPE_AUTO$/;"	e	enum:__anon67	file:
RENAME_TYPE_FORMATTED	utilops.c	/^	RENAME_TYPE_FORMATTED,$/;"	e	enum:__anon67	file:
RENAME_TYPE_MANUAL	utilops.c	/^	RENAME_TYPE_MANUAL = 0,$/;"	e	enum:__anon67	file:
RENDER_FORMAT_PREVIEW	print.c	/^	RENDER_FORMAT_PREVIEW,$/;"	e	enum:__anon34	file:
RENDER_FORMAT_PS	print.c	/^	RENDER_FORMAT_PS$/;"	e	enum:__anon34	file:
RENDER_FORMAT_RGB	print.c	/^	RENDER_FORMAT_RGB,$/;"	e	enum:__anon34	file:
ROTATE_BUFFER_HEIGHT	pixbuf_util.c	211;"	d	file:
ROTATE_BUFFER_WIDTH	pixbuf_util.c	210;"	d	file:
RemoteClient	remote.c	/^typedef struct _RemoteClient RemoteClient;$/;"	t	typeref:struct:_RemoteClient	file:
RemoteCommandEntry	main.c	/^typedef struct _RemoteCommandEntry RemoteCommandEntry;$/;"	t	typeref:struct:_RemoteCommandEntry	file:
RemoteConnection	remote.h	/^typedef struct _RemoteConnection RemoteConnection;$/;"	t	typeref:struct:_RemoteConnection
RemoteReadFunc	remote.h	/^typedef void RemoteReadFunc(RemoteConnection *rc, const char *text, gpointer data);$/;"	t
RenameDataMult	utilops.c	/^typedef struct _RenameDataMult RenameDataMult;$/;"	t	typeref:struct:_RenameDataMult	file:
RenameType	utilops.c	/^} RenameType;$/;"	t	typeref:enum:__anon67	file:
RenderFormat	print.c	/^} RenderFormat;$/;"	t	typeref:enum:__anon34	file:
SCROLL_MARKNAME	ui_help.c	39;"	d	file:
SCROLL_RESET_CENTER	gqview.h	75;"	d
SCROLL_RESET_NOCHANGE	gqview.h	76;"	d
SCROLL_RESET_TOPLEFT	gqview.h	74;"	d
SEARCH_BUFFER_FLUSH_SIZE	search.c	49;"	d	file:
SEARCH_BUFFER_MATCH_HIT	search.c	47;"	d	file:
SEARCH_BUFFER_MATCH_LOAD	search.c	46;"	d	file:
SEARCH_BUFFER_MATCH_MISS	search.c	48;"	d	file:
SEARCH_COLUMN_COUNT	search.c	/^	SEARCH_COLUMN_COUNT	\/* total columns *\/$/;"	e	enum:__anon26	file:
SEARCH_COLUMN_DATE	search.c	/^	SEARCH_COLUMN_DATE,$/;"	e	enum:__anon26	file:
SEARCH_COLUMN_DIMENSIONS	search.c	/^	SEARCH_COLUMN_DIMENSIONS,$/;"	e	enum:__anon26	file:
SEARCH_COLUMN_NAME	search.c	/^	SEARCH_COLUMN_NAME,$/;"	e	enum:__anon26	file:
SEARCH_COLUMN_PATH	search.c	/^	SEARCH_COLUMN_PATH,$/;"	e	enum:__anon26	file:
SEARCH_COLUMN_POINTER	search.c	/^	SEARCH_COLUMN_POINTER = 0,$/;"	e	enum:__anon26	file:
SEARCH_COLUMN_RANK	search.c	/^	SEARCH_COLUMN_RANK,$/;"	e	enum:__anon26	file:
SEARCH_COLUMN_SIZE	search.c	/^	SEARCH_COLUMN_SIZE,$/;"	e	enum:__anon26	file:
SEARCH_COLUMN_THUMB	search.c	/^	SEARCH_COLUMN_THUMB,$/;"	e	enum:__anon26	file:
SEARCH_H	search.h	14;"	d
SEARCH_MATCH_ALL	search.c	/^	SEARCH_MATCH_ALL,$/;"	e	enum:__anon25	file:
SEARCH_MATCH_ANY	search.c	/^	SEARCH_MATCH_ANY$/;"	e	enum:__anon25	file:
SEARCH_MATCH_BETWEEN	search.c	/^	SEARCH_MATCH_BETWEEN,$/;"	e	enum:__anon25	file:
SEARCH_MATCH_CONTAINS	search.c	/^	SEARCH_MATCH_CONTAINS,$/;"	e	enum:__anon25	file:
SEARCH_MATCH_EQUAL	search.c	/^	SEARCH_MATCH_EQUAL,$/;"	e	enum:__anon25	file:
SEARCH_MATCH_NONE	search.c	/^	SEARCH_MATCH_NONE,$/;"	e	enum:__anon25	file:
SEARCH_MATCH_OVER	search.c	/^	SEARCH_MATCH_OVER,$/;"	e	enum:__anon25	file:
SEARCH_MATCH_UNDER	search.c	/^	SEARCH_MATCH_UNDER,$/;"	e	enum:__anon25	file:
SELECTION_FOCUS	collect-table.c	/^	SELECTION_FOCUS		= 1 << 2$/;"	e	enum:__anon40	file:
SELECTION_FOCUS	view_file_icon.c	/^	SELECTION_FOCUS		= 1 << 2$/;"	e	enum:__anon60	file:
SELECTION_NONE	collect-table.c	/^	SELECTION_NONE		= 0,$/;"	e	enum:__anon40	file:
SELECTION_NONE	view_file_icon.c	/^	SELECTION_NONE		= 0,$/;"	e	enum:__anon60	file:
SELECTION_PRELIGHT	collect-table.c	/^	SELECTION_PRELIGHT	= 1 << 1,$/;"	e	enum:__anon40	file:
SELECTION_PRELIGHT	view_file_icon.c	/^	SELECTION_PRELIGHT	= 1 << 1,$/;"	e	enum:__anon60	file:
SELECTION_SELECTED	collect-table.c	/^	SELECTION_SELECTED	= 1 << 0,$/;"	e	enum:__anon40	file:
SELECTION_SELECTED	view_file_icon.c	/^	SELECTION_SELECTED	= 1 << 0,$/;"	e	enum:__anon60	file:
SERVER_MAX_CLIENTS	remote.c	24;"	d	file:
SET_MAKE	Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	icons/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	icons/svg/Makefile	/^SET_MAKE = $/;"	m
SHELL	Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	icons/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	icons/svg/Makefile	/^SHELL = \/bin\/sh$/;"	m
SIDEBAR_WIDTH	layout_util.c	1206;"	d	file:
SIGNAL_CLICKED	pixbuf-renderer.c	/^	SIGNAL_CLICKED,$/;"	e	enum:__anon47	file:
SIGNAL_COUNT	pixbuf-renderer.c	/^	SIGNAL_COUNT$/;"	e	enum:__anon47	file:
SIGNAL_RENDER_COMPLETE	pixbuf-renderer.c	/^	SIGNAL_RENDER_COMPLETE,$/;"	e	enum:__anon47	file:
SIGNAL_SCROLL_NOTIFY	pixbuf-renderer.c	/^	SIGNAL_SCROLL_NOTIFY,$/;"	e	enum:__anon47	file:
SIGNAL_ZOOM	pixbuf-renderer.c	/^	SIGNAL_ZOOM = 0,$/;"	e	enum:__anon47	file:
SIMILAR_H	similar.h	14;"	d
SIZER_DATA_KEY	ui_misc.c	1149;"	d	file:
SIZER_POS_BOTTOM	ui_misc.h	/^	SIZER_POS_BOTTOM = 1 << 3$/;"	e	enum:__anon21
SIZER_POS_LEFT	ui_misc.h	/^	SIZER_POS_LEFT   = 1 << 0,$/;"	e	enum:__anon21
SIZER_POS_RIGHT	ui_misc.h	/^	SIZER_POS_RIGHT  = 1 << 1,$/;"	e	enum:__anon21
SIZER_POS_TOP	ui_misc.h	/^	SIZER_POS_TOP    = 1 << 2,$/;"	e	enum:__anon21
SLIDESHOW_H	slideshow.h	14;"	d
SLIDESHOW_MAX_SECONDS	slideshow.h	19;"	d
SLIDESHOW_MIN_SECONDS	slideshow.h	18;"	d
SLIDESHOW_SUBSECOND_PRECISION	slideshow.h	17;"	d
SORT_KEY_COLLECTIONS	bar_sort.c	77;"	d	file:
SORT_KEY_FOLDERS	bar_sort.c	76;"	d	file:
SORT_NAME	typedefs.h	/^	SORT_NAME,$/;"	e	enum:__anon1
SORT_NONE	typedefs.h	/^	SORT_NONE,$/;"	e	enum:__anon1
SORT_NUMBER	typedefs.h	/^	SORT_NUMBER$/;"	e	enum:__anon1
SORT_PATH	typedefs.h	/^	SORT_PATH,$/;"	e	enum:__anon1
SORT_SIZE	typedefs.h	/^	SORT_SIZE,$/;"	e	enum:__anon1
SORT_TIME	typedefs.h	/^	SORT_TIME,$/;"	e	enum:__anon1
SOURCES	Makefile	/^SOURCES = $(gqview_SOURCES)$/;"	m
SOURCES	icons/Makefile	/^SOURCES =$/;"	m
SOURCES	icons/svg/Makefile	/^SOURCES =$/;"	m
SPINNER_FRAMES	ui_spinner.c	29;"	d	file:
SPINNER_SPEED	ui_spinner.h	17;"	d
STRIP	Makefile	/^STRIP = $/;"	m
STRIP	icons/Makefile	/^STRIP = $/;"	m
STRIP	icons/svg/Makefile	/^STRIP = $/;"	m
STYLE_SHIFT_STANDARD	ui_tree_edit.h	84;"	d
SUBDIRS	Makefile	/^SUBDIRS = icons$/;"	m
SUBDIRS	icons/Makefile	/^SUBDIRS = svg$/;"	m
ScreenData	fullscreen.h	/^typedef struct _ScreenData ScreenData;$/;"	t	typeref:struct:_ScreenData
SearchData	search.c	/^typedef struct _SearchData SearchData;$/;"	t	typeref:struct:_SearchData	file:
SelectionType	collect-table.c	/^} SelectionType;$/;"	t	typeref:enum:__anon40	file:
SelectionType	view_file_icon.c	/^} SelectionType;$/;"	t	typeref:enum:__anon60	file:
SizerData	ui_misc.c	/^typedef struct _SizerData SizerData;$/;"	t	typeref:struct:_SizerData	file:
SizerPositionType	ui_misc.h	/^} SizerPositionType;$/;"	t	typeref:enum:__anon21
SlideShowData	typedefs.h	/^typedef struct _SlideShowData SlideShowData;$/;"	t	typeref:struct:_SlideShowData
SortActionType	bar_info.c	/^} SortActionType;$/;"	t	typeref:enum:__anon63	file:
SortActionType	bar_sort.c	/^} SortActionType;$/;"	t	typeref:enum:__anon10	file:
SortData	bar_sort.c	/^typedef struct _SortData SortData;$/;"	t	typeref:struct:_SortData	file:
SortModeType	bar_sort.c	/^} SortModeType;$/;"	t	typeref:enum:__anon9	file:
SortSelectionType	bar_sort.c	/^} SortSelectionType;$/;"	t	typeref:enum:__anon11	file:
SortType	typedefs.h	/^} SortType;$/;"	t	typeref:enum:__anon1
SourceTile	pixbuf-renderer.c	/^typedef struct _SourceTile SourceTile;$/;"	t	typeref:struct:_SourceTile	file:
SpinnerData	ui_spinner.c	/^typedef struct _SpinnerData SpinnerData;$/;"	t	typeref:struct:_SpinnerData	file:
TAB_COMPLETION_ENABLE_POPUP_MENU	ui_tabcomp.c	41;"	d	file:
TAB_COMP_POPUP_MAX	ui_tabcomp.c	42;"	d	file:
TAG_EXIFMAKERNOTE	exif.c	101;"	d	file:
TAG_EXIFOFFSET	exif.c	100;"	d	file:
TARGET_APP_COLLECTION_MEMBER	dnd.h	/^	TARGET_APP_COLLECTION_MEMBER,$/;"	e	enum:__anon12
TARGET_TEXT_PLAIN	dnd.h	/^	TARGET_TEXT_PLAIN$/;"	e	enum:__anon12
TARGET_TEXT_PLAIN	ui_bookmark.c	/^	TARGET_TEXT_PLAIN$/;"	e	enum:__anon19	file:
TARGET_TEXT_PLAIN	ui_pathsel.c	/^	TARGET_TEXT_PLAIN$/;"	e	enum:__anon6	file:
TARGET_URI_LIST	dnd.h	/^	TARGET_URI_LIST,$/;"	e	enum:__anon12
TARGET_URI_LIST	ui_bookmark.c	/^	TARGET_URI_LIST,$/;"	e	enum:__anon19	file:
TARGET_URI_LIST	ui_pathsel.c	/^	TARGET_URI_LIST,$/;"	e	enum:__anon6	file:
TARGET_X_URL	ui_bookmark.c	/^	TARGET_X_URL,$/;"	e	enum:__anon19	file:
TEXT_INFO_DIMENSIONS	print.c	/^	TEXT_INFO_DIMENSIONS = 1 << 3$/;"	e	enum:__anon35	file:
TEXT_INFO_FILEDATE	print.c	/^	TEXT_INFO_FILEDATE = 1 << 1,$/;"	e	enum:__anon35	file:
TEXT_INFO_FILENAME	print.c	/^	TEXT_INFO_FILENAME = 1 << 0,$/;"	e	enum:__anon35	file:
TEXT_INFO_FILESIZE	print.c	/^	TEXT_INFO_FILESIZE = 1 << 2,$/;"	e	enum:__anon35	file:
THUMB_BORDER_PADDING	collect-table.c	46;"	d	file:
THUMB_BORDER_PADDING	view_file_icon.c	42;"	d	file:
THUMB_FOLDER_FAIL	thumb_standard.h	21;"	d
THUMB_FOLDER_GLOBAL	thumb_standard.h	17;"	d
THUMB_FOLDER_LARGE	thumb_standard.h	20;"	d
THUMB_FOLDER_LOCAL	thumb_standard.h	18;"	d
THUMB_FOLDER_NORMAL	thumb_standard.h	19;"	d
THUMB_H	thumb.h	14;"	d
THUMB_MARKER_APP	thumb_standard.c	50;"	d	file:
THUMB_MARKER_HEIGHT	thumb_standard.c	49;"	d	file:
THUMB_MARKER_MTIME	thumb_standard.c	46;"	d	file:
THUMB_MARKER_SIZE	thumb_standard.c	47;"	d	file:
THUMB_MARKER_URI	thumb_standard.c	45;"	d	file:
THUMB_MARKER_WIDTH	thumb_standard.c	48;"	d	file:
THUMB_MAX_ICON_WIDTH	collect-table.c	43;"	d	file:
THUMB_MAX_ICON_WIDTH	view_file_icon.c	39;"	d	file:
THUMB_MIN_ICON_WIDTH	collect-table.c	42;"	d	file:
THUMB_MIN_ICON_WIDTH	view_file_icon.c	38;"	d	file:
THUMB_NAME_EXTENSION	thumb_standard.h	22;"	d
THUMB_PERMS_FOLDER	thumb_standard.c	52;"	d	file:
THUMB_PERMS_THUMB	thumb_standard.c	53;"	d	file:
THUMB_SIZE_LARGE	thumb_standard.c	43;"	d	file:
THUMB_SIZE_NORMAL	thumb_standard.c	42;"	d	file:
THUMB_STANDARD_H	thumb_standard.h	14;"	d
TILE_RENDER_ALL	pixbuf-renderer.c	/^	TILE_RENDER_ALL		\/* render the whole tile *\/$/;"	e	enum:__anon46	file:
TILE_RENDER_AREA	pixbuf-renderer.c	/^	TILE_RENDER_AREA,	\/* render an area of the tile *\/$/;"	e	enum:__anon46	file:
TILE_RENDER_NONE	pixbuf-renderer.c	/^	TILE_RENDER_NONE = 0,	\/* do nothing *\/$/;"	e	enum:__anon46	file:
TMaintMove	thumb_standard.c	/^typedef struct _TMaintMove TMaintMove;$/;"	t	typeref:struct:_TMaintMove	file:
TOOLWINDOW_DEF_HEIGHT	layout.c	41;"	d	file:
TOOLWINDOW_DEF_WIDTH	layout.c	40;"	d	file:
TYPEDEFS_H	typedefs.h	14;"	d
TYPE_PIXBUF_RENDERER	pixbuf-renderer.h	19;"	d
TabCompData	ui_tabcomp.c	/^typedef struct _TabCompData TabCompData;$/;"	t	typeref:struct:_TabCompData	file:
TabData	info.c	/^typedef struct _TabData TabData;$/;"	t	typeref:struct:_TabData	file:
TextInfo	print.c	/^} TextInfo;$/;"	t	typeref:enum:__anon35	file:
ThumbLoader	typedefs.h	/^typedef struct _ThumbLoader ThumbLoader;$/;"	t	typeref:struct:_ThumbLoader
ThumbLoaderFunc	typedefs.h	/^typedef void (* ThumbLoaderFunc)(ThumbLoader *tl, gpointer data);$/;"	t
ThumbLoaderStd	thumb_standard.h	/^typedef struct _ThumbLoaderStd ThumbLoaderStd;$/;"	t	typeref:struct:_ThumbLoaderStd
ThumbLoaderStdFunc	thumb_standard.h	/^typedef void (* ThumbLoaderStdFunc)(ThumbLoaderStd *tl, gpointer data);$/;"	t
ThumbSize	preferences.c	/^typedef struct _ThumbSize ThumbSize;$/;"	t	typeref:struct:_ThumbSize	file:
ThumbValidate	thumb_standard.c	/^typedef struct _ThumbValidate ThumbValidate;$/;"	t	typeref:struct:_ThumbValidate	file:
TreeEditData	ui_tree_edit.h	/^typedef struct _TreeEditData TreeEditData;$/;"	t	typeref:struct:_TreeEditData
UI_BOOKMARK_H	ui_bookmark.h	14;"	d
UI_FILEOPS_H	ui_fileops.h	14;"	d
UI_HELP_H	ui_help.h	14;"	d
UI_MENU_H	ui_menu.h	14;"	d
UI_MISC_H	ui_misc.h	14;"	d
UI_PATHSEL_H	ui_pathsel.h	13;"	d
UI_SPINNER_H	ui_spinner.h	14;"	d
UI_TABCOMP_H	ui_tabcomp.h	13;"	d
UI_TREE_EDIT_H	ui_tree_edit.h	14;"	d
UI_UTILDLG_H	ui_utildlg.h	13;"	d
UNIX_PATH_MAX	remote.c	30;"	d	file:
USE_NLS	Makefile	/^USE_NLS = yes$/;"	m
USE_NLS	icons/Makefile	/^USE_NLS = yes$/;"	m
USE_NLS	icons/svg/Makefile	/^USE_NLS = yes$/;"	m
UTILITY_DELETE_MAX_DEPTH	utilops.c	2720;"	d	file:
UTILITY_LIST_MIN_HEIGHT	utilops.c	2717;"	d	file:
UTILITY_LIST_MIN_WIDTH	utilops.c	2716;"	d	file:
UTILITY_TYPE_COPY	utilops.c	/^	UTILITY_TYPE_COPY,$/;"	e	enum:__anon68	file:
UTILITY_TYPE_DELETE	utilops.c	/^	UTILITY_TYPE_DELETE,$/;"	e	enum:__anon68	file:
UTILITY_TYPE_DELETE_FOLDER	utilops.c	/^	UTILITY_TYPE_DELETE_FOLDER$/;"	e	enum:__anon68	file:
UTILITY_TYPE_DELETE_LINK	utilops.c	/^	UTILITY_TYPE_DELETE_LINK,$/;"	e	enum:__anon68	file:
UTILITY_TYPE_MOVE	utilops.c	/^	UTILITY_TYPE_MOVE,$/;"	e	enum:__anon68	file:
UTILITY_TYPE_NONE	utilops.c	/^	UTILITY_TYPE_NONE = 0,$/;"	e	enum:__anon68	file:
UTILITY_TYPE_RENAME	utilops.c	/^	UTILITY_TYPE_RENAME,$/;"	e	enum:__anon68	file:
UTILOPS_H	utilops.h	14;"	d
UtilityData	utilops.c	/^typedef struct _UtilityData UtilityData;$/;"	t	typeref:struct:_UtilityData	file:
UtilityType	utilops.c	/^} UtilityType;$/;"	t	typeref:enum:__anon68	file:
VDLIST_PAD	view_dir_list.c	30;"	d	file:
VDTREE_INDENT	view_dir_tree.c	31;"	d	file:
VDTREE_PAD	view_dir_tree.c	32;"	d	file:
VERSION	Makefile	/^VERSION = 2.1.5$/;"	m
VERSION	icons/Makefile	/^VERSION = 2.1.5$/;"	m
VERSION	icons/svg/Makefile	/^VERSION = 2.1.5$/;"	m
VFICON_MAX_COLUMNS	view_file_icon.c	41;"	d	file:
VFICON_TIP_DELAY	view_file_icon.c	44;"	d	file:
VIEW_DIR_LIST_H	view_dir_list.h	13;"	d
VIEW_DIR_TREE_H	view_dir_tree.h	13;"	d
VIEW_FILE_ICON_H	view_file_icon.h	13;"	d
VIEW_FILE_LIST_H	view_file_list.h	13;"	d
ViewDirList	typedefs.h	/^typedef struct _ViewDirList ViewDirList;$/;"	t	typeref:struct:_ViewDirList
ViewDirTree	typedefs.h	/^typedef struct _ViewDirTree ViewDirTree;$/;"	t	typeref:struct:_ViewDirTree
ViewFileIcon	typedefs.h	/^typedef struct _ViewFileIcon ViewFileIcon;$/;"	t	typeref:struct:_ViewFileIcon
ViewFileList	typedefs.h	/^typedef struct _ViewFileList ViewFileList;$/;"	t	typeref:struct:_ViewFileList
ViewWindow	img-view.c	/^typedef struct _ViewWindow ViewWindow;$/;"	t	typeref:struct:_ViewWindow	file:
XGETTEXT	Makefile	/^XGETTEXT = \/scratchbox\/tools\/bin\/xgettext$/;"	m
XGETTEXT	icons/Makefile	/^XGETTEXT = \/scratchbox\/tools\/bin\/xgettext$/;"	m
XGETTEXT	icons/svg/Makefile	/^XGETTEXT = \/scratchbox\/tools\/bin\/xgettext$/;"	m
XSCREENSAVER_BINARY	fullscreen.c	175;"	d	file:
XSCREENSAVER_COMMAND	fullscreen.c	176;"	d	file:
XV_BUFFER	thumb.c	546;"	d	file:
XV_BUFFER	thumb.c	580;"	d	file:
ZOOM_INCREMENT	pan-view.c	43;"	d	file:
ZOOM_LABEL_WIDTH	layout.c	43;"	d	file:
ZOOM_LABEL_WIDTH	pan-view.c	44;"	d	file:
ZOOM_RESET_FIT_WINDOW	gqview.h	71;"	d
ZOOM_RESET_NONE	gqview.h	72;"	d
ZOOM_RESET_ORIGINAL	gqview.h	70;"	d
_	intl.h	13;"	d
_	intl.h	6;"	d
_AutoScrollData	ui_tree_edit.c	/^struct _AutoScrollData$/;"	s	file:
_BarInfoData	bar_info.c	/^struct _BarInfoData$/;"	s	file:
_BookButtonData	ui_bookmark.c	/^struct _BookButtonData$/;"	s	file:
_BookMarkData	ui_bookmark.c	/^struct _BookMarkData$/;"	s	file:
_BookPropData	ui_bookmark.c	/^struct _BookPropData$/;"	s	file:
_CMData	cache_maint.c	/^struct _CMData$/;"	s	file:
_CacheData	cache.h	/^struct _CacheData$/;"	s
_CacheLoader	cache-loader.h	/^struct _CacheLoader {$/;"	s
_CacheManager	cache_maint.c	/^struct _CacheManager$/;"	s	file:
_CleanData	cache_maint.c	/^struct _CleanData$/;"	s	file:
_CollectInfo	typedefs.h	/^struct _CollectInfo$/;"	s
_CollectManagerAction	collect-io.c	/^struct _CollectManagerAction$/;"	s	file:
_CollectManagerEntry	collect-io.c	/^struct _CollectManagerEntry$/;"	s	file:
_CollectTable	typedefs.h	/^struct _CollectTable$/;"	s
_CollectWindow	typedefs.h	/^struct _CollectWindow$/;"	s
_CollectionData	typedefs.h	/^struct _CollectionData$/;"	s
_ColorMan	color-man.h	/^struct _ColorMan {$/;"	s
_ColorManCache	color-man.c	/^struct _ColorManCache {$/;"	s	file:
_ColumnData	collect-table.c	/^struct _ColumnData$/;"	s	file:
_ColumnData	view_file_icon.c	/^struct _ColumnData$/;"	s	file:
_DateSelection	ui_misc.c	/^struct _DateSelection$/;"	s	file:
_DestDel_Data	ui_pathsel.c	/^struct _DestDel_Data$/;"	s	file:
_Dest_Data	ui_pathsel.c	/^struct _Dest_Data$/;"	s	file:
_DupeItem	dupe.h	/^struct _DupeItem$/;"	s
_DupeMatch	dupe.h	/^struct _DupeMatch$/;"	s
_DupeWindow	dupe.h	/^struct _DupeWindow$/;"	s
_EditorVerboseData	editors.c	/^struct _EditorVerboseData {$/;"	s	file:
_ExifBar	bar_exif.c	/^struct _ExifBar$/;"	s	file:
_ExifData	exif.h	/^struct _ExifData$/;"	s
_ExifFormatAttrib	exif.h	/^struct _ExifFormatAttrib$/;"	s
_ExifFormattedText	exif.h	/^struct _ExifFormattedText$/;"	s
_ExifItem	exif.h	/^struct _ExifItem$/;"	s
_ExifMarker	exif.h	/^struct _ExifMarker$/;"	s
_ExifRational	exif.h	/^struct _ExifRational$/;"	s
_ExifTextList	exif.h	/^struct _ExifTextList$/;"	s
_FileData	typedefs.h	/^struct _FileData {$/;"	s
_FileDataMult	utilops.c	/^struct _FileDataMult$/;"	s	file:
_FileDataSingle	utilops.c	/^struct _FileDataSingle$/;"	s	file:
_FileDialog	ui_utildlg.h	/^struct _FileDialog$/;"	s
_FilterEntry	filelist.h	/^struct _FilterEntry {$/;"	s
_FlowerGroup	pan-folder.c	/^struct _FlowerGroup {$/;"	s	file:
_FormatExifEntry	format_raw.c	/^struct _FormatExifEntry {$/;"	s	file:
_FormatRawEntry	format_raw.c	/^struct _FormatRawEntry {$/;"	s	file:
_FullScreenData	typedefs.h	/^struct _FullScreenData$/;"	s
_GNU_SOURCE	gqview.h	21;"	d
_GQvCellRendererIcon	cellrenderericon.h	/^struct _GQvCellRendererIcon$/;"	s
_GQvCellRendererIconClass	cellrenderericon.h	/^struct _GQvCellRendererIconClass$/;"	s
_GenericDialog	ui_utildlg.h	/^struct _GenericDialog$/;"	s
_HistoryComboData	ui_bookmark.c	/^struct _HistoryComboData$/;"	s	file:
_HistoryData	ui_bookmark.c	/^struct _HistoryData$/;"	s	file:
_IconData	view_file_icon.c	/^struct _IconData$/;"	s	file:
_ImageLoader	typedefs.h	/^struct _ImageLoader$/;"	s
_ImageSimilarityData	similar.h	/^struct _ImageSimilarityData$/;"	s
_ImageTile	pixbuf-renderer.c	/^struct _ImageTile$/;"	s	file:
_ImageWindow	typedefs.h	/^struct _ImageWindow$/;"	s
_InfoData	info.h	/^struct _InfoData$/;"	s
_InfoTabGeneral	info.c	/^struct _InfoTabGeneral$/;"	s	file:
_InfoTabMeta	info.c	/^struct _InfoTabMeta$/;"	s	file:
_KeywordDlg	bar_info.c	/^struct _KeywordDlg$/;"	s	file:
_LayoutConfig	layout_config.c	/^struct _LayoutConfig$/;"	s	file:
_LayoutStyle	layout_config.c	/^struct _LayoutStyle$/;"	s	file:
_LayoutWindow	typedefs.h	/^struct _LayoutWindow$/;"	s
_MD5Context	md5-util.h	/^typedef struct _MD5Context {$/;"	s
_MatchFileData	search.c	/^struct _MatchFileData$/;"	s	file:
_MatchList	search.c	/^struct _MatchList$/;"	s	file:
_NodeData	view_dir_tree.c	/^struct _NodeData$/;"	s	file:
_OSDIcon	image-overlay.c	/^struct _OSDIcon {$/;"	s	file:
_OverlayData	pixbuf-renderer.c	/^struct _OverlayData$/;"	s	file:
_OverlayStateData	image-overlay.c	/^struct _OverlayStateData {$/;"	s	file:
_PanCacheData	pan-types.h	/^struct _PanCacheData {$/;"	s
_PanGrid	pan-types.h	/^struct _PanGrid {$/;"	s
_PanItem	pan-types.h	/^struct _PanItem {$/;"	s
_PanTextAlignment	pan-types.h	/^struct _PanTextAlignment {$/;"	s
_PanWindow	pan-types.h	/^struct _PanWindow$/;"	s
_PaperSize	print.c	/^struct _PaperSize {$/;"	s	file:
_PathData	view_dir_tree.c	/^struct _PathData$/;"	s	file:
_PipeError	print.c	/^struct _PipeError {$/;"	s	file:
_PixbufInline	pixbuf_util.c	/^struct _PixbufInline$/;"	s	file:
_PixbufRenderer	pixbuf-renderer.h	/^struct _PixbufRenderer$/;"	s
_PixbufRendererClass	pixbuf-renderer.h	/^struct _PixbufRendererClass$/;"	s
_PixmapFolders	typedefs.h	/^struct _PixmapFolders$/;"	s
_PrintWindow	print.c	/^struct _PrintWindow$/;"	s	file:
_QueueData	pixbuf-renderer.c	/^struct _QueueData$/;"	s	file:
_RemoteClient	remote.c	/^struct _RemoteClient {$/;"	s	file:
_RemoteCommandEntry	main.c	/^struct _RemoteCommandEntry {$/;"	s	file:
_RemoteConnection	remote.h	/^struct _RemoteConnection {$/;"	s
_RenameDataMult	utilops.c	/^struct _RenameDataMult$/;"	s	file:
_ScreenData	fullscreen.h	/^struct _ScreenData {$/;"	s
_SearchData	search.c	/^struct _SearchData$/;"	s	file:
_SizerData	ui_misc.c	/^struct _SizerData$/;"	s	file:
_SlideShowData	typedefs.h	/^struct _SlideShowData$/;"	s
_SortData	bar_sort.c	/^struct _SortData$/;"	s	file:
_SourceTile	pixbuf-renderer.c	/^struct _SourceTile$/;"	s	file:
_SpinnerData	ui_spinner.c	/^struct _SpinnerData {$/;"	s	file:
_TMaintMove	thumb_standard.c	/^struct _TMaintMove$/;"	s	file:
_TabCompData	ui_tabcomp.c	/^struct _TabCompData$/;"	s	file:
_TabData	info.c	/^struct _TabData$/;"	s	file:
_ThumbLoader	typedefs.h	/^struct _ThumbLoader$/;"	s
_ThumbLoaderStd	thumb_standard.h	/^struct _ThumbLoaderStd$/;"	s
_ThumbSize	preferences.c	/^struct _ThumbSize$/;"	s	file:
_ThumbValidate	thumb_standard.c	/^struct _ThumbValidate$/;"	s	file:
_TreeEditData	ui_tree_edit.h	/^struct _TreeEditData$/;"	s
_UtilityData	utilops.c	/^struct _UtilityData {$/;"	s	file:
_ViewDirList	typedefs.h	/^struct _ViewDirList$/;"	s
_ViewDirTree	typedefs.h	/^struct _ViewDirTree$/;"	s
_ViewFileIcon	typedefs.h	/^struct _ViewFileIcon$/;"	s
_ViewFileList	typedefs.h	/^struct _ViewFileList$/;"	s
_ViewWindow	img-view.c	/^struct _ViewWindow$/;"	s	file:
__EXIF_H	exif.h	27;"	d
__FORMAT_CANON_H	format_canon.h	19;"	d
__FORMAT_FUJI_H	format_fuji.h	14;"	d
__FORMAT_NIKON_H	format_nikon.h	11;"	d
__FORMAT_OLYMPUS_H	format_olympus.h	11;"	d
__FORMAT_RAW_H	format_raw.h	14;"	d
__GQV_CELL_RENDERER_ICON_H__	cellrenderericon.h	23;"	d
__INTL_H__	intl.h	2;"	d
_byte_reverse	md5-util.c	/^_byte_reverse (guchar *buf, guint32 longs)$/;"	f	file:
_endian	md5-util.c	/^static union _endian { gint i; gchar b[4]; } *_endian = (union _endian *)&_ie;$/;"	u	file:
_endian	md5-util.c	/^static union _endian { gint i; gchar b[4]; } *_endian = (union _endian *)&_ie;$/;"	v	typeref:union:_endian	file:
_gtk_reserved1	cellrenderericon.h	/^	void (*_gtk_reserved1) (void);$/;"	m	struct:_GQvCellRendererIconClass
_gtk_reserved2	cellrenderericon.h	/^	void (*_gtk_reserved2) (void);$/;"	m	struct:_GQvCellRendererIconClass
_gtk_reserved3	cellrenderericon.h	/^	void (*_gtk_reserved3) (void);$/;"	m	struct:_GQvCellRendererIconClass
_gtk_reserved4	cellrenderericon.h	/^	void (*_gtk_reserved4) (void);$/;"	m	struct:_GQvCellRendererIconClass
_ie	md5-util.c	/^static gint _ie = 0x44332211;$/;"	v	file:
a	layout_config.c	/^	LayoutLocation a, b, c;$/;"	m	struct:_LayoutStyle	file:
a	layout_config.c	/^	gint a, b, c;$/;"	m	struct:_LayoutConfig	file:
about	preferences.c	/^static GtkWidget *about = NULL;$/;"	v	file:
about_credits_cb	preferences.c	/^static void about_credits_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
about_delete_cb	preferences.c	/^static gint about_delete_cb(GtkWidget *widget, GdkEventAny *event, gpointer data)$/;"	f	file:
about_window_close	preferences.c	/^static void about_window_close(GtkWidget *widget, gpointer data)$/;"	f	file:
ac_ct_CC	Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	icons/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	icons/svg/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_STRIP	Makefile	/^ac_ct_STRIP = $/;"	m
ac_ct_STRIP	icons/Makefile	/^ac_ct_STRIP = $/;"	m
ac_ct_STRIP	icons/svg/Makefile	/^ac_ct_STRIP = $/;"	m
access_file	ui_fileops.c	/^gint access_file(const gchar *s, int mode)$/;"	f
action	bar_sort.c	/^	SortActionType action;$/;"	m	struct:_SortData	file:
action_group	typedefs.h	/^	GtkActionGroup *action_group;$/;"	m	struct:_LayoutWindow
action_list	collect-io.c	/^	GList *action_list;$/;"	m	struct:_CollectManagerEntry	file:
active_button	ui_bookmark.c	/^	BookButtonData *active_button;$/;"	m	struct:_BookMarkData	file:
add_button	bar_sort.c	/^	GtkWidget *add_button;$/;"	m	struct:_SortData	file:
add_edit_items	menu.c	/^static void add_edit_items(GtkWidget *menu, GCallback func, GtkAccelGroup *accel_grp)$/;"	f	file:
add_menu_item	menu.c	/^static GtkWidget *add_menu_item(GtkWidget *menu, gchar *label, GtkAccelGroup *accel_group,$/;"	f	file:
add_quality_menu	preferences.c	/^static void add_quality_menu(GtkWidget *table, gint column, gint row, const gchar *text,$/;"	f	file:
add_thumb_size_menu	preferences.c	/^static void add_thumb_size_menu(GtkWidget *table, gint column, gint row, gchar *text)$/;"	f	file:
adj	ui_tree_edit.c	/^	GtkAdjustment *adj;$/;"	m	struct:_AutoScrollData	file:
advanced_scrolled	bar_exif.c	/^	GtkWidget *advanced_scrolled;$/;"	m	struct:_ExifBar	file:
allow_search	bar_exif.c	/^	gint allow_search;$/;"	m	struct:_ExifBar	file:
alter_type_get_text	menu.c	/^gchar *alter_type_get_text(AlterType type)$/;"	f
alternate_enabled	similar.c	/^static gint alternate_enabled = FALSE;$/;"	v	file:
alternate_image_sim_compare_fast	similar.c	/^static gdouble alternate_image_sim_compare_fast(ImageSimilarityData *a, ImageSimilarityData *b, gdouble min)$/;"	f	file:
always	pixbuf-renderer.c	/^	gint always;	\/* hide temporarily when scrolling (not yet implemented) *\/$/;"	m	struct:_OverlayData	file:
am__DEPENDENCIES_1	Makefile	/^am__DEPENDENCIES_1 =$/;"	m
am__aclocal_m4_deps	Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/configure.in$/;"	m
am__aclocal_m4_deps	icons/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/configure.in$/;"	m
am__aclocal_m4_deps	icons/svg/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/configure.in$/;"	m
am__cd	Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	icons/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	icons/svg/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__configure_deps	Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	icons/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	icons/svg/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__depfiles_maybe	Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__fastdepCC_FALSE	Makefile	/^am__fastdepCC_FALSE = #$/;"	m
am__fastdepCC_FALSE	icons/Makefile	/^am__fastdepCC_FALSE = #$/;"	m
am__fastdepCC_FALSE	icons/svg/Makefile	/^am__fastdepCC_FALSE = #$/;"	m
am__fastdepCC_TRUE	Makefile	/^am__fastdepCC_TRUE = $/;"	m
am__fastdepCC_TRUE	icons/Makefile	/^am__fastdepCC_TRUE = $/;"	m
am__fastdepCC_TRUE	icons/svg/Makefile	/^am__fastdepCC_TRUE = $/;"	m
am__include	Makefile	/^am__include = include$/;"	m
am__include	icons/Makefile	/^am__include = include$/;"	m
am__include	icons/svg/Makefile	/^am__include = include$/;"	m
am__installdirs	Makefile	/^am__installdirs = "$(DESTDIR)$(bindir)"$/;"	m
am__leading_dot	Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	icons/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	icons/svg/Makefile	/^am__leading_dot = .$/;"	m
am__objects_1	Makefile	/^am__objects_1 = ui_bookmark.$(OBJEXT) ui_fileops.$(OBJEXT) \\$/;"	m
am__quote	Makefile	/^am__quote = $/;"	m
am__quote	icons/Makefile	/^am__quote = $/;"	m
am__quote	icons/svg/Makefile	/^am__quote = $/;"	m
am__tar	Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__tar	icons/Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__tar	icons/svg/Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__untar	Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__untar	icons/Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__untar	icons/svg/Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am_gqview_OBJECTS	Makefile	/^am_gqview_OBJECTS = $(am__objects_1) bar_info.$(OBJEXT) \\$/;"	m
angle	pan-folder.c	/^	gdouble angle;$/;"	m	struct:_FlowerGroup	file:
append_comma_text	exif.c	/^static GString *append_comma_text(GString *string, const gchar *text)$/;"	f	file:
auto_box	utilops.c	/^	GtkWidget *auto_box;$/;"	m	struct:_RenameDataMult	file:
auto_close	ui_utildlg.h	/^	gint auto_close;$/;"	m	struct:_GenericDialog
auto_entry_end	utilops.c	/^	GtkWidget *auto_entry_end;$/;"	m	struct:_RenameDataMult	file:
auto_entry_front	utilops.c	/^	GtkWidget *auto_entry_front;$/;"	m	struct:_RenameDataMult	file:
auto_refresh_id	typedefs.h	/^	gint auto_refresh_id;$/;"	m	struct:_ImageWindow
auto_refresh_interval	typedefs.h	/^	gint auto_refresh_interval;$/;"	m	struct:_ImageWindow
auto_spin_pad	utilops.c	/^	GtkWidget *auto_spin_pad;$/;"	m	struct:_RenameDataMult	file:
auto_spin_start	utilops.c	/^	GtkWidget *auto_spin_start;$/;"	m	struct:_RenameDataMult	file:
avg_b	similar.h	/^        guint8 avg_b[1024];$/;"	m	struct:_ImageSimilarityData
avg_g	similar.h	/^        guint8 avg_g[1024];$/;"	m	struct:_ImageSimilarityData
avg_r	similar.h	/^        guint8 avg_r[1024];$/;"	m	struct:_ImageSimilarityData
b	layout_config.c	/^	LayoutLocation a, b, c;$/;"	m	struct:_LayoutStyle	file:
b	layout_config.c	/^	gint a, b, c;$/;"	m	struct:_LayoutConfig	file:
b	md5-util.c	/^static union _endian { gint i; gchar b[4]; } *_endian = (union _endian *)&_ie;$/;"	m	union:_endian	file:
background	cellrenderericon.h	/^	PangoColor background;$/;"	m	struct:_GQvCellRendererIcon
background_set	cellrenderericon.h	/^	gboolean background_set;$/;"	m	struct:_GQvCellRendererIcon
bar_exif	typedefs.h	/^	GtkWidget *bar_exif;$/;"	m	struct:_LayoutWindow
bar_exif_add_column	bar_exif.c	/^static void bar_exif_add_column(GtkWidget *listview, const gchar *title, gint n, gint sizable)$/;"	f	file:
bar_exif_add_column_check	bar_exif.c	/^static void bar_exif_add_column_check(GtkWidget *listview, const gchar *title, gint n)$/;"	f	file:
bar_exif_advanced	typedefs.h	/^	gint bar_exif_advanced;$/;"	m	struct:_LayoutWindow
bar_exif_advanced_build_view	bar_exif.c	/^static void bar_exif_advanced_build_view(ExifBar *eb)$/;"	f	file:
bar_exif_advanced_cb	bar_exif.c	/^static void bar_exif_advanced_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
bar_exif_clear	bar_exif.c	/^static void bar_exif_clear(ExifBar *eb)$/;"	f	file:
bar_exif_close	bar_exif.c	/^void bar_exif_close(GtkWidget *bar)$/;"	f
bar_exif_destroy	bar_exif.c	/^static void bar_exif_destroy(GtkWidget *widget, gpointer data)$/;"	f	file:
bar_exif_enabled	typedefs.h	/^	gint bar_exif_enabled;$/;"	m	struct:_LayoutWindow
bar_exif_is_advanced	bar_exif.c	/^gint bar_exif_is_advanced(GtkWidget *bar)$/;"	f
bar_exif_key_count	bar_exif.c	/^const gint bar_exif_key_count = (sizeof(bar_exif_key_list_real) \/ sizeof(gchar *));$/;"	v
bar_exif_key_count	bar_exif.h	/^const gint bar_exif_key_count;$/;"	v
bar_exif_key_list	bar_exif.c	/^const gchar **bar_exif_key_list = bar_exif_key_list_real;$/;"	v
bar_exif_key_list	bar_exif.h	/^const gchar **bar_exif_key_list;$/;"	v
bar_exif_key_list_real	bar_exif.c	/^static const gchar *bar_exif_key_list_real[] = {$/;"	v	file:
bar_exif_larger	bar_exif.c	/^static void bar_exif_larger(GtkWidget *widget, gpointer data)$/;"	f	file:
bar_exif_new	bar_exif.c	/^GtkWidget *bar_exif_new(gint show_title, const gchar *path, gint advanced, GtkWidget *bounding_widget)$/;"	f
bar_exif_row_enabled	bar_exif.c	/^static gint bar_exif_row_enabled(const gchar *name)$/;"	f	file:
bar_exif_row_toggled_cb	bar_exif.c	/^static void bar_exif_row_toggled_cb(GtkCellRendererToggle *toggle, const gchar *path, gpointer data)$/;"	f	file:
bar_exif_sensitive	bar_exif.c	/^static void bar_exif_sensitive(ExifBar *eb, gint enable)$/;"	f	file:
bar_exif_set	bar_exif.c	/^void bar_exif_set(GtkWidget *bar, const gchar *path)$/;"	f
bar_exif_size	bar_exif.c	/^static void bar_exif_size(ExifBar *eb, gint val)$/;"	f	file:
bar_exif_size	typedefs.h	/^	gint bar_exif_size;$/;"	m	struct:_LayoutWindow
bar_exif_smaller	bar_exif.c	/^static void bar_exif_smaller(GtkWidget *widget, gpointer data)$/;"	f	file:
bar_exif_update	bar_exif.c	/^static void bar_exif_update(ExifBar *eb)$/;"	f	file:
bar_exif_validate_text	bar_exif.c	/^gchar *bar_exif_validate_text(gchar *text)$/;"	f
bar_info	info.c	/^	GtkWidget *bar_info;$/;"	m	struct:_InfoTabMeta	file:
bar_info	typedefs.h	/^	GtkWidget *bar_info;$/;"	m	struct:_LayoutWindow
bar_info_autosave	bar_info.c	/^static gint bar_info_autosave(gpointer data)$/;"	f	file:
bar_info_changed	bar_info.c	/^static void bar_info_changed(GtkTextBuffer *buffer, gpointer data)$/;"	f	file:
bar_info_close	bar_info.c	/^void bar_info_close(GtkWidget *bar)$/;"	f
bar_info_destroy	bar_info.c	/^static void bar_info_destroy(GtkWidget *widget, gpointer data)$/;"	f	file:
bar_info_enabled	typedefs.h	/^	gint bar_info_enabled;$/;"	m	struct:_LayoutWindow
bar_info_event	bar_info.c	/^gint bar_info_event(GtkWidget *bar, GdkEvent *event)$/;"	f
bar_info_keyword_set	bar_info.c	/^static void bar_info_keyword_set(BarInfoData *bd, const gchar *keyword, gint active)$/;"	f	file:
bar_info_keyword_toggle	bar_info.c	/^static void bar_info_keyword_toggle(GtkCellRendererToggle *toggle, const gchar *path, gpointer data)$/;"	f	file:
bar_info_keyword_update_all	bar_info.c	/^static void bar_info_keyword_update_all(void)$/;"	f	file:
bar_info_maint_renamed	bar_info.c	/^void bar_info_maint_renamed(GtkWidget *bar, const gchar *path)$/;"	f
bar_info_new	bar_info.c	/^GtkWidget *bar_info_new(const gchar *path, gint metadata_only, GtkWidget *bounding_widget)$/;"	f
bar_info_save	bar_info.c	/^static void bar_info_save(GtkWidget *button, gpointer data)$/;"	f	file:
bar_info_save_update	bar_info.c	/^static void bar_info_save_update(BarInfoData *bd, gint enable)$/;"	f	file:
bar_info_selection	bar_info.c	/^void bar_info_selection(GtkWidget *bar, gint count)$/;"	f
bar_info_set	bar_info.c	/^void bar_info_set(GtkWidget *bar, const gchar *path)$/;"	f
bar_info_set_add	bar_info.c	/^static void bar_info_set_add(GtkWidget *button, gpointer data)$/;"	f	file:
bar_info_set_replace	bar_info.c	/^static void bar_info_set_replace(GtkWidget *button, gpointer data)$/;"	f	file:
bar_info_set_selection	bar_info.c	/^static void bar_info_set_selection(BarInfoData *bd, gint add)$/;"	f	file:
bar_info_set_selection_func	bar_info.c	/^void bar_info_set_selection_func(GtkWidget *bar, GList *(*list_func)(gpointer data), gpointer data)$/;"	f
bar_info_size_request	bar_info.c	/^void bar_info_size_request(GtkWidget *bar, gint width)$/;"	f
bar_info_update	bar_info.c	/^static void bar_info_update(BarInfoData *bd)$/;"	f	file:
bar_info_write	bar_info.c	/^static void bar_info_write(BarInfoData *bd)$/;"	f	file:
bar_keyword_edit_cb	bar_info.c	/^static void bar_keyword_edit_cb(GtkWidget *button, gpointer data)$/;"	f	file:
bar_keyword_list_find	bar_info.c	/^static gint bar_keyword_list_find(GList *list, const gchar *keyword)$/;"	f	file:
bar_keyword_list_sync	bar_info.c	/^static void bar_keyword_list_sync(BarInfoData *bd, GList *keywords)$/;"	f	file:
bar_list	bar_info.c	/^static GList *bar_list = NULL;$/;"	v	file:
bar_sort	typedefs.h	/^	GtkWidget *bar_sort;$/;"	m	struct:_LayoutWindow
bar_sort_action_state	bar_sort.c	/^static gint bar_sort_action_state = BAR_SORT_COPY;$/;"	v	file:
bar_sort_add_cancel_cb	bar_sort.c	/^static void bar_sort_add_cancel_cb(FileDialog *fd, gpointer data)$/;"	f	file:
bar_sort_add_cb	bar_sort.c	/^static void bar_sort_add_cb(GtkWidget *button, gpointer data)$/;"	f	file:
bar_sort_add_close	bar_sort.c	/^static void bar_sort_add_close(SortData *sd)$/;"	f	file:
bar_sort_add_ok_cb	bar_sort.c	/^static void bar_sort_add_ok_cb(FileDialog *fd, gpointer data)$/;"	f	file:
bar_sort_bookmark_select	bar_sort.c	/^static void bar_sort_bookmark_select(const gchar *path, gpointer data)$/;"	f	file:
bar_sort_bookmark_select_collection	bar_sort.c	/^static void bar_sort_bookmark_select_collection(SortData *sd, const gchar *source, const gchar *path)$/;"	f	file:
bar_sort_bookmark_select_folder	bar_sort.c	/^static void bar_sort_bookmark_select_folder(SortData *sd, const gchar *source, const gchar *path)$/;"	f	file:
bar_sort_close	bar_sort.c	/^void bar_sort_close(GtkWidget *bar)$/;"	f
bar_sort_collection_list_build	bar_sort.c	/^static void bar_sort_collection_list_build(GtkWidget *bookmarks)$/;"	f	file:
bar_sort_destroy	bar_sort.c	/^static void bar_sort_destroy(GtkWidget *widget, gpointer data)$/;"	f	file:
bar_sort_enabled	typedefs.h	/^	gint bar_sort_enabled;$/;"	m	struct:_LayoutWindow
bar_sort_mode_cb	bar_sort.c	/^static void bar_sort_mode_cb(GtkWidget *combo, gpointer data)$/;"	f	file:
bar_sort_mode_state	bar_sort.c	/^static gint bar_sort_mode_state = BAR_SORT_MODE_FOLDER;$/;"	v	file:
bar_sort_mode_sync	bar_sort.c	/^static void bar_sort_mode_sync(SortData *sd, SortModeType mode)$/;"	f	file:
bar_sort_new	bar_sort.c	/^GtkWidget *bar_sort_new(LayoutWindow *lw)$/;"	f
bar_sort_selection_state	bar_sort.c	/^static gint bar_sort_selection_state = BAR_SORT_SELECTION_IMAGE;$/;"	v	file:
bar_sort_set_copy_cb	bar_sort.c	/^static void bar_sort_set_copy_cb(GtkWidget *button, gpointer data)$/;"	f	file:
bar_sort_set_link_cb	bar_sort.c	/^static void bar_sort_set_link_cb(GtkWidget *button, gpointer data)$/;"	f	file:
bar_sort_set_move_cb	bar_sort.c	/^static void bar_sort_set_move_cb(GtkWidget *button, gpointer data)$/;"	f	file:
bar_sort_set_selection_image_cb	bar_sort.c	/^static void bar_sort_set_selection_image_cb(GtkWidget *button, gpointer data)$/;"	f	file:
bar_sort_set_selection_selected_cb	bar_sort.c	/^static void bar_sort_set_selection_selected_cb(GtkWidget *button, gpointer data)$/;"	f	file:
bar_sort_undo_cb	bar_sort.c	/^static void bar_sort_undo_cb(GtkWidget *button, gpointer data)$/;"	f	file:
bar_sort_undo_collection	bar_sort.c	/^static void bar_sort_undo_collection(SortData *sd)$/;"	f	file:
bar_sort_undo_folder	bar_sort.c	/^static void bar_sort_undo_folder(SortData *sd, GtkWidget *button)$/;"	f	file:
bar_sort_undo_set	bar_sort.c	/^static void bar_sort_undo_set(SortData *sd, GList *src_list, const gchar *src, const gchar *dest)$/;"	f	file:
bb	ui_bookmark.c	/^	BookButtonData *bb;$/;"	m	struct:_BookPropData	file:
binPROGRAMS_INSTALL	Makefile	/^binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)$/;"	m
bin_PROGRAMS	Makefile	/^bin_PROGRAMS = gqview$(EXEEXT)$/;"	m
bind_textdomain_codeset	intl.h	20;"	d
bindir	Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	icons/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	icons/svg/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindtextdomain	intl.h	19;"	d
bits	md5-util.h	/^	guint32 bits[2];$/;"	m	struct:_MD5Context
black_window_background	globals.c	/^gint black_window_background = FALSE;$/;"	v
black_window_background_c	preferences.c	/^static gint black_window_background_c;$/;"	v	file:
blank	pixbuf-renderer.c	/^	gboolean blank;$/;"	m	struct:_ImageTile	file:
blank	pixbuf-renderer.c	/^	gboolean blank;$/;"	m	struct:_SourceTile	file:
bookmark_add_default	ui_bookmark.c	/^void bookmark_add_default(const gchar *name, const gchar *path)$/;"	f
bookmark_default_list	ui_bookmark.c	/^static GList *bookmark_default_list = NULL;$/;"	v	file:
bookmark_dnd_get_data	ui_bookmark.c	/^static void bookmark_dnd_get_data(GtkWidget *widget,$/;"	f	file:
bookmark_drag_begin	ui_bookmark.c	/^static void bookmark_drag_begin(GtkWidget *button, GdkDragContext *context, gpointer data)$/;"	f	file:
bookmark_drag_set_data	ui_bookmark.c	/^static void bookmark_drag_set_data(GtkWidget *button,$/;"	f	file:
bookmark_drag_types	ui_bookmark.c	/^static GtkTargetEntry bookmark_drag_types[] = {$/;"	v	file:
bookmark_drag_types_n	ui_bookmark.c	425;"	d	file:
bookmark_drop_types	ui_bookmark.c	/^static GtkTargetEntry bookmark_drop_types[] = {$/;"	v	file:
bookmark_drop_types_n	ui_bookmark.c	419;"	d	file:
bookmark_edit	ui_bookmark.c	/^static void bookmark_edit(const gchar *key, const gchar *text, GtkWidget *parent)$/;"	f	file:
bookmark_edit_cancel_cb	ui_bookmark.c	/^static void bookmark_edit_cancel_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
bookmark_edit_destroy_cb	ui_bookmark.c	/^static void bookmark_edit_destroy_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
bookmark_edit_ok_cb	ui_bookmark.c	/^static void bookmark_edit_ok_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
bookmark_free	ui_bookmark.c	/^static void bookmark_free(BookButtonData *b)$/;"	f	file:
bookmark_from_string	ui_bookmark.c	/^static BookButtonData *bookmark_from_string(const gchar *text)$/;"	f	file:
bookmark_keypress_cb	ui_bookmark.c	/^static gint bookmark_keypress_cb(GtkWidget *button, GdkEventKey *event, gpointer data)$/;"	f	file:
bookmark_list	ui_pathsel.c	/^	GtkWidget *bookmark_list;$/;"	m	struct:_Dest_Data	file:
bookmark_list_add	ui_bookmark.c	/^void bookmark_list_add(GtkWidget *list, const gchar *name, const gchar *path)$/;"	f
bookmark_list_destroy	ui_bookmark.c	/^static void bookmark_list_destroy(GtkWidget *widget, gpointer data)$/;"	f	file:
bookmark_list_new	ui_bookmark.c	/^GtkWidget *bookmark_list_new(const gchar *key,$/;"	f
bookmark_list_set_editable	ui_bookmark.c	/^void bookmark_list_set_editable(GtkWidget *list, gint editable)$/;"	f
bookmark_list_set_key	ui_bookmark.c	/^void bookmark_list_set_key(GtkWidget *list, const gchar *key)$/;"	f
bookmark_list_set_no_defaults	ui_bookmark.c	/^void bookmark_list_set_no_defaults(GtkWidget *list, gint no_defaults)$/;"	f
bookmark_menu_down_cb	ui_bookmark.c	/^static void bookmark_menu_down_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
bookmark_menu_move	ui_bookmark.c	/^static void bookmark_menu_move(BookMarkData *bm, gint direction)$/;"	f	file:
bookmark_menu_popup	ui_bookmark.c	/^static void bookmark_menu_popup(BookMarkData *bm, GtkWidget *button,$/;"	f	file:
bookmark_menu_position_cb	ui_bookmark.c	/^static void bookmark_menu_position_cb(GtkMenu *menu, gint *x, gint *y, gint *pushed_in, gpointer data)$/;"	f	file:
bookmark_menu_prop_cb	ui_bookmark.c	/^static void bookmark_menu_prop_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
bookmark_menu_remove_cb	ui_bookmark.c	/^static void bookmark_menu_remove_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
bookmark_menu_up_cb	ui_bookmark.c	/^static void bookmark_menu_up_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
bookmark_move	ui_bookmark.c	/^static void bookmark_move(BookMarkData *bm, GtkWidget *button, gint direction)$/;"	f	file:
bookmark_populate	ui_bookmark.c	/^static void bookmark_populate(BookMarkData *bm)$/;"	f	file:
bookmark_populate_all	ui_bookmark.c	/^static void bookmark_populate_all(const gchar *key)$/;"	f	file:
bookmark_press_cb	ui_bookmark.c	/^static gint bookmark_press_cb(GtkWidget *button, GdkEventButton *event, gpointer data)$/;"	f	file:
bookmark_select_cb	ui_bookmark.c	/^static void bookmark_select_cb(GtkWidget *button, gpointer data)$/;"	f	file:
bookmark_string	ui_bookmark.c	/^static gchar *bookmark_string(const gchar *name, const gchar *path, const gchar *icon)$/;"	f	file:
bookmark_widget_list	ui_bookmark.c	/^static GList *bookmark_widget_list = NULL;$/;"	v	file:
bookmarks	bar_sort.c	/^	GtkWidget *bookmarks;$/;"	m	struct:_SortData	file:
border	pan-types.h	/^	gint border;$/;"	m	struct:_PanItem
bounding_widget	ui_misc.c	/^	GtkWidget *bounding_widget;$/;"	m	struct:_SizerData	file:
box	layout_config.c	/^	GtkWidget *box;$/;"	m	struct:_LayoutConfig	file:
box	ui_bookmark.c	/^	GtkWidget *box;$/;"	m	struct:_BookMarkData	file:
box	ui_misc.c	/^	GtkWidget *box;$/;"	m	struct:_DateSelection	file:
box_append_safe_delete_status	utilops.c	/^static void box_append_safe_delete_status(GenericDialog *gd)$/;"	f	file:
box_search	search.c	/^	GtkWidget *box_search;$/;"	m	struct:_SearchData	file:
buf	md5-util.h	/^	guint32 buf[4];$/;"	m	struct:_MD5Context
buffer_size	typedefs.h	/^	guint buffer_size;$/;"	m	struct:_ImageLoader
build_alias	Makefile	/^build_alias = $/;"	m
build_alias	icons/Makefile	/^build_alias = $/;"	m
build_alias	icons/svg/Makefile	/^build_alias = $/;"	m
busy_mouse_id	typedefs.h	/^	gint busy_mouse_id;$/;"	m	struct:_FullScreenData
busy_ref	typedefs.h	/^	gint busy_ref;$/;"	m	struct:_ViewDirTree
button	ui_bookmark.c	/^	GtkWidget *button;$/;"	m	struct:_BookButtonData	file:
button	ui_misc.c	/^	GtkWidget *button;$/;"	m	struct:_DateSelection	file:
button_back	info.h	/^	GtkWidget *button_back;$/;"	m	struct:_InfoData
button_back	print.c	/^	GtkWidget *button_back;$/;"	m	struct:_PrintWindow	file:
button_cb	img-view.c	/^static void button_cb(ImageWindow *imd, gint button, guint32 time,$/;"	f	file:
button_cb	pan-view.c	/^static void button_cb(PixbufRenderer *pr, GdkEventButton *event, gpointer data)$/;"	f	file:
button_close	cache_maint.c	/^	GtkWidget *button_close;$/;"	m	struct:_CMData	file:
button_close	cache_maint.c	/^	GtkWidget *button_close;$/;"	m	struct:_CleanData	file:
button_close	editors.c	/^	GtkWidget *button_close;$/;"	m	struct:_EditorVerboseData	file:
button_next	info.h	/^	GtkWidget *button_next;$/;"	m	struct:_InfoData
button_next	print.c	/^	GtkWidget *button_next;$/;"	m	struct:_PrintWindow	file:
button_save	bar_info.c	/^	GtkWidget *button_save;$/;"	m	struct:_BarInfoData	file:
button_set_add	bar_info.c	/^	GtkWidget *button_set_add;$/;"	m	struct:_BarInfoData	file:
button_set_replace	bar_info.c	/^	GtkWidget *button_set_replace;$/;"	m	struct:_BarInfoData	file:
button_size_allocate_cb	ui_misc.c	/^static void button_size_allocate_cb(GtkWidget *button, GtkAllocation *allocation, gpointer data)$/;"	f	file:
button_start	cache_maint.c	/^	GtkWidget *button_start;$/;"	m	struct:_CleanData	file:
button_start	search.c	/^	GtkWidget *button_start;$/;"	m	struct:_SearchData	file:
button_stop	cache_maint.c	/^	GtkWidget *button_stop;$/;"	m	struct:_CMData	file:
button_stop	cache_maint.c	/^	GtkWidget *button_stop;$/;"	m	struct:_CleanData	file:
button_stop	editors.c	/^	GtkWidget *button_stop;$/;"	m	struct:_EditorVerboseData	file:
button_stop	search.c	/^	GtkWidget *button_stop;$/;"	m	struct:_SearchData	file:
button_thumbs	dupe.h	/^	GtkWidget *button_thumbs;$/;"	m	struct:_DupeWindow
button_thumbs	search.c	/^	GtkWidget *button_thumbs;$/;"	m	struct:_SearchData	file:
byte_size	info.c	/^	gint64 byte_size;$/;"	m	struct:_InfoTabGeneral	file:
bytes_read	typedefs.h	/^	gint bytes_read;$/;"	m	struct:_ImageLoader
bytes_total	typedefs.h	/^	gint bytes_total;$/;"	m	struct:_ImageLoader
c	layout_config.c	/^	LayoutLocation a, b, c;$/;"	m	struct:_LayoutStyle	file:
c	layout_config.c	/^	gint a, b, c;$/;"	m	struct:_LayoutConfig	file:
cache_cl	pan-types.h	/^	CacheLoader *cache_cl;$/;"	m	struct:_PanWindow
cache_count	pan-types.h	/^	gint cache_count;$/;"	m	struct:_PanWindow
cache_enable	thumb_standard.h	/^	gint cache_enable;$/;"	m	struct:_ThumbLoaderStd
cache_enable	typedefs.h	/^	gint cache_enable;$/;"	m	struct:_ThumbLoader
cache_ensure_dir_exists	cache.c	/^gint cache_ensure_dir_exists(gchar *path, mode_t mode)$/;"	f
cache_file_move	cache_maint.c	/^static void cache_file_move(const gchar *src, const gchar *dest)$/;"	f	file:
cache_file_remove	cache_maint.c	/^static void cache_file_remove(const gchar *path)$/;"	f	file:
cache_find_location	cache.c	/^gchar *cache_find_location(CacheType type, const gchar *source)$/;"	f
cache_get_location	cache.c	/^gchar *cache_get_location(CacheType type, const gchar *source, gint include_name, mode_t *mode)$/;"	f
cache_hit	thumb_standard.h	/^	gint cache_hit;$/;"	m	struct:_ThumbLoaderStd
cache_hit	typedefs.h	/^	gint cache_hit;$/;"	m	struct:_ThumbLoader
cache_list	pan-types.h	/^	GList *cache_list;$/;"	m	struct:_PanWindow
cache_loader_done_cb	cache-loader.c	/^static void cache_loader_done_cb(ImageLoader *il, gpointer data)$/;"	f	file:
cache_loader_error_cb	cache-loader.c	/^static void cache_loader_error_cb(ImageLoader *il, gpointer data)$/;"	f	file:
cache_loader_free	cache-loader.c	/^void cache_loader_free(CacheLoader *cl)$/;"	f
cache_loader_idle_cb	cache-loader.c	/^static gboolean cache_loader_idle_cb(gpointer data)$/;"	f	file:
cache_loader_new	cache-loader.c	/^CacheLoader *cache_loader_new(const gchar *path, CacheDataType load_mask,$/;"	f
cache_loader_process	cache-loader.c	/^static gboolean cache_loader_process(CacheLoader *cl)$/;"	f	file:
cache_local	thumb_standard.h	/^	gint cache_local;$/;"	m	struct:_ThumbLoaderStd
cache_maint_copied	cache_maint.c	/^void cache_maint_copied(const gchar *src, const gchar *dest)$/;"	f
cache_maint_moved	cache_maint.c	/^void cache_maint_moved(const gchar *src, const gchar *dest)$/;"	f
cache_maint_removed	cache_maint.c	/^void cache_maint_removed(const gchar *source)$/;"	f
cache_maintain_dir	cache_maint.c	/^gint cache_maintain_dir(const gchar *dir, gint recursive, gint clear)$/;"	f
cache_maintain_home	cache_maint.c	/^void cache_maintain_home(gint metadata, gint clear, GtkWidget *parent)$/;"	f
cache_maintain_home_cb	cache_maint.c	/^static gint cache_maintain_home_cb(gpointer data)$/;"	f	file:
cache_maintain_home_close	cache_maint.c	/^static void cache_maintain_home_close(CMData *cm)$/;"	f	file:
cache_maintain_home_close_cb	cache_maint.c	/^static void cache_maintain_home_close_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
cache_maintain_home_dir	cache_maint.c	/^gint cache_maintain_home_dir(const gchar *dir, gint recursive, gint clear)$/;"	f
cache_maintain_home_stop	cache_maint.c	/^static void cache_maintain_home_stop(CMData *cm)$/;"	f	file:
cache_maintain_home_stop_cb	cache_maint.c	/^static void cache_maintain_home_stop_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
cache_manager	cache_maint.c	/^static CacheManager *cache_manager = NULL;$/;"	v	file:
cache_manager_close_cb	cache_maint.c	/^static void cache_manager_close_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
cache_manager_gqview_clean_cb	cache_maint.c	/^static void cache_manager_gqview_clean_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
cache_manager_gqview_clear_cb	cache_maint.c	/^static void cache_manager_gqview_clear_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
cache_manager_gqview_clear_confirm	cache_maint.c	/^void cache_manager_gqview_clear_confirm(GtkWidget *parent)$/;"	f
cache_manager_gqview_clear_ok_cb	cache_maint.c	/^static void cache_manager_gqview_clear_ok_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
cache_manager_metadata_clean_cb	cache_maint.c	/^static void cache_manager_metadata_clean_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
cache_manager_render_cb	cache_maint.c	/^static void cache_manager_render_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
cache_manager_render_close_cb	cache_maint.c	/^static void cache_manager_render_close_cb(GenericDialog *fd, gpointer data)$/;"	f	file:
cache_manager_render_dialog	cache_maint.c	/^static void cache_manager_render_dialog(GtkWidget *widget, const gchar *path)$/;"	f	file:
cache_manager_render_file	cache_maint.c	/^static gint cache_manager_render_file(CleanData *cd)$/;"	f	file:
cache_manager_render_finish	cache_maint.c	/^static void cache_manager_render_finish(CleanData *cd)$/;"	f	file:
cache_manager_render_folder	cache_maint.c	/^static void cache_manager_render_folder(CleanData *cd, const gchar *path)$/;"	f	file:
cache_manager_render_reset	cache_maint.c	/^static void cache_manager_render_reset(CleanData *cd)$/;"	f	file:
cache_manager_render_start_cb	cache_maint.c	/^static void cache_manager_render_start_cb(GenericDialog *fd, gpointer data)$/;"	f	file:
cache_manager_render_stop_cb	cache_maint.c	/^static void cache_manager_render_stop_cb(GenericDialog *fd, gpointer data)$/;"	f	file:
cache_manager_render_thumb_done_cb	cache_maint.c	/^static void cache_manager_render_thumb_done_cb(ThumbLoader *tl, gpointer data)$/;"	f	file:
cache_manager_show	cache_maint.c	/^void cache_manager_show(void)$/;"	f
cache_manager_standard_clean_cb	cache_maint.c	/^static void cache_manager_standard_clean_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
cache_manager_standard_clean_clear_cb	cache_maint.c	/^static gint cache_manager_standard_clean_clear_cb(gpointer data)$/;"	f	file:
cache_manager_standard_clean_close_cb	cache_maint.c	/^static void cache_manager_standard_clean_close_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
cache_manager_standard_clean_done	cache_maint.c	/^static void cache_manager_standard_clean_done(CleanData *cd)$/;"	f	file:
cache_manager_standard_clean_start_cb	cache_maint.c	/^static void cache_manager_standard_clean_start_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
cache_manager_standard_clean_stop_cb	cache_maint.c	/^static void cache_manager_standard_clean_stop_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
cache_manager_standard_clean_valid_cb	cache_maint.c	/^static void cache_manager_standard_clean_valid_cb(const gchar *path, gint valid, gpointer data)$/;"	f	file:
cache_manager_standard_clear_cb	cache_maint.c	/^static void cache_manager_standard_clear_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
cache_manager_standard_process	cache_maint.c	/^static void cache_manager_standard_process(GtkWidget *widget, gint clear)$/;"	f	file:
cache_path_parts	cache.c	/^static void cache_path_parts(CacheType type,$/;"	f	file:
cache_retry	thumb_standard.h	/^	gint cache_retry;$/;"	m	struct:_ThumbLoaderStd
cache_sim_data_filled	cache.c	/^gint cache_sim_data_filled(ImageSimilarityData *sd)$/;"	f
cache_sim_data_free	cache.c	/^void cache_sim_data_free(CacheData *cd)$/;"	f
cache_sim_data_load	cache.c	/^CacheData *cache_sim_data_load(const gchar *path)$/;"	f
cache_sim_data_new	cache.c	/^CacheData *cache_sim_data_new(void)$/;"	f
cache_sim_data_save	cache.c	/^gint cache_sim_data_save(CacheData *cd)$/;"	f
cache_sim_data_set_checksum	cache.c	/^void cache_sim_data_set_checksum(CacheData *cd, long checksum)$/;"	f
cache_sim_data_set_date	cache.c	/^void cache_sim_data_set_date(CacheData *cd, time_t date)$/;"	f
cache_sim_data_set_dimensions	cache.c	/^void cache_sim_data_set_dimensions(CacheData *cd, gint w, gint h)$/;"	f
cache_sim_data_set_md5sum	cache.c	/^void cache_sim_data_set_md5sum(CacheData *cd, guchar digest[16])$/;"	f
cache_sim_data_set_similarity	cache.c	/^void cache_sim_data_set_similarity(CacheData *cd, ImageSimilarityData *sd)$/;"	f
cache_sim_read_checksum	cache.c	/^static gint cache_sim_read_checksum(FILE *f, char *buf, int s, CacheData *cd)$/;"	f	file:
cache_sim_read_comment	cache.c	/^static gint cache_sim_read_comment(FILE *f, char *buf, int s, CacheData *cd)$/;"	f	file:
cache_sim_read_date	cache.c	/^static gint cache_sim_read_date(FILE *f, char *buf, int s, CacheData *cd)$/;"	f	file:
cache_sim_read_dimensions	cache.c	/^static gint cache_sim_read_dimensions(FILE *f, char *buf, int s, CacheData *cd)$/;"	f	file:
cache_sim_read_md5sum	cache.c	/^static gint cache_sim_read_md5sum(FILE *f, char *buf, int s, CacheData *cd)$/;"	f	file:
cache_sim_read_similarity	cache.c	/^static gint cache_sim_read_similarity(FILE *f, char *buf, int s, CacheData *cd)$/;"	f	file:
cache_sim_read_skipline	cache.c	/^static gint cache_sim_read_skipline(FILE *f, int s)$/;"	f	file:
cache_sim_write_checksum	cache.c	/^static gint cache_sim_write_checksum(FILE *f, CacheData *cd)$/;"	f	file:
cache_sim_write_date	cache.c	/^static gint cache_sim_write_date(FILE *f, CacheData *cd)$/;"	f	file:
cache_sim_write_dimensions	cache.c	/^static gint cache_sim_write_dimensions(FILE *f, CacheData *cd)$/;"	f	file:
cache_sim_write_md5sum	cache.c	/^static gint cache_sim_write_md5sum(FILE *f, CacheData *cd)$/;"	f	file:
cache_sim_write_similarity	cache.c	/^static gint cache_sim_write_similarity(FILE *f, CacheData *cd)$/;"	f	file:
cache_tick	pan-types.h	/^	gint cache_tick;$/;"	m	struct:_PanWindow
cache_time_valid	cache.c	/^gint cache_time_valid(const gchar *cache, const gchar *path)$/;"	f
cache_todo	pan-types.h	/^	GList *cache_todo;$/;"	m	struct:_PanWindow
cache_total	pan-types.h	/^	gint cache_total;$/;"	m	struct:_PanWindow
calendar	ui_misc.c	/^	GtkWidget *calendar;$/;"	m	struct:_DateSelection	file:
cancel_button	ui_utildlg.h	/^	GtkWidget *cancel_button;$/;"	m	struct:_GenericDialog
cancel_cb	ui_utildlg.h	/^	void (*cancel_cb)(GenericDialog *, gpointer);$/;"	m	struct:_GenericDialog
canon_cr2_tiff_entry	format_canon.c	/^static gint canon_cr2_tiff_entry(unsigned char *data, const guint len, guint offset, ExifByteOrder bo,$/;"	f	file:
canon_cr2_tiff_table	format_canon.c	/^static gint canon_cr2_tiff_table(unsigned char *data, const guint len, guint offset, ExifByteOrder bo,$/;"	f	file:
canon_mknote_parse_settings	format_canon.c	/^static void canon_mknote_parse_settings(ExifData *exif,$/;"	f	file:
cd	cache-loader.h	/^	CacheData *cd;$/;"	m	struct:_CacheLoader
cd	pan-types.h	/^	CacheData *cd;$/;"	m	struct:_PanCacheData
cd	typedefs.h	/^	CollectionData *cd;$/;"	m	struct:_CollectTable
cd	typedefs.h	/^	CollectionData *cd;$/;"	m	struct:_CollectWindow
cd	typedefs.h	/^	CollectionData *cd;$/;"	m	struct:_SlideShowData
cell	ui_tree_edit.h	/^	GtkCellRenderer *cell;$/;"	m	struct:_TreeEditData
cell_renderer_height_override	dupe.c	/^void cell_renderer_height_override(GtkCellRenderer *renderer)$/;"	f
cell_renderer_height_override	view_file_list.c	/^static void cell_renderer_height_override(GtkCellRenderer *renderer)$/;"	f	file:
changed	bar_info.c	/^	gint changed;$/;"	m	struct:_BarInfoData	file:
changed	typedefs.h	/^	gint changed;$/;"	m	struct:_CollectionData
changed_states	image-overlay.c	/^	ImageState changed_states;$/;"	m	struct:_OverlayStateData	file:
channel_id	remote.c	/^	gint channel_id;$/;"	m	struct:_RemoteClient	file:
channel_id	remote.h	/^	gint channel_id;$/;"	m	struct:_RemoteConnection
check_date	search.c	/^	GtkWidget *check_date;$/;"	m	struct:_SearchData	file:
check_dimensions	search.c	/^	GtkWidget *check_dimensions;$/;"	m	struct:_SearchData	file:
check_for_home_path	main.c	/^static void check_for_home_path(gchar *path)$/;"	f	file:
check_keywords	search.c	/^	GtkWidget *check_keywords;$/;"	m	struct:_SearchData	file:
check_name	search.c	/^	GtkWidget *check_name;$/;"	m	struct:_SearchData	file:
check_name_match_case	search.c	/^	GtkWidget *check_name_match_case;$/;"	m	struct:_SearchData	file:
check_recurse	search.c	/^	GtkWidget *check_recurse;$/;"	m	struct:_SearchData	file:
check_similarity	search.c	/^	GtkWidget *check_similarity;$/;"	m	struct:_SearchData	file:
check_size	search.c	/^	GtkWidget *check_size;$/;"	m	struct:_SearchData	file:
checksum	cache.h	/^	long checksum;$/;"	m	struct:_CacheData
checksum	dupe.h	/^	long checksum;$/;"	m	struct:_DupeItem
checksum_simple	ui_fileops.c	/^long checksum_simple(const gchar *path)$/;"	f
children	pan-folder.c	/^	GList *children;$/;"	m	struct:_FlowerGroup	file:
circumference	pan-folder.c	/^	gint circumference;$/;"	m	struct:_FlowerGroup	file:
clear	cache_maint.c	/^	gint clear;$/;"	m	struct:_CMData	file:
clear	cache_maint.c	/^	gint clear;$/;"	m	struct:_CleanData	file:
clear_mouse_cursor	fullscreen.c	/^static void clear_mouse_cursor(GtkWidget *widget, gint state)$/;"	f	file:
click_fd	search.c	/^	FileData *click_fd;$/;"	m	struct:_SearchData	file:
click_fd	typedefs.h	/^	FileData *click_fd;$/;"	m	struct:_ViewDirList
click_fd	typedefs.h	/^	FileData *click_fd;$/;"	m	struct:_ViewDirTree
click_fd	typedefs.h	/^	FileData *click_fd;$/;"	m	struct:_ViewFileIcon
click_fd	typedefs.h	/^	FileData *click_fd;$/;"	m	struct:_ViewFileList
click_info	typedefs.h	/^	CollectInfo *click_info;$/;"	m	struct:_CollectTable
click_item	dupe.h	/^	DupeItem *click_item;		\/* for popup menu *\/$/;"	m	struct:_DupeWindow
click_pi	pan-types.h	/^	PanItem *click_pi;$/;"	m	struct:_PanWindow
clicked	pixbuf-renderer.h	/^	void (* clicked)	(PixbufRenderer *pr, GdkEventButton *event);$/;"	m	struct:_PixbufRendererClass
clients	remote.h	/^	GList *clients;$/;"	m	struct:_RemoteConnection
clip_region	print.c	/^static gint clip_region(gdouble x1, gdouble y1, gdouble w1, gdouble h1,$/;"	f	file:
close	typedefs.h	/^	GdkPixbuf *close;$/;"	m	struct:_PixmapFolders
close_dialog	typedefs.h	/^	GtkWidget *close_dialog;$/;"	m	struct:_CollectWindow
cm	typedefs.h	/^	gpointer cm;$/;"	m	struct:_ImageWindow
cm_cache_list	color-man.c	/^static GList *cm_cache_list = NULL;$/;"	v	file:
collect_manager_action_new	collect-io.c	/^static CollectManagerAction *collect_manager_action_new(const gchar *oldpath, const gchar *newpath,$/;"	f	file:
collect_manager_action_ref	collect-io.c	/^static void collect_manager_action_ref(CollectManagerAction *action)$/;"	f	file:
collect_manager_action_unref	collect-io.c	/^static void collect_manager_action_unref(CollectManagerAction *action)$/;"	f	file:
collect_manager_add	collect-io.c	/^void collect_manager_add(const gchar *path, const gchar *collection)$/;"	f
collect_manager_add_action	collect-io.c	/^static void collect_manager_add_action(CollectManagerAction *action)$/;"	f	file:
collect_manager_entry_free	collect-io.c	/^static void collect_manager_entry_free(CollectManagerEntry *entry)$/;"	f	file:
collect_manager_entry_new	collect-io.c	/^static CollectManagerEntry *collect_manager_entry_new(const gchar *path)$/;"	f	file:
collect_manager_flush	collect-io.c	/^void collect_manager_flush(void)$/;"	f
collect_manager_moved	collect-io.c	/^void collect_manager_moved(const gchar *oldpath, const gchar *newpath)$/;"	f
collect_manager_process_actions	collect-io.c	/^static void collect_manager_process_actions(gint max)$/;"	f	file:
collect_manager_process_cb	collect-io.c	/^static gint collect_manager_process_cb(gpointer data)$/;"	f	file:
collect_manager_process_entry	collect-io.c	/^static gint collect_manager_process_entry(CollectManagerEntry *entry)$/;"	f	file:
collect_manager_process_entry_list	collect-io.c	/^static gint collect_manager_process_entry_list(void)$/;"	f	file:
collect_manager_refresh	collect-io.c	/^static void collect_manager_refresh(void)$/;"	f	file:
collect_manager_remove	collect-io.c	/^void collect_manager_remove(const gchar *path, const gchar *collection)$/;"	f
collect_manager_timer_cb	collect-io.c	/^static gint collect_manager_timer_cb(gpointer data)$/;"	f	file:
collect_manager_timer_push	collect-io.c	/^static void collect_manager_timer_push(gint stop)$/;"	f	file:
collection	dupe.h	/^	CollectionData *collection;	\/* NULL if from DupeWindow->files *\/$/;"	m	struct:_DupeItem
collection	typedefs.h	/^	CollectionData *collection;$/;"	m	struct:_ImageWindow
collection_add	collect.c	/^gint collection_add(CollectionData *cd, const gchar *path, gint sorted)$/;"	f
collection_add_check	collect.c	/^gint collection_add_check(CollectionData *cd, const gchar *path, gint sorted, gint must_exist)$/;"	f
collection_append_cb	collect-dlg.c	/^static void collection_append_cb(FileDialog *fd, gpointer data)$/;"	f	file:
collection_close_cancel_cb	collect.c	/^static void collection_close_cancel_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
collection_close_close_cb	collect.c	/^static void collection_close_close_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
collection_close_dlg_show	collect.c	/^static void collection_close_dlg_show(CollectWindow *cw)$/;"	f	file:
collection_close_save_cb	collect.c	/^static void collection_close_save_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
collection_confirm_cancel_cb	collect-dlg.c	/^static void collection_confirm_cancel_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
collection_confirm_ok_cb	collect-dlg.c	/^static void collection_confirm_ok_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
collection_dialog_append	collect-dlg.c	/^void collection_dialog_append(gchar *path, CollectionData *cd)$/;"	f
collection_dialog_load	collect-dlg.c	/^void collection_dialog_load(gchar *path)$/;"	f
collection_dialog_save_as	collect-dlg.c	/^void collection_dialog_save_as(gchar *path, CollectionData *cd)$/;"	f
collection_dialog_save_close	collect-dlg.c	/^void collection_dialog_save_close(gchar *path, CollectionData *cd)$/;"	f
collection_drag_types	collect-table.c	/^static GtkTargetEntry collection_drag_types[] = {$/;"	v	file:
collection_drop_types	collect-table.c	/^static GtkTargetEntry collection_drop_types[] = {$/;"	v	file:
collection_free	collect.c	/^void collection_free(CollectionData *cd)$/;"	f
collection_from_dnd_data	collect.c	/^CollectionData *collection_from_dnd_data(const gchar *data, GList **list, GList **info_list)$/;"	f
collection_from_number	collect.c	/^CollectionData *collection_from_number(gint n)$/;"	f
collection_get_first	collect.c	/^CollectInfo *collection_get_first(CollectionData *cd)$/;"	f
collection_get_last	collect.c	/^CollectInfo *collection_get_last(CollectionData *cd)$/;"	f
collection_group	bar_sort.c	/^	GtkWidget *collection_group;$/;"	m	struct:_SortData	file:
collection_info	typedefs.h	/^	CollectInfo *collection_info;$/;"	m	struct:_ImageWindow
collection_info_free	collect.c	/^void collection_info_free(CollectInfo *ci)$/;"	f
collection_info_free_thumb	collect.c	/^void collection_info_free_thumb(CollectInfo *ci)$/;"	f
collection_info_list_to_dnd_data	collect.c	/^gchar *collection_info_list_to_dnd_data(CollectionData *cd, GList *list, gint *length)$/;"	f
collection_info_load_thumb	collect.c	/^gint collection_info_load_thumb(CollectInfo *ci)$/;"	f
collection_info_new	collect.c	/^CollectInfo *collection_info_new(const gchar *path, struct stat *st, GdkPixbuf *pixbuf)$/;"	f
collection_info_set_thumb	collect.c	/^void collection_info_set_thumb(CollectInfo *ci, GdkPixbuf *pixbuf)$/;"	f
collection_info_valid	collect.c	/^gint collection_info_valid(CollectionData *cd, CollectInfo *info)$/;"	f
collection_insert	collect.c	/^gint collection_insert(CollectionData *cd, const gchar *path, CollectInfo *insert_ci, gint sorted)$/;"	f
collection_list	collect.c	/^static GList *collection_list = NULL;$/;"	v	file:
collection_list_add	collect.c	/^GList *collection_list_add(GList *list, CollectInfo *ci, SortType method)$/;"	f
collection_list_find	collect.c	/^CollectInfo *collection_list_find(GList *list, const gchar *path)$/;"	f
collection_list_free	collect.c	/^void collection_list_free(GList *list)$/;"	f
collection_list_insert	collect.c	/^GList *collection_list_insert(GList *list, CollectInfo *ci, CollectInfo *insert_ci, SortType method)$/;"	f
collection_list_remove	collect.c	/^GList *collection_list_remove(GList *list, CollectInfo *ci)$/;"	f
collection_list_sort	collect.c	/^GList *collection_list_sort(GList *list, SortType method)$/;"	f
collection_list_sort_cb	collect.c	/^static gint collection_list_sort_cb(gconstpointer a, gconstpointer b)$/;"	f	file:
collection_list_sort_method	collect.c	/^static SortType collection_list_sort_method = SORT_NAME;$/;"	v	file:
collection_list_to_path_list	collect.c	/^GList *collection_list_to_path_list(GList *list)$/;"	f
collection_load	collect-io.c	/^gint collection_load(CollectionData *cd, const gchar *path, gint append)$/;"	f
collection_load_begin	collect-io.c	/^gint collection_load_begin(CollectionData *cd, const gchar *path, gint append)$/;"	f
collection_load_cb	collect-dlg.c	/^static void collection_load_cb(FileDialog *fd, gpointer data)$/;"	f	file:
collection_load_only_geometry	collect-io.c	/^gint collection_load_only_geometry(CollectionData *cd, const gchar *path)$/;"	f
collection_load_private	collect-io.c	/^static gint collection_load_private(CollectionData *cd, const gchar *path, gint append, gint flush)$/;"	f	file:
collection_load_stop	collect-io.c	/^void collection_load_stop(CollectionData *cd)$/;"	f
collection_load_thumb_do	collect-io.c	/^static void collection_load_thumb_do(CollectionData *cd)$/;"	f	file:
collection_load_thumb_done_cb	collect-io.c	/^static void collection_load_thumb_done_cb(ThumbLoader *tl, gpointer data)$/;"	f	file:
collection_load_thumb_error_cb	collect-io.c	/^static void collection_load_thumb_error_cb(ThumbLoader *tl, gpointer data)$/;"	f	file:
collection_load_thumb_idle	collect-io.c	/^void collection_load_thumb_idle(CollectionData *cd)$/;"	f
collection_load_thumb_step	collect-io.c	/^static void collection_load_thumb_step(CollectionData *cd)$/;"	f	file:
collection_maint_removed	collect.c	/^void collection_maint_removed(const gchar *path)$/;"	f
collection_maint_renamed	collect.c	/^void collection_maint_renamed(const gchar *source, const gchar *dest)$/;"	f
collection_manager_action_list	collect-io.c	/^static GList *collection_manager_action_list = NULL;$/;"	v	file:
collection_manager_action_tail	collect-io.c	/^static GList *collection_manager_action_tail = NULL;$/;"	v	file:
collection_manager_entry_list	collect-io.c	/^static GList *collection_manager_entry_list = NULL;$/;"	v	file:
collection_manager_timer_id	collect-io.c	/^static gint collection_manager_timer_id = -1;$/;"	v	file:
collection_new	collect.c	/^CollectionData *collection_new(const gchar *path)$/;"	f
collection_next_by_info	collect.c	/^CollectInfo *collection_next_by_info(CollectionData *cd, CollectInfo *info)$/;"	f
collection_path_changed	collect.c	/^void collection_path_changed(CollectionData *cd)$/;"	f
collection_prev_by_info	collect.c	/^CollectInfo *collection_prev_by_info(CollectionData *cd, CollectInfo *info)$/;"	f
collection_rectangular_selection	globals.c	/^gint collection_rectangular_selection = FALSE;$/;"	v
collection_rectangular_selection_c	preferences.c	/^static gint collection_rectangular_selection_c;$/;"	v	file:
collection_ref	collect.c	/^void collection_ref(CollectionData *cd)$/;"	f
collection_remove	collect.c	/^gint collection_remove(CollectionData *cd, const gchar *path)$/;"	f
collection_remove_by_info	collect.c	/^static void collection_remove_by_info(CollectionData *cd, CollectInfo *info)$/;"	f	file:
collection_remove_by_info_list	collect.c	/^void collection_remove_by_info_list(CollectionData *cd, GList *list)$/;"	f
collection_rename	collect.c	/^gint collection_rename(CollectionData *cd, const gchar *source, const gchar *dest)$/;"	f
collection_save	collect-io.c	/^gint collection_save(CollectionData *cd, const gchar *path)$/;"	f
collection_save_cb	collect-dlg.c	/^static void collection_save_cb(FileDialog *fd, gpointer data)$/;"	f	file:
collection_save_confirmed	collect-dlg.c	/^static gint collection_save_confirmed(FileDialog *fd, gint overwrite, CollectionData *cd)$/;"	f	file:
collection_save_or_load_dialog	collect-dlg.c	/^static void collection_save_or_load_dialog(const gchar *path,$/;"	f	file:
collection_save_or_load_dialog_close_cb	collect-dlg.c	/^static void collection_save_or_load_dialog_close_cb(FileDialog *fd, gpointer data)$/;"	f	file:
collection_save_private	collect-io.c	/^static gint collection_save_private(CollectionData *cd, const gchar *path)$/;"	f	file:
collection_set_sort_method	collect.c	/^void collection_set_sort_method(CollectionData *cd, SortType method)$/;"	f
collection_set_update_info_func	collect.c	/^void collection_set_update_info_func(CollectionData *cd,$/;"	f
collection_table_add_dir_recursive	collect-table.c	/^static void collection_table_add_dir_recursive(CollectTable *ct, gchar *path, gint recursive)$/;"	f	file:
collection_table_add_path_list	collect-table.c	/^void collection_table_add_path_list(CollectTable *ct, GList *list)$/;"	f
collection_table_add_row	collect-table.c	/^static GList *collection_table_add_row(CollectTable *ct, GtkTreeIter *iter)$/;"	f	file:
collection_table_append_column	collect-table.c	/^static void collection_table_append_column(CollectTable *ct, gint n)$/;"	f	file:
collection_table_auto_scroll_idle_cb	collect-table.c	/^static gint collection_table_auto_scroll_idle_cb(gpointer data)$/;"	f	file:
collection_table_auto_scroll_notify_cb	collect-table.c	/^static gint collection_table_auto_scroll_notify_cb(GtkWidget *widget, gint x, gint y, gpointer data)$/;"	f	file:
collection_table_cell_data_cb	collect-table.c	/^static void collection_table_cell_data_cb(GtkTreeViewColumn *tree_column, GtkCellRenderer *cell,$/;"	f	file:
collection_table_clear_store	collect-table.c	/^static void collection_table_clear_store(CollectTable *ct)$/;"	f	file:
collection_table_destroy	collect-table.c	/^static void collection_table_destroy(GtkWidget *widget, gpointer data)$/;"	f	file:
collection_table_destroy_node_cb	collect-table.c	/^static gboolean collection_table_destroy_node_cb(GtkTreeModel *store, GtkTreePath *tpath, GtkTreeIter *iter, gpointer data)$/;"	f	file:
collection_table_dnd_begin	collect-table.c	/^static void collection_table_dnd_begin(GtkWidget *widget, GdkDragContext *context, gpointer data)$/;"	f	file:
collection_table_dnd_end	collect-table.c	/^static void collection_table_dnd_end(GtkWidget *widget, GdkDragContext *context, gpointer data)$/;"	f	file:
collection_table_dnd_get	collect-table.c	/^static void collection_table_dnd_get(GtkWidget *widget, GdkDragContext *context,$/;"	f	file:
collection_table_dnd_init	collect-table.c	/^static void collection_table_dnd_init(CollectTable *ct)$/;"	f	file:
collection_table_dnd_leave	collect-table.c	/^static void collection_table_dnd_leave(GtkWidget *widget, GdkDragContext *context, guint time, gpointer data)$/;"	f	file:
collection_table_dnd_motion	collect-table.c	/^static gint collection_table_dnd_motion(GtkWidget *widget, GdkDragContext *context,$/;"	f	file:
collection_table_dnd_receive	collect-table.c	/^static void collection_table_dnd_receive(GtkWidget *widget, GdkDragContext *context,$/;"	f	file:
collection_table_drop_menu	collect-table.c	/^static GtkWidget *collection_table_drop_menu(CollectTable *ct)$/;"	f	file:
collection_table_file_add	collect-table.c	/^void collection_table_file_add(CollectTable *ct, CollectInfo *info)$/;"	f
collection_table_file_insert	collect-table.c	/^void collection_table_file_insert(CollectTable *ct, CollectInfo *ci)$/;"	f
collection_table_file_remove	collect-table.c	/^void collection_table_file_remove(CollectTable *ct, CollectInfo *ci)$/;"	f
collection_table_file_update	collect-table.c	/^void collection_table_file_update(CollectTable *ct, CollectInfo *info)$/;"	f
collection_table_find_data	collect-table.c	/^static CollectInfo *collection_table_find_data(CollectTable *ct, gint row, gint col, GtkTreeIter *iter)$/;"	f	file:
collection_table_find_data_by_coord	collect-table.c	/^static CollectInfo *collection_table_find_data_by_coord(CollectTable *ct, gint x, gint y, GtkTreeIter *iter)$/;"	f	file:
collection_table_find_iter	collect-table.c	/^static gint collection_table_find_iter(CollectTable *ct, CollectInfo *info, GtkTreeIter *iter, gint *column)$/;"	f	file:
collection_table_find_position	collect-table.c	/^static gint collection_table_find_position(CollectTable *ct, CollectInfo *info, gint *row, gint *col)$/;"	f	file:
collection_table_get_focus_info	collect-table.c	/^CollectInfo *collection_table_get_focus_info(CollectTable *ct)$/;"	f
collection_table_get_icon_width	collect-table.c	/^static gint collection_table_get_icon_width(CollectTable *ct)$/;"	f	file:
collection_table_get_list	collect-table.c	/^static GList *collection_table_get_list(CollectTable *ct)$/;"	f	file:
collection_table_insert_find	collect-table.c	/^static CollectInfo *collection_table_insert_find(CollectTable *ct, CollectInfo *source, gint *after, GdkRectangle *cell,$/;"	f	file:
collection_table_insert_marker	collect-table.c	/^static void collection_table_insert_marker(CollectTable *ct, CollectInfo *info, gint enable)$/;"	f	file:
collection_table_insert_path_list	collect-table.c	/^static void collection_table_insert_path_list(CollectTable *ct, GList *list, CollectInfo *insert_info)$/;"	f	file:
collection_table_insert_point	collect-table.c	/^static CollectInfo *collection_table_insert_point(CollectTable *ct, gint x, gint y)$/;"	f	file:
collection_table_leave_cb	collect-table.c	/^static gint collection_table_leave_cb(GtkWidget *widget, GdkEventCrossing *event, gpointer data)$/;"	f	file:
collection_table_menu_pos_cb	collect-table.c	/^static void collection_table_menu_pos_cb(GtkMenu *menu, gint *x, gint *y, gboolean *push_in, gpointer data)$/;"	f	file:
collection_table_motion_cb	collect-table.c	/^static gint collection_table_motion_cb(GtkWidget *widget, GdkEventButton *bevent, gpointer data)$/;"	f	file:
collection_table_motion_update	collect-table.c	/^static void collection_table_motion_update(CollectTable *ct, gint x, gint y, gint drop_event)$/;"	f	file:
collection_table_move_by_info_list	collect-table.c	/^static void collection_table_move_by_info_list(CollectTable *ct, GList *info_list, gint row, gint col)$/;"	f	file:
collection_table_move_focus	collect-table.c	/^static void collection_table_move_focus(CollectTable *ct, gint row, gint col, gint relative)$/;"	f	file:
collection_table_new	collect-table.c	/^CollectTable *collection_table_new(CollectionData *cd)$/;"	f
collection_table_populate	collect-table.c	/^static void collection_table_populate(CollectTable *ct, gint resize)$/;"	f	file:
collection_table_populate_at_new_size	collect-table.c	/^static void collection_table_populate_at_new_size(CollectTable *ct, gint w, gint h, gint force)$/;"	f	file:
collection_table_popup_add_collection_cb	collect-table.c	/^static void collection_table_popup_add_collection_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
collection_table_popup_add_filelist_cb	collect-table.c	/^static void collection_table_popup_add_filelist_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
collection_table_popup_copy_cb	collect-table.c	/^static void collection_table_popup_copy_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
collection_table_popup_delete_cb	collect-table.c	/^static void collection_table_popup_delete_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
collection_table_popup_destroy_cb	collect-table.c	/^static void collection_table_popup_destroy_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
collection_table_popup_edit_cb	collect-table.c	/^static void collection_table_popup_edit_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
collection_table_popup_file_list	collect-table.c	/^static GList *collection_table_popup_file_list(CollectTable *ct)$/;"	f	file:
collection_table_popup_find_dupes_cb	collect-table.c	/^static void collection_table_popup_find_dupes_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
collection_table_popup_info_cb	collect-table.c	/^static void collection_table_popup_info_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
collection_table_popup_menu	collect-table.c	/^static GtkWidget *collection_table_popup_menu(CollectTable *ct, gint over_icon)$/;"	f	file:
collection_table_popup_move_cb	collect-table.c	/^static void collection_table_popup_move_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
collection_table_popup_print_cb	collect-table.c	/^static void collection_table_popup_print_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
collection_table_popup_remove_cb	collect-table.c	/^static void collection_table_popup_remove_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
collection_table_popup_rename_cb	collect-table.c	/^static void collection_table_popup_rename_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
collection_table_popup_save_as_cb	collect-table.c	/^static void collection_table_popup_save_as_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
collection_table_popup_save_cb	collect-table.c	/^static void collection_table_popup_save_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
collection_table_popup_selectall_cb	collect-table.c	/^static void collection_table_popup_selectall_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
collection_table_popup_show_names_cb	collect-table.c	/^static void collection_table_popup_show_names_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
collection_table_popup_sort_cb	collect-table.c	/^static void collection_table_popup_sort_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
collection_table_popup_unselectall_cb	collect-table.c	/^static void collection_table_popup_unselectall_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
collection_table_popup_view_cb	collect-table.c	/^static void collection_table_popup_view_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
collection_table_popup_view_new_cb	collect-table.c	/^static void collection_table_popup_view_new_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
collection_table_press_cb	collect-table.c	/^static gint collection_table_press_cb(GtkWidget *widget, GdkEventButton *bevent, gpointer data)$/;"	f	file:
collection_table_press_key_cb	collect-table.c	/^static gint collection_table_press_key_cb(GtkWidget *widget, GdkEventKey *event, gpointer data)$/;"	f	file:
collection_table_refresh	collect-table.c	/^void collection_table_refresh(CollectTable *ct)$/;"	f
collection_table_release_cb	collect-table.c	/^static gint collection_table_release_cb(GtkWidget *widget, GdkEventButton *bevent, gpointer data)$/;"	f	file:
collection_table_scroll	collect-table.c	/^static void collection_table_scroll(CollectTable *ct, gint scroll)$/;"	f	file:
collection_table_select	collect-table.c	/^static void collection_table_select(CollectTable *ct, CollectInfo *info)$/;"	f	file:
collection_table_select_all	collect-table.c	/^void collection_table_select_all(CollectTable *ct)$/;"	f
collection_table_select_region_util	collect-table.c	/^static void collection_table_select_region_util(CollectTable *ct, CollectInfo *start, CollectInfo *end, gint select)$/;"	f	file:
collection_table_select_util	collect-table.c	/^static void collection_table_select_util(CollectTable *ct, CollectInfo *info, gint select)$/;"	f	file:
collection_table_selection_add	collect-table.c	/^static void collection_table_selection_add(CollectTable *ct, CollectInfo *info, SelectionType mask, GtkTreeIter *iter)$/;"	f	file:
collection_table_selection_get_list	collect-table.c	/^GList *collection_table_selection_get_list(CollectTable *ct)$/;"	f
collection_table_selection_remove	collect-table.c	/^static void collection_table_selection_remove(CollectTable *ct, CollectInfo *info, SelectionType mask, GtkTreeIter *iter)$/;"	f	file:
collection_table_selection_set	collect-table.c	/^static void collection_table_selection_set(CollectTable *ct, CollectInfo *info, SelectionType value, GtkTreeIter *iter)$/;"	f	file:
collection_table_set_focus	collect-table.c	/^static void collection_table_set_focus(CollectTable *ct, CollectInfo *info)$/;"	f	file:
collection_table_set_labels	collect-table.c	/^void collection_table_set_labels(CollectTable *ct, GtkWidget *status, GtkWidget *extra)$/;"	f
collection_table_sized	collect-table.c	/^static void collection_table_sized(GtkWidget *widget, GtkAllocation *allocation, gpointer data)$/;"	f	file:
collection_table_sync	collect-table.c	/^static void collection_table_sync(CollectTable *ct)$/;"	f	file:
collection_table_sync_idle	collect-table.c	/^static void collection_table_sync_idle(CollectTable *ct)$/;"	f	file:
collection_table_sync_idle_cb	collect-table.c	/^static gint collection_table_sync_idle_cb(gpointer data)$/;"	f	file:
collection_table_toggle_filenames	collect-table.c	/^static void collection_table_toggle_filenames(CollectTable *ct)$/;"	f	file:
collection_table_unselect	collect-table.c	/^static void collection_table_unselect(CollectTable *ct, CollectInfo *info)$/;"	f	file:
collection_table_unselect_all	collect-table.c	/^void collection_table_unselect_all(CollectTable *ct)$/;"	f
collection_table_update_extras	collect-table.c	/^static void collection_table_update_extras(CollectTable *ct, gint loading, gdouble value)$/;"	f	file:
collection_table_update_focus	collect-table.c	/^static void collection_table_update_focus(CollectTable *ct)$/;"	f	file:
collection_table_update_status	collect-table.c	/^static void collection_table_update_status(CollectTable *ct)$/;"	f	file:
collection_table_verify_selections	collect-table.c	/^static void collection_table_verify_selections(CollectTable *ct)$/;"	f	file:
collection_to_number	collect.c	/^gint collection_to_number(CollectionData *cd)$/;"	f
collection_unref	collect.c	/^void collection_unref(CollectionData *cd)$/;"	f
collection_update_geometry	collect.c	/^void collection_update_geometry(CollectionData *cd)$/;"	f
collection_window_add	collect.c	/^static void collection_window_add(CollectWindow *cw, CollectInfo *ci)$/;"	f	file:
collection_window_close	collect.c	/^static void collection_window_close(CollectWindow *cw)$/;"	f	file:
collection_window_close_by_collection	collect.c	/^void collection_window_close_by_collection(CollectionData *cd)$/;"	f
collection_window_close_final	collect.c	/^static void collection_window_close_final(CollectWindow *cw)$/;"	f	file:
collection_window_delete	collect.c	/^static gint collection_window_delete(GtkWidget *widget, GdkEvent *event, gpointer data)$/;"	f	file:
collection_window_find	collect.c	/^CollectWindow *collection_window_find(CollectionData *cd)$/;"	f
collection_window_find_by_path	collect.c	/^CollectWindow *collection_window_find_by_path(const gchar *path)$/;"	f
collection_window_get_geometry	collect.c	/^static void collection_window_get_geometry(CollectWindow *cw)$/;"	f	file:
collection_window_insert	collect.c	/^static void collection_window_insert(CollectWindow *cw, CollectInfo *ci)$/;"	f	file:
collection_window_keypress	collect.c	/^static gint collection_window_keypress(GtkWidget *widget, GdkEventKey *event, gpointer data)$/;"	f	file:
collection_window_list	collect.c	/^static GList *collection_window_list = NULL;$/;"	v	file:
collection_window_modified_exists	collect.c	/^gint collection_window_modified_exists(void)$/;"	f
collection_window_new	collect.c	/^CollectWindow *collection_window_new(const gchar *path)$/;"	f
collection_window_refresh	collect.c	/^static void collection_window_refresh(CollectWindow *cw)$/;"	f	file:
collection_window_remove	collect.c	/^static void collection_window_remove(CollectWindow *cw, CollectInfo *ci)$/;"	f	file:
collection_window_update	collect.c	/^static void collection_window_update(CollectWindow *cw, CollectInfo *ci)$/;"	f	file:
collection_window_update_info	collect.c	/^static void collection_window_update_info(CollectionData *cd, CollectInfo *ci, gpointer data)$/;"	f	file:
collection_window_update_title	collect.c	/^static void collection_window_update_title(CollectWindow *cw)$/;"	f	file:
color2_a	pan-types.h	/^	guint8 color2_a;$/;"	m	struct:_PanItem
color2_b	pan-types.h	/^	guint8 color2_b;$/;"	m	struct:_PanItem
color2_g	pan-types.h	/^	guint8 color2_g;$/;"	m	struct:_PanItem
color2_r	pan-types.h	/^	guint8 color2_r;$/;"	m	struct:_PanItem
color_a	pan-types.h	/^	guint8 color_a;$/;"	m	struct:_PanItem
color_b	pan-types.h	/^	guint8 color_b;$/;"	m	struct:_PanItem
color_frozen	dupe.h	/^	gint color_frozen;$/;"	m	struct:_DupeWindow
color_g	pan-types.h	/^	guint8 color_g;$/;"	m	struct:_PanItem
color_man_cache_find	color-man.c	/^static ColorManCache *color_man_cache_find(ColorManProfileType in_type, const gchar *in_file,$/;"	f	file:
color_man_cache_free	color-man.c	/^static void color_man_cache_free(ColorManCache *cc)$/;"	f	file:
color_man_cache_get	color-man.c	/^static ColorManCache *color_man_cache_get(ColorManProfileType in_type, const gchar *in_file,$/;"	f	file:
color_man_cache_load_profile	color-man.c	/^static cmsHPROFILE color_man_cache_load_profile(ColorManProfileType type, const gchar *file,$/;"	f	file:
color_man_cache_new	color-man.c	/^static ColorManCache *color_man_cache_new(ColorManProfileType in_type, const gchar *in_file,$/;"	f	file:
color_man_cache_ref	color-man.c	/^static void color_man_cache_ref(ColorManCache *cc)$/;"	f	file:
color_man_cache_reset	color-man.c	/^static void color_man_cache_reset(void)$/;"	f	file:
color_man_cache_unref	color-man.c	/^static void color_man_cache_unref(ColorManCache *cc)$/;"	f	file:
color_man_correct_region	color-man.c	/^static void color_man_correct_region(ColorMan *cm, gint x, gint y, gint w, gint h,$/;"	f	file:
color_man_done	color-man.c	/^static void color_man_done(ColorMan *cm, ColorManReturnType type)$/;"	f	file:
color_man_free	color-man.c	/^void color_man_free(ColorMan *cm)$/;"	f
color_man_idle_cb	color-man.c	/^static gint color_man_idle_cb(gpointer data)$/;"	f	file:
color_man_lib_init	color-man.c	/^static void color_man_lib_init(void)$/;"	f	file:
color_man_new	color-man.c	/^ColorMan *color_man_new(ImageWindow *imd, GdkPixbuf *pixbuf,$/;"	f
color_man_new_embedded	color-man.c	/^ColorMan *color_man_new_embedded(ImageWindow *imd, GdkPixbuf *pixbuf,$/;"	f
color_man_new_real	color-man.c	/^static ColorMan *color_man_new_real(ImageWindow *imd, GdkPixbuf *pixbuf,$/;"	f	file:
color_man_update	color-man.c	/^void color_man_update(void)$/;"	f
color_profile_enable	typedefs.h	/^	gint color_profile_enable;$/;"	m	struct:_ImageWindow
color_profile_enabled	globals.c	/^gint color_profile_enabled = FALSE;$/;"	v
color_profile_input	typedefs.h	/^	gint color_profile_input;$/;"	m	struct:_ImageWindow
color_profile_input_file	globals.c	/^gchar *color_profile_input_file[COLOR_PROFILE_INPUTS];$/;"	v
color_profile_input_file_entry	preferences.c	/^static GtkWidget *color_profile_input_file_entry[COLOR_PROFILE_INPUTS];$/;"	v	file:
color_profile_input_name	globals.c	/^gchar *color_profile_input_name[COLOR_PROFILE_INPUTS];$/;"	v
color_profile_input_name_entry	preferences.c	/^static GtkWidget *color_profile_input_name_entry[COLOR_PROFILE_INPUTS];$/;"	v	file:
color_profile_input_type	globals.c	/^gint color_profile_input_type = 0;$/;"	v
color_profile_screen	typedefs.h	/^	gint color_profile_screen;$/;"	m	struct:_ImageWindow
color_profile_screen_file	globals.c	/^gchar *color_profile_screen_file = NULL;$/;"	v
color_profile_screen_file_entry	preferences.c	/^static GtkWidget *color_profile_screen_file_entry;$/;"	v	file:
color_profile_screen_type	globals.c	/^gint color_profile_screen_type = 0;$/;"	v
color_profile_use_image	globals.c	/^gint color_profile_use_image = TRUE;$/;"	v
color_profile_use_image	typedefs.h	/^	gint color_profile_use_image;$/;"	m	struct:_ImageWindow
color_r	pan-types.h	/^	guint8 color_r;$/;"	m	struct:_PanItem
column	ui_tree_edit.h	/^	GtkTreeViewColumn *column;$/;"	m	struct:_TreeEditData
column1	pan-types.h	/^	GList *column1;$/;"	m	struct:_PanTextAlignment
column2	pan-types.h	/^	GList *column2;$/;"	m	struct:_PanTextAlignment
columns	typedefs.h	/^	gint columns;$/;"	m	struct:_CollectTable
columns	typedefs.h	/^	gint columns;$/;"	m	struct:_ViewFileIcon
combo	dupe.h	/^	GtkWidget *combo;$/;"	m	struct:_DupeWindow
combo	ui_bookmark.c	/^	GtkWidget *combo;$/;"	m	struct:_HistoryComboData	file:
combo	ui_tabcomp.c	/^	GtkWidget *combo;$/;"	m	struct:_TabCompData	file:
combo_type	utilops.c	/^	GtkWidget *combo_type;$/;"	m	struct:_RenameDataMult	file:
command_pipe	editors.c	/^static int command_pipe(char *command)$/;"	f	file:
command_result	main.c	/^static gchar *command_result(const gchar *binary, const gchar *command)$/;"	f	file:
command_template	editors.c	/^	gchar *command_template;$/;"	m	struct:_EditorVerboseData	file:
comment_cache_read	bar_info.c	/^gint comment_cache_read(const gchar *path, GList **keywords, gchar **comment)$/;"	f
comment_cache_write	bar_info.c	/^gint comment_cache_write(const gchar *path, GList *keywords, const gchar *comment)$/;"	f
comment_pull	bar_info.c	/^static gchar *comment_pull(GtkWidget *textview)$/;"	f	file:
comment_read	bar_info.c	/^gint comment_read(const gchar *path, GList **keywords, gchar **comment)$/;"	f
comment_view	bar_info.c	/^	GtkWidget *comment_view;$/;"	m	struct:_BarInfoData	file:
comment_write	bar_info.c	/^gint comment_write(const gchar *path, GList *keywords, const gchar *comment)$/;"	f
complete	pixbuf-renderer.h	/^	gboolean complete;$/;"	m	struct:_PixbufRenderer
completed	typedefs.h	/^	gint completed;$/;"	m	struct:_ImageWindow
components	exif.h	/^	gint		components;$/;"	m	struct:_ExifMarker
compression_done	info.c	/^	gint compression_done;$/;"	m	struct:_InfoTabGeneral	file:
concat_dir_and_file	ui_fileops.c	/^gchar *concat_dir_and_file(const gchar *base, const gchar *name)$/;"	f
config_window_apply	preferences.c	/^static void config_window_apply(void)$/;"	f	file:
config_window_apply_cb	preferences.c	/^static void config_window_apply_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
config_window_close_cb	preferences.c	/^static void config_window_close_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
config_window_create	preferences.c	/^static void config_window_create(void)$/;"	f	file:
config_window_delete	preferences.c	/^static gint config_window_delete(GtkWidget *w, GdkEventAny *event, gpointer data)$/;"	f	file:
config_window_ok_cb	preferences.c	/^static void config_window_ok_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
configwindow	preferences.c	/^static GtkWidget *configwindow = NULL;$/;"	v	file:
confirm_all	utilops.c	/^	gint confirm_all;$/;"	m	struct:_FileDataMult	file:
confirm_delete	globals.c	/^gint confirm_delete = TRUE;$/;"	v
confirm_delete_c	preferences.c	/^static gint confirm_delete_c;$/;"	v	file:
confirm_dir_list_add	collect-table.c	/^static void confirm_dir_list_add(GtkWidget *widget, gpointer data)$/;"	f	file:
confirm_dir_list_add	dupe.c	/^static void confirm_dir_list_add(GtkWidget *widget, gpointer data)$/;"	f	file:
confirm_dir_list_cancel	dupe.c	/^static void confirm_dir_list_cancel(GtkWidget *widget, gpointer data)$/;"	f	file:
confirm_dir_list_destroy	dupe.c	/^static void confirm_dir_list_destroy(GtkWidget *widget, gpointer data)$/;"	f	file:
confirm_dir_list_do	collect-table.c	/^static void confirm_dir_list_do(CollectTable *ct, GList *list, gint recursive)$/;"	f	file:
confirm_dir_list_recurse	collect-table.c	/^static void confirm_dir_list_recurse(GtkWidget *widget, gpointer data)$/;"	f	file:
confirm_dir_list_recurse	dupe.c	/^static void confirm_dir_list_recurse(GtkWidget *widget, gpointer data)$/;"	f	file:
confirm_dir_list_skip	collect-table.c	/^static void confirm_dir_list_skip(GtkWidget *widget, gpointer data)$/;"	f	file:
confirm_dir_list_skip	dupe.c	/^static void confirm_dir_list_skip(GtkWidget *widget, gpointer data)$/;"	f	file:
confirmed	utilops.c	/^	gint confirmed;$/;"	m	struct:_FileDataMult	file:
confirmed	utilops.c	/^	gint confirmed;$/;"	m	struct:_FileDataSingle	file:
convert_dmy_to_time	search.c	/^static time_t convert_dmy_to_time(gint day, gint month, gint year)$/;"	f	file:
convert_pango_dpi	print.c	/^static gdouble convert_pango_dpi(gdouble points)$/;"	f	file:
copy	utilops.c	/^	gint copy;$/;"	m	struct:_FileDataMult	file:
copy	utilops.c	/^	gint copy;$/;"	m	struct:_FileDataSingle	file:
copy_file	ui_fileops.c	/^gint copy_file(const gchar *s, const gchar *t)$/;"	f
copy_file_attributes	ui_fileops.c	/^gint copy_file_attributes(const gchar *s, const gchar *t, gint perms, gint mtime)$/;"	f
count	editors.c	/^	gint count;$/;"	m	struct:_EditorVerboseData	file:
count_done	cache_maint.c	/^	gint count_done;$/;"	m	struct:_CacheManager	file:
count_done	cache_maint.c	/^	gint count_done;$/;"	m	struct:_CleanData	file:
count_total	cache_maint.c	/^	gint count_total;$/;"	m	struct:_CacheManager	file:
count_total	cache_maint.c	/^	gint count_total;$/;"	m	struct:_CleanData	file:
ct	collect-table.c	/^	CollectTable *ct;$/;"	m	struct:_ColumnData	file:
cursor_state	typedefs.h	/^	gint cursor_state;$/;"	m	struct:_FullScreenData
custom_entry	print.c	/^	GtkWidget *custom_entry;$/;"	m	struct:_PrintWindow	file:
custom_name	bar_exif.c	/^	GtkWidget *custom_name[EXIF_BAR_CUSTOM_COUNT];$/;"	m	struct:_ExifBar	file:
custom_sep	bar_exif.c	/^	GtkWidget *custom_sep;$/;"	m	struct:_ExifBar	file:
custom_value	bar_exif.c	/^	GtkWidget *custom_value[EXIF_BAR_CUSTOM_COUNT];$/;"	m	struct:_ExifBar	file:
d_view	ui_pathsel.c	/^	GtkWidget *d_view;$/;"	m	struct:_Dest_Data	file:
data	exif.h	/^	gpointer data;$/;"	m	struct:_ExifItem
data	info.c	/^	gpointer data;$/;"	m	struct:_TabData	file:
data	pan-types.h	/^	gpointer data;$/;"	m	struct:_PanItem
data	pixbuf_util.c	/^	const guint8 *data;$/;"	m	struct:_PixbufInline	file:
data	thumb_standard.c	/^	gpointer data;$/;"	m	struct:_ThumbValidate	file:
data	thumb_standard.h	/^	gpointer data;$/;"	m	struct:_ThumbLoaderStd
data	typedefs.h	/^	gpointer data;$/;"	m	struct:_ThumbLoader
data	ui_utildlg.h	/^	gpointer data;$/;"	m	struct:_GenericDialog
data_area_ready	typedefs.h	/^	gpointer data_area_ready;$/;"	m	struct:_ImageLoader
data_button	typedefs.h	/^	gpointer data_button;$/;"	m	struct:_ImageWindow
data_complete	typedefs.h	/^	gpointer data_complete;$/;"	m	struct:_ImageWindow
data_done	typedefs.h	/^	gpointer data_done;$/;"	m	struct:_ImageLoader
data_error	typedefs.h	/^	gpointer data_error;$/;"	m	struct:_ImageLoader
data_len	exif.h	/^	guint data_len;$/;"	m	struct:_ExifItem
data_percent	typedefs.h	/^	gpointer data_percent;$/;"	m	struct:_ImageLoader
data_scroll	typedefs.h	/^	gpointer data_scroll;$/;"	m	struct:_ImageWindow
data_scroll_notify	typedefs.h	/^	gpointer data_scroll_notify;$/;"	m	struct:_ImageWindow
data_state	typedefs.h	/^	gpointer data_state;$/;"	m	struct:_ImageWindow
data_status	typedefs.h	/^	gpointer data_status;$/;"	m	struct:_ViewFileIcon
data_status	typedefs.h	/^	gpointer data_status;$/;"	m	struct:_ViewFileList
data_thumb_status	typedefs.h	/^	gpointer data_thumb_status;$/;"	m	struct:_ViewFileIcon
data_thumb_status	typedefs.h	/^	gpointer data_thumb_status;$/;"	m	struct:_ViewFileList
data_tile	typedefs.h	/^	gpointer data_tile;$/;"	m	struct:_ImageWindow
data_update	typedefs.h	/^	gpointer data_update;$/;"	m	struct:_ImageWindow
datadir	Makefile	/^datadir = ${prefix}\/share$/;"	m
datadir	icons/Makefile	/^datadir = ${prefix}\/share$/;"	m
datadir	icons/svg/Makefile	/^datadir = ${prefix}\/share$/;"	m
date	cache.h	/^	time_t date;$/;"	m	struct:_CacheData
date	dupe.h	/^	time_t date;$/;"	m	struct:_DupeItem
date	typedefs.h	/^	time_t date;$/;"	m	struct:_CollectInfo
date	typedefs.h	/^	time_t date;$/;"	m	struct:_FileData
date_button	pan-types.h	/^	GtkWidget *date_button;$/;"	m	struct:_PanWindow
date_sel	search.c	/^	GtkWidget *date_sel;$/;"	m	struct:_SearchData	file:
date_sel_end	search.c	/^	GtkWidget *date_sel_end;$/;"	m	struct:_SearchData	file:
date_selection_button_cb	ui_misc.c	/^static void date_selection_button_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
date_selection_day_cb	ui_misc.c	/^static void date_selection_day_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
date_selection_destroy_cb	ui_misc.c	/^static void date_selection_destroy_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
date_selection_doubleclick_cb	ui_misc.c	/^static void date_selection_doubleclick_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
date_selection_get	ui_misc.c	/^void date_selection_get(GtkWidget *widget, gint *day, gint *month, gint *year)$/;"	f
date_selection_new	ui_misc.c	/^GtkWidget *date_selection_new(void)$/;"	f
date_selection_popup	ui_misc.c	/^static void date_selection_popup(DateSelection *ds)$/;"	f	file:
date_selection_popup_hide	ui_misc.c	/^static void date_selection_popup_hide(DateSelection *ds)$/;"	f	file:
date_selection_popup_keypress_cb	ui_misc.c	/^static gint date_selection_popup_keypress_cb(GtkWidget *widget, GdkEventKey *event, gpointer data)$/;"	f	file:
date_selection_popup_press_cb	ui_misc.c	/^static gint date_selection_popup_press_cb(GtkWidget *widget, GdkEventButton *event, gpointer data)$/;"	f	file:
date_selection_popup_release_cb	ui_misc.c	/^static gint date_selection_popup_release_cb(GtkWidget *widget, GdkEventButton *event, gpointer data)$/;"	f	file:
date_selection_popup_sync	ui_misc.c	/^static void date_selection_popup_sync(DateSelection *ds)$/;"	f	file:
date_selection_set	ui_misc.c	/^void date_selection_set(GtkWidget *widget, gint day, gint month, gint year)$/;"	f
date_selection_time_get	ui_misc.c	/^time_t date_selection_time_get(GtkWidget *widget)$/;"	f
date_selection_time_set	ui_misc.c	/^void date_selection_time_set(GtkWidget *widget, time_t t)$/;"	f
days	cache_maint.c	/^	gint days;$/;"	m	struct:_CleanData	file:
days	thumb_standard.c	/^	gint days;$/;"	m	struct:_ThumbValidate	file:
dcgettext	intl.h	18;"	d
dd	ui_pathsel.c	/^	Dest_Data *dd;$/;"	m	struct:_DestDel_Data	file:
debug	globals.c	/^gint debug = FALSE;$/;"	v
default_cb	ui_utildlg.h	/^	void (*default_cb)(GenericDialog *, gpointer);$/;"	m	struct:_GenericDialog
delay_alter_type	typedefs.h	/^	AlterType delay_alter_type;$/;"	m	struct:_ImageWindow
delay_flip	pixbuf-renderer.h	/^	gboolean delay_flip;$/;"	m	struct:_PixbufRenderer
delay_flip	typedefs.h	/^	gint delay_flip;$/;"	m	struct:_ImageWindow
den	exif.h	/^	guint32 den;$/;"	m	struct:_ExifRational
deny	typedefs.h	/^	GdkPixbuf *deny;$/;"	m	struct:_PixmapFolders
depcomp	Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
description	exif.h	/^	const gchar *description;$/;"	m	struct:_ExifFormatAttrib
description	exif.h	/^	const gchar *description;$/;"	m	struct:_ExifFormattedText
description	exif.h	/^	const gchar* description;$/;"	m	struct:_ExifTextList
description	exif.h	/^	gchar		*description;$/;"	m	struct:_ExifMarker
description	filelist.h	/^	gchar *description;$/;"	m	struct:_FilterEntry
description	format_raw.c	/^	const gchar *description;$/;"	m	struct:_FormatExifEntry	file:
description	format_raw.c	/^	const gchar *description;$/;"	m	struct:_FormatRawEntry	file:
description	fullscreen.h	/^	gchar *description;$/;"	m	struct:_ScreenData
description	main.c	/^	gchar *description;$/;"	m	struct:_RemoteCommandEntry	file:
description	print.c	/^	gchar *description;$/;"	m	struct:_PaperSize	file:
dest	thumb_standard.c	/^	gchar *dest;$/;"	m	struct:_TMaintMove	file:
dest	utilops.c	/^	gchar *dest;$/;"	m	struct:_FileDataMult	file:
dest	utilops.c	/^	gchar *dest;$/;"	m	struct:_FileDataSingle	file:
dest_activate_cb	ui_pathsel.c	/^static void dest_activate_cb(GtkWidget *view, GtkTreePath *tpath, GtkTreeViewColumn *column, gpointer data)$/;"	f	file:
dest_base	utilops.c	/^	gchar *dest_base;$/;"	m	struct:_FileDataMult	file:
dest_bookmark_select_cb	ui_pathsel.c	/^static void dest_bookmark_select_cb(const gchar *path, gpointer data)$/;"	f	file:
dest_change_dir	ui_pathsel.c	/^static void dest_change_dir(Dest_Data *dd, const gchar *path, gint retain_name)$/;"	f	file:
dest_check_filter	ui_pathsel.c	/^static gint dest_check_filter(const gchar *filter, const gchar *file)$/;"	f	file:
dest_dnd_init	ui_pathsel.c	/^static void dest_dnd_init(Dest_Data *dd)$/;"	f	file:
dest_dnd_set_data	ui_pathsel.c	/^static void dest_dnd_set_data(GtkWidget *view,$/;"	f	file:
dest_drag_types	ui_pathsel.c	/^static GtkTargetEntry dest_drag_types[] = {$/;"	v	file:
dest_drag_types_n	ui_pathsel.c	317;"	d	file:
dest_entry_changed_cb	ui_pathsel.c	/^static void dest_entry_changed_cb(GtkEditable *editable, gpointer data)$/;"	f	file:
dest_filter_add	ui_pathsel.c	/^static void dest_filter_add(Dest_Data *dd, const gchar *filter, const gchar *description, gint set)$/;"	f	file:
dest_filter_changed_cb	ui_pathsel.c	/^static void dest_filter_changed_cb(GtkEditable *editable, gpointer data)$/;"	f	file:
dest_filter_clear	ui_pathsel.c	/^static void dest_filter_clear(Dest_Data *dd)$/;"	f	file:
dest_filter_list_sync	ui_pathsel.c	/^static void dest_filter_list_sync(Dest_Data *dd)$/;"	f	file:
dest_free_data	ui_pathsel.c	/^static void dest_free_data(GtkWidget *widget, gpointer data)$/;"	f	file:
dest_home_cb	ui_pathsel.c	/^static void dest_home_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
dest_keypress_cb	ui_pathsel.c	/^static gboolean dest_keypress_cb(GtkWidget *view, GdkEventKey *event, gpointer data)$/;"	f	file:
dest_new_dir_cb	ui_pathsel.c	/^static void dest_new_dir_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
dest_path	ui_utildlg.h	/^	gchar *dest_path;$/;"	m	struct:_FileDialog
dest_populate	ui_pathsel.c	/^static void dest_populate(Dest_Data *dd, const gchar *path)$/;"	f	file:
dest_popup_dir_bookmark_cb	ui_pathsel.c	/^static void dest_popup_dir_bookmark_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
dest_popup_dir_rename_cb	ui_pathsel.c	/^static void dest_popup_dir_rename_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
dest_popup_file_bookmark_cb	ui_pathsel.c	/^static void dest_popup_file_bookmark_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
dest_popup_file_delete_cb	ui_pathsel.c	/^static void dest_popup_file_delete_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
dest_popup_file_rename_cb	ui_pathsel.c	/^static void dest_popup_file_rename_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
dest_popup_menu	ui_pathsel.c	/^static gint dest_popup_menu(Dest_Data *dd, GtkTreeView *view,$/;"	f	file:
dest_popup_position_cb	ui_pathsel.c	/^static void dest_popup_position_cb(GtkMenu *menu, gint *x, gint *y,$/;"	f	file:
dest_press_cb	ui_pathsel.c	/^static gint dest_press_cb(GtkWidget *view, GdkEventButton *event, gpointer data)$/;"	f	file:
dest_select_cb	ui_pathsel.c	/^static void dest_select_cb(GtkTreeSelection *selection, gpointer data)$/;"	f	file:
dest_show_hidden_cb	ui_pathsel.c	/^static void dest_show_hidden_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
dest_sort_cb	ui_pathsel.c	/^static gint dest_sort_cb(void *a, void *b)$/;"	f	file:
dest_view_bookmark	ui_pathsel.c	/^static void dest_view_bookmark(Dest_Data *dd, GtkTreeView *view)$/;"	f	file:
dest_view_delete	ui_pathsel.c	/^static void dest_view_delete(Dest_Data *dd, GtkTreeView *view)$/;"	f	file:
dest_view_delete_dlg_cancel	ui_pathsel.c	/^static void dest_view_delete_dlg_cancel(GenericDialog *gd, gpointer data)$/;"	f	file:
dest_view_delete_dlg_ok_cb	ui_pathsel.c	/^static void dest_view_delete_dlg_ok_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
dest_view_rename	ui_pathsel.c	/^static void dest_view_rename(Dest_Data *dd, GtkTreeView *view)$/;"	f	file:
dest_view_rename_cb	ui_pathsel.c	/^static gint dest_view_rename_cb(TreeEditData *ted, const gchar *old, const gchar *new, gpointer data)$/;"	f	file:
dest_view_store_selection	ui_pathsel.c	/^static void dest_view_store_selection(Dest_Data *dd, GtkTreeView *view)$/;"	f	file:
destroy_id	image-overlay.c	/^	gulong destroy_id;$/;"	m	struct:_OverlayStateData	file:
dgettext	intl.h	17;"	d
di	dupe.h	/^	DupeItem *di;$/;"	m	struct:_DupeMatch
dialog	bar_sort.c	/^	FileDialog *dialog;$/;"	m	struct:_SortData	file:
dialog	cache_maint.c	/^	GenericDialog *dialog;$/;"	m	struct:_CacheManager	file:
dialog	print.c	/^	GenericDialog *dialog;$/;"	m	struct:_PrintWindow	file:
dialog	ui_utildlg.h	/^	GtkWidget *dialog;	\/* window *\/$/;"	m	struct:_GenericDialog
dialog_name_entry	bar_sort.c	/^	GtkWidget *dialog_name_entry;$/;"	m	struct:_SortData	file:
diameter	pan-folder.c	/^	gint diameter;$/;"	m	struct:_FlowerGroup	file:
dimensions	cache.h	/^	gint dimensions;$/;"	m	struct:_CacheData
dir_location	typedefs.h	/^	LayoutLocation dir_location;$/;"	m	struct:_LayoutWindow
dir_path	ui_tabcomp.c	/^	gchar *dir_path;$/;"	m	struct:_TabCompData	file:
dir_view	typedefs.h	/^	GtkWidget *dir_view;$/;"	m	struct:_LayoutWindow
dither_quality	globals.c	/^gint dither_quality = (gint)GDK_RGB_DITHER_NORMAL;$/;"	v
dither_quality	pixbuf-renderer.h	/^	GdkRgbDither dither_quality;$/;"	m	struct:_PixbufRenderer
div_float	typedefs.h	/^	gint div_float;$/;"	m	struct:_LayoutWindow
div_h	typedefs.h	/^	gint div_h;$/;"	m	struct:_LayoutWindow
div_v	typedefs.h	/^	gint div_v;$/;"	m	struct:_LayoutWindow
dlist	utilops.c	/^	GList *dlist;$/;"	m	struct:_UtilityData	file:
dnd_file_drag_types	dnd.c	/^GtkTargetEntry dnd_file_drag_types[] = {$/;"	v
dnd_file_drag_types_count	dnd.c	/^gint dnd_file_drag_types_count = 2;$/;"	v
dnd_file_drop_types	dnd.c	/^GtkTargetEntry dnd_file_drop_types[] = {$/;"	v
dnd_file_drop_types_count	dnd.c	/^gint dnd_file_drop_types_count = 2;$/;"	v
dnd_set_drag_icon	dnd.c	/^void dnd_set_drag_icon(GtkWidget *widget, GdkDragContext *context, GdkPixbuf *pixbuf, gint items)$/;"	f
doByteReverse	md5-util.h	/^	gint doByteReverse;$/;"	m	struct:_MD5Context
done	typedefs.h	/^	gint done;$/;"	m	struct:_ImageLoader
done_data	cache-loader.h	/^	gpointer done_data;$/;"	m	struct:_CacheLoader
done_func	cache-loader.h	/^	CacheLoaderDoneFunc done_func;$/;"	m	struct:_CacheLoader
done_list	cache_maint.c	/^	GList *done_list;$/;"	m	struct:_CMData	file:
done_mask	cache-loader.h	/^	CacheDataType done_mask;$/;"	m	struct:_CacheLoader
drag_last_x	pixbuf-renderer.h	/^	gint drag_last_x;$/;"	m	struct:_PixbufRenderer
drag_last_y	pixbuf-renderer.h	/^	gint drag_last_y;$/;"	m	struct:_PixbufRenderer
drag_moved	pixbuf-renderer.h	/^	gint drag_moved;$/;"	m	struct:_PixbufRenderer
draw_idle_high	pixbuf-renderer.h	/^	gint draw_idle_high;	\/* current idle_id has high priority *\/$/;"	m	struct:_PixbufRenderer
draw_idle_id	pixbuf-renderer.h	/^	gint draw_idle_id;$/;"	m	struct:_PixbufRenderer
draw_queue	pixbuf-renderer.h	/^	GList *draw_queue;	\/* list of areas to redraw *\/$/;"	m	struct:_PixbufRenderer
draw_queue_2pass	pixbuf-renderer.h	/^	GList *draw_queue_2pass;\/* list when 2 pass is enabled *\/$/;"	m	struct:_PixbufRenderer
drop_expand_id	typedefs.h	/^	gint drop_expand_id;$/;"	m	struct:_ViewDirTree
drop_fd	typedefs.h	/^	FileData *drop_fd;$/;"	m	struct:_ViewDirList
drop_fd	typedefs.h	/^	FileData *drop_fd;$/;"	m	struct:_ViewDirTree
drop_idle_id	typedefs.h	/^	gint drop_idle_id;$/;"	m	struct:_CollectTable
drop_info	typedefs.h	/^	CollectInfo *drop_info;$/;"	m	struct:_CollectTable
drop_list	typedefs.h	/^	GList *drop_list;$/;"	m	struct:_CollectTable
drop_list	typedefs.h	/^	GList *drop_list;$/;"	m	struct:_ViewDirList
drop_list	typedefs.h	/^	GList *drop_list;$/;"	m	struct:_ViewDirTree
drop_scroll_id	typedefs.h	/^	gint drop_scroll_id;$/;"	m	struct:_ViewDirList
drop_scroll_id	typedefs.h	/^	gint drop_scroll_id;$/;"	m	struct:_ViewDirTree
dummy_cancel_cb	cache_maint.c	/^static void dummy_cancel_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
dummy_cancel_cb	preferences.c	/^static void dummy_cancel_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
dupe_check_cb	dupe.c	/^static gint dupe_check_cb(gpointer data)$/;"	f	file:
dupe_check_start	dupe.c	/^static void dupe_check_start(DupeWindow *dw)$/;"	f	file:
dupe_check_stop	dupe.c	/^static void dupe_check_stop(DupeWindow *dw)$/;"	f	file:
dupe_confirm_dir_list	dupe.c	/^static GtkWidget *dupe_confirm_dir_list(DupeWindow *dw, GList *list)$/;"	f	file:
dupe_custom_threshold	globals.c	/^gint dupe_custom_threshold = 99;$/;"	v
dupe_custom_threshold_c	preferences.c	/^static gint dupe_custom_threshold_c;$/;"	v	file:
dupe_dest_set	dupe.c	/^static void dupe_dest_set(GtkWidget *widget, gint enable)$/;"	f	file:
dupe_display_label	dupe.c	/^static GtkWidget *dupe_display_label(GtkWidget *vbox, const gchar *description, const gchar *text)$/;"	f	file:
dupe_display_stats	dupe.c	/^static void dupe_display_stats(DupeWindow *dw, DupeItem *di)$/;"	f	file:
dupe_dnd_begin	dupe.c	/^static void dupe_dnd_begin(GtkWidget *widget, GdkDragContext *context, gpointer data)$/;"	f	file:
dupe_dnd_data_get	dupe.c	/^static void dupe_dnd_data_get(GtkWidget *widget, GdkDragContext *context,$/;"	f	file:
dupe_dnd_data_set	dupe.c	/^static void dupe_dnd_data_set(GtkWidget *widget, GdkDragContext *context,$/;"	f	file:
dupe_dnd_end	dupe.c	/^static void dupe_dnd_end(GtkWidget *widget, GdkDragContext *context, gpointer data)$/;"	f	file:
dupe_dnd_init	dupe.c	/^static void dupe_dnd_init(DupeWindow *dw)$/;"	f	file:
dupe_drag_types	dupe.c	/^static GtkTargetEntry dupe_drag_types[] = {$/;"	v	file:
dupe_drop_types	dupe.c	/^static GtkTargetEntry dupe_drop_types[] = {$/;"	v	file:
dupe_files_add	dupe.c	/^static void dupe_files_add(DupeWindow *dw, CollectionData *collection, CollectInfo *info,$/;"	f	file:
dupe_item_find_path	dupe.c	/^static DupeItem *dupe_item_find_path(DupeWindow *dw, const gchar *path)$/;"	f	file:
dupe_item_find_path_by_list	dupe.c	/^static DupeItem *dupe_item_find_path_by_list(const gchar *path, GList *work)$/;"	f	file:
dupe_item_free	dupe.c	/^static void dupe_item_free(DupeItem *di)$/;"	f	file:
dupe_item_new	dupe.c	/^static DupeItem *dupe_item_new(const gchar *path, gint64 size, time_t date)$/;"	f	file:
dupe_item_read_cache	dupe.c	/^static void dupe_item_read_cache(DupeItem *di)$/;"	f	file:
dupe_item_remove	dupe.c	/^static void dupe_item_remove(DupeWindow *dw, DupeItem *di)$/;"	f	file:
dupe_item_remove_by_path	dupe.c	/^static gint dupe_item_remove_by_path(DupeWindow *dw, const gchar *path)$/;"	f	file:
dupe_item_set_path	dupe.c	/^static gint dupe_item_set_path(DupeWindow *dw, const gchar *source, const gchar *dest)$/;"	f	file:
dupe_item_write_cache	dupe.c	/^static void dupe_item_write_cache(DupeItem *di)$/;"	f	file:
dupe_iterations	dupe.c	/^static gint dupe_iterations(gint n)$/;"	f	file:
dupe_list_check_match	dupe.c	/^static void dupe_list_check_match(DupeWindow *dw, DupeItem *needle, GList *start)$/;"	f	file:
dupe_list_free	dupe.c	/^static void dupe_list_free(GList *list)$/;"	f	file:
dupe_listview_add	dupe.c	/^static void dupe_listview_add(DupeWindow *dw, DupeItem *parent, DupeItem *child)$/;"	f	file:
dupe_listview_add_column	dupe.c	/^static void dupe_listview_add_column(DupeWindow *dw, GtkWidget *listview, gint n, const gchar *title, gint image, gint right_justify)$/;"	f	file:
dupe_listview_color_cb	dupe.c	/^static void dupe_listview_color_cb(GtkTreeViewColumn *tree_column, GtkCellRenderer *cell,$/;"	f	file:
dupe_listview_color_shifted	dupe.c	/^static GdkColor *dupe_listview_color_shifted(GtkWidget *widget)$/;"	f	file:
dupe_listview_find_item	dupe.c	/^static gint dupe_listview_find_item(GtkListStore *store, DupeItem *item, GtkTreeIter *iter)$/;"	f	file:
dupe_listview_get_path_list	dupe.c	/^static GList *dupe_listview_get_path_list(DupeWindow *dw, GtkWidget *listview)$/;"	f	file:
dupe_listview_get_selection	dupe.c	/^static GList *dupe_listview_get_selection(DupeWindow *dw, GtkWidget *listview)$/;"	f	file:
dupe_listview_item_is_selected	dupe.c	/^static gint dupe_listview_item_is_selected(DupeWindow *dw, DupeItem *di, GtkWidget *listview)$/;"	f	file:
dupe_listview_populate	dupe.c	/^static void dupe_listview_populate(DupeWindow *dw)$/;"	f	file:
dupe_listview_press_cb	dupe.c	/^static gint dupe_listview_press_cb(GtkWidget *widget, GdkEventButton *bevent, gpointer data)$/;"	f	file:
dupe_listview_realign_colors	dupe.c	/^static void dupe_listview_realign_colors(DupeWindow *dw)$/;"	f	file:
dupe_listview_release_cb	dupe.c	/^static gint dupe_listview_release_cb(GtkWidget *widget, GdkEventButton *bevent, gpointer data)$/;"	f	file:
dupe_listview_remove	dupe.c	/^static void dupe_listview_remove(DupeWindow *dw, DupeItem *di)$/;"	f	file:
dupe_listview_select_dupes	dupe.c	/^static void dupe_listview_select_dupes(DupeWindow *dw, gint parents)$/;"	f	file:
dupe_listview_set_height	dupe.c	/^static void dupe_listview_set_height(GtkWidget *listview, gint thumb)$/;"	f	file:
dupe_listview_set_thumb	dupe.c	/^static void dupe_listview_set_thumb(DupeWindow *dw, DupeItem *di, GtkTreeIter *iter)$/;"	f	file:
dupe_loader_done_cb	dupe.c	/^static void dupe_loader_done_cb(ImageLoader *il, gpointer data)$/;"	f	file:
dupe_maint_removed	dupe.c	/^void dupe_maint_removed(const gchar *path)$/;"	f
dupe_maint_renamed	dupe.c	/^void dupe_maint_renamed(const gchar *source, const gchar *dest)$/;"	f
dupe_match	dupe.c	/^static gint dupe_match(DupeItem *a, DupeItem *b, DupeMatchType mask, gdouble *rank, gint fast)$/;"	f	file:
dupe_match_find_match	dupe.c	/^static DupeMatch *dupe_match_find_match(DupeItem *child, DupeItem *parent)$/;"	f	file:
dupe_match_find_parent	dupe.c	/^static DupeItem *dupe_match_find_parent(DupeWindow *dw, DupeItem *child)$/;"	f	file:
dupe_match_group_filter	dupe.c	/^static GList *dupe_match_group_filter(GList *list, DupeItem *di, DupeWindow *dw)$/;"	f	file:
dupe_match_group_trim	dupe.c	/^static GList *dupe_match_group_trim(GList *list, DupeWindow *dw)$/;"	f	file:
dupe_match_highest_rank	dupe.c	/^static DupeItem *dupe_match_highest_rank(DupeItem *child)$/;"	f	file:
dupe_match_link	dupe.c	/^static void dupe_match_link(DupeItem *a, DupeItem *b, gdouble rank)$/;"	f	file:
dupe_match_link_child	dupe.c	/^static void dupe_match_link_child(DupeItem *child, DupeItem *parent, gdouble rank)$/;"	f	file:
dupe_match_link_clear	dupe.c	/^static void dupe_match_link_clear(DupeItem *parent, gint unlink_children)$/;"	f	file:
dupe_match_link_exists	dupe.c	/^static gint dupe_match_link_exists(DupeItem *child, DupeItem *parent)$/;"	f	file:
dupe_match_link_rank	dupe.c	/^static gdouble dupe_match_link_rank(DupeItem *child, DupeItem *parent)$/;"	f	file:
dupe_match_print_group	dupe.c	/^static void dupe_match_print_group(DupeItem *di)$/;"	f	file:
dupe_match_print_list	dupe.c	/^static void dupe_match_print_list(GList *list)$/;"	f	file:
dupe_match_rank	dupe.c	/^static void dupe_match_rank(DupeWindow *dw)$/;"	f	file:
dupe_match_rank_sort	dupe.c	/^static GList *dupe_match_rank_sort(GList *source_list)$/;"	f	file:
dupe_match_rank_sort_cb	dupe.c	/^static gint dupe_match_rank_sort_cb(gconstpointer a, gconstpointer b)$/;"	f	file:
dupe_match_rank_update	dupe.c	/^static void dupe_match_rank_update(DupeItem *parent)$/;"	f	file:
dupe_match_reparent	dupe.c	/^static void dupe_match_reparent(DupeWindow *dw, DupeItem *old, DupeItem *new)$/;"	f	file:
dupe_match_reset_list	dupe.c	/^static void dupe_match_reset_list(GList *work)$/;"	f	file:
dupe_match_sort_groups	dupe.c	/^static void dupe_match_sort_groups(GList *list)$/;"	f	file:
dupe_match_sort_groups_cb	dupe.c	/^static gint dupe_match_sort_groups_cb(gconstpointer a, gconstpointer b)$/;"	f	file:
dupe_match_unlink	dupe.c	/^static void dupe_match_unlink(DupeItem *a, DupeItem *b)$/;"	f	file:
dupe_match_unlink_by_rank	dupe.c	/^static GList *dupe_match_unlink_by_rank(DupeItem *child, DupeItem *parent, GList *list, DupeWindow *dw)$/;"	f	file:
dupe_match_unlink_child	dupe.c	/^static void dupe_match_unlink_child(DupeItem *child, DupeItem *parent)$/;"	f	file:
dupe_menu_add_item	dupe.c	/^static void dupe_menu_add_item(GtkListStore *store, const gchar *text, DupeMatchType type, DupeWindow *dw)$/;"	f	file:
dupe_menu_clear_cb	dupe.c	/^static void dupe_menu_clear_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
dupe_menu_close_cb	dupe.c	/^static void dupe_menu_close_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
dupe_menu_collection_cb	dupe.c	/^static void dupe_menu_collection_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
dupe_menu_copy_cb	dupe.c	/^static void dupe_menu_copy_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
dupe_menu_delete_cb	dupe.c	/^static void dupe_menu_delete_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
dupe_menu_edit_cb	dupe.c	/^static void dupe_menu_edit_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
dupe_menu_info_cb	dupe.c	/^static void dupe_menu_info_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
dupe_menu_move_cb	dupe.c	/^static void dupe_menu_move_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
dupe_menu_popup_main	dupe.c	/^static GtkWidget *dupe_menu_popup_main(DupeWindow *dw, DupeItem *di)$/;"	f	file:
dupe_menu_popup_second	dupe.c	/^static GtkWidget *dupe_menu_popup_second(DupeWindow *dw, DupeItem *di)$/;"	f	file:
dupe_menu_print_cb	dupe.c	/^static void dupe_menu_print_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
dupe_menu_remove_cb	dupe.c	/^static void dupe_menu_remove_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
dupe_menu_rename_cb	dupe.c	/^static void dupe_menu_rename_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
dupe_menu_select_all_cb	dupe.c	/^static void dupe_menu_select_all_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
dupe_menu_select_dupes_set1_cb	dupe.c	/^static void dupe_menu_select_dupes_set1_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
dupe_menu_select_dupes_set2_cb	dupe.c	/^static void dupe_menu_select_dupes_set2_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
dupe_menu_select_none_cb	dupe.c	/^static void dupe_menu_select_none_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
dupe_menu_setup	dupe.c	/^static void dupe_menu_setup(DupeWindow *dw)$/;"	f	file:
dupe_menu_type_cb	dupe.c	/^static void dupe_menu_type_cb(GtkWidget *combo, gpointer data)$/;"	f	file:
dupe_menu_view	dupe.c	/^static void dupe_menu_view(DupeWindow *dw, DupeItem *di, GtkWidget *listview, gint new_window)$/;"	f	file:
dupe_menu_view_cb	dupe.c	/^static void dupe_menu_view_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
dupe_menu_viewnew_cb	dupe.c	/^static void dupe_menu_viewnew_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
dupe_popup_menu_pos_cb	dupe.c	/^static void dupe_popup_menu_pos_cb(GtkMenu *menu, gint *x, gint *y, gboolean *push_in, gpointer data)$/;"	f	file:
dupe_second_add	dupe.c	/^static void dupe_second_add(DupeWindow *dw, DupeItem *di)$/;"	f	file:
dupe_second_clear	dupe.c	/^static void dupe_second_clear(DupeWindow *dw)$/;"	f	file:
dupe_second_menu_clear_cb	dupe.c	/^static void dupe_second_menu_clear_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
dupe_second_menu_remove_cb	dupe.c	/^static void dupe_second_menu_remove_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
dupe_second_menu_select_all_cb	dupe.c	/^static void dupe_second_menu_select_all_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
dupe_second_menu_select_none_cb	dupe.c	/^static void dupe_second_menu_select_none_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
dupe_second_menu_view_cb	dupe.c	/^static void dupe_second_menu_view_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
dupe_second_menu_viewnew_cb	dupe.c	/^static void dupe_second_menu_viewnew_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
dupe_second_remove	dupe.c	/^static void dupe_second_remove(DupeWindow *dw, DupeItem *di)$/;"	f	file:
dupe_second_set_toggle_cb	dupe.c	/^static void dupe_second_set_toggle_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
dupe_second_update_status	dupe.c	/^static void dupe_second_update_status(DupeWindow *dw)$/;"	f	file:
dupe_setup_point_step	dupe.c	/^static GList *dupe_setup_point_step(DupeWindow *dw, GList *p)$/;"	f	file:
dupe_setup_reset	dupe.c	/^static void dupe_setup_reset(DupeWindow *dw)$/;"	f	file:
dupe_thumb_do	dupe.c	/^static void dupe_thumb_do(DupeWindow *dw)$/;"	f	file:
dupe_thumb_done_cb	dupe.c	/^static void dupe_thumb_done_cb(ThumbLoader *tl, gpointer data)$/;"	f	file:
dupe_thumb_error_cb	dupe.c	/^static void dupe_thumb_error_cb(ThumbLoader *tl, gpointer data)$/;"	f	file:
dupe_thumb_step	dupe.c	/^static void dupe_thumb_step(DupeWindow *dw)$/;"	f	file:
dupe_window_add_collection	dupe.c	/^void dupe_window_add_collection(DupeWindow *dw, CollectionData *collection)$/;"	f
dupe_window_add_files	dupe.c	/^void dupe_window_add_files(DupeWindow *dw, GList *list, gint recurse)$/;"	f
dupe_window_append_file_list	dupe.c	/^static void dupe_window_append_file_list(DupeWindow *dw, gint on_second)$/;"	f	file:
dupe_window_clear	dupe.c	/^void dupe_window_clear(DupeWindow *dw)$/;"	f
dupe_window_close	dupe.c	/^void dupe_window_close(DupeWindow *dw)$/;"	f
dupe_window_collection_from_selection	dupe.c	/^static void dupe_window_collection_from_selection(DupeWindow *dw)$/;"	f	file:
dupe_window_delete	dupe.c	/^static gint dupe_window_delete(GtkWidget *widget, GdkEvent *event, gpointer data)$/;"	f	file:
dupe_window_edit_selected	dupe.c	/^static void dupe_window_edit_selected(DupeWindow *dw, gint n)$/;"	f	file:
dupe_window_keypress_cb	dupe.c	/^static gint dupe_window_keypress_cb(GtkWidget *widget, GdkEventKey *event, gpointer data)$/;"	f	file:
dupe_window_list	dupe.c	/^static GList *dupe_window_list = NULL;	\/* list of open DupeWindow *s *\/$/;"	v	file:
dupe_window_new	dupe.c	/^DupeWindow *dupe_window_new(DupeMatchType match_mask)$/;"	f
dupe_window_recompare	dupe.c	/^static void dupe_window_recompare(DupeWindow *dw)$/;"	f	file:
dupe_window_remove_selection	dupe.c	/^static void dupe_window_remove_selection(DupeWindow *dw, GtkWidget *listview)$/;"	f	file:
dupe_window_show_thumb_cb	dupe.c	/^static void dupe_window_show_thumb_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
dupe_window_update_count	dupe.c	/^static void dupe_window_update_count(DupeWindow *dw, gint count_only)$/;"	f	file:
dupe_window_update_progress	dupe.c	/^static void dupe_window_update_progress(DupeWindow *dw, const gchar *status, gdouble value, gint force)$/;"	f	file:
dupes	dupe.h	/^	GList *dupes;			\/* list of dupes (DupeItem, grouping the DupeMatches) *\/$/;"	m	struct:_DupeWindow
dw	dupe.c	/^	DupeWindow *dw;$/;"	m	struct:__anon44	file:
edit_data	ui_tree_edit.h	/^	gpointer edit_data;$/;"	m	struct:_TreeEditData
edit_func	ui_tree_edit.h	/^	gint (*edit_func)(TreeEditData *ted, const gchar *oldname, const gchar *newname, gpointer data);$/;"	m	struct:_TreeEditData
editable	ui_bookmark.c	/^	gint editable;$/;"	m	struct:_BookMarkData	file:
editor_command	globals.c	/^gchar *editor_command[GQVIEW_EDITOR_SLOTS];$/;"	v
editor_command_entry	preferences.c	/^static GtkWidget *editor_command_entry[GQVIEW_EDITOR_SLOTS];$/;"	v	file:
editor_command_next	editors.c	/^static gint editor_command_next(EditorVerboseData *vd)$/;"	f	file:
editor_command_one	editors.c	/^static gint editor_command_one(const gchar *template, const gchar *path, EditorVerboseData *vd)$/;"	f	file:
editor_command_path_parse	editors.c	/^static gchar *editor_command_path_parse(const gchar *path)$/;"	f	file:
editor_command_run	editors.c	/^static void editor_command_run(const gchar *template, const gchar *text, GList *list)$/;"	f	file:
editor_command_start	editors.c	/^static void editor_command_start(const gchar *template, const gchar *text, GList *list)$/;"	f	file:
editor_default_cb	preferences.c	/^static void editor_default_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
editor_default_ok_cb	preferences.c	/^static void editor_default_ok_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
editor_help_cb	preferences.c	/^static void editor_help_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
editor_line_break	editors.c	/^static gint editor_line_break(const gchar *template, gchar **front, const gchar **end)$/;"	f	file:
editor_name	globals.c	/^gchar *editor_name[GQVIEW_EDITOR_SLOTS];$/;"	v
editor_name_entry	preferences.c	/^static GtkWidget *editor_name_entry[GQVIEW_EDITOR_SLOTS];$/;"	v	file:
editor_reset_defaults	editors.c	/^void editor_reset_defaults(void)$/;"	f
editor_slot_defaults	editors.c	/^static gchar *editor_slot_defaults[] = {$/;"	v	file:
editor_verbose_io_cb	editors.c	/^static gboolean editor_verbose_io_cb(GIOChannel *source, GIOCondition condition, gpointer data)$/;"	f	file:
editor_verbose_start	editors.c	/^static gint editor_verbose_start(EditorVerboseData *vd, gchar *command)$/;"	f	file:
editor_verbose_window	editors.c	/^static EditorVerboseData *editor_verbose_window(const gchar *template, const gchar *text)$/;"	f	file:
editor_verbose_window_close	editors.c	/^static void editor_verbose_window_close(GenericDialog *gd, gpointer data)$/;"	f	file:
editor_verbose_window_enable_close	editors.c	/^static void editor_verbose_window_enable_close(EditorVerboseData *vd)$/;"	f	file:
editor_verbose_window_fill	editors.c	/^static void editor_verbose_window_fill(EditorVerboseData *vd, gchar *text, gint len)$/;"	f	file:
editor_verbose_window_progress	editors.c	/^static void editor_verbose_window_progress(EditorVerboseData *vd, const gchar *text)$/;"	f	file:
editor_verbose_window_stop	editors.c	/^static void editor_verbose_window_stop(GenericDialog *gd, gpointer data)$/;"	f	file:
editor_window_flag_set	editors.c	/^gint editor_window_flag_set(gint n)$/;"	f
elements	exif.h	/^	guint elements;$/;"	m	struct:_ExifItem
enable_delete_key	globals.c	/^gint enable_delete_key = TRUE;$/;"	v
enable_delete_key_c	preferences.c	/^static gint enable_delete_key_c;$/;"	v	file:
enable_in_place_rename	globals.c	/^gint enable_in_place_rename = TRUE;$/;"	v
enable_in_place_rename_c	preferences.c	/^static gint enable_in_place_rename_c;$/;"	v	file:
enable_metadata_dirs	globals.c	/^gint enable_metadata_dirs = FALSE;$/;"	v
enable_metadata_dirs_c	preferences.c	/^static gint enable_metadata_dirs_c;$/;"	v	file:
enable_read_ahead	globals.c	/^gint enable_read_ahead = TRUE;$/;"	v
enable_read_ahead_c	preferences.c	/^static gint enable_read_ahead_c;$/;"	v	file:
enable_thumb_caching	globals.c	/^gint enable_thumb_caching = TRUE;$/;"	v
enable_thumb_caching_c	preferences.c	/^static gint enable_thumb_caching_c;$/;"	v	file:
enable_thumb_dirs	globals.c	/^gint enable_thumb_dirs = FALSE;$/;"	v
enable_thumb_dirs_c	preferences.c	/^static gint enable_thumb_dirs_c;$/;"	v	file:
enabled	filelist.h	/^	gint enabled;$/;"	m	struct:_FilterEntry
encoding_dialog	ui_fileops.c	/^static void encoding_dialog(const gchar *path)$/;"	f	file:
encoding_dialog_delay	ui_fileops.c	/^static gint encoding_dialog_delay(gpointer data)$/;"	f	file:
encoding_dialog_idle	ui_fileops.c	/^static gint encoding_dialog_idle(gpointer data)$/;"	f	file:
enter_data	ui_tabcomp.c	/^	gpointer enter_data;$/;"	m	struct:_TabCompData	file:
enter_func	ui_tabcomp.c	/^	void (*enter_func)(const gchar *, gpointer);$/;"	m	struct:_TabCompData	file:
entry	cache_maint.c	/^	GtkWidget *entry;$/;"	m	struct:_CMData	file:
entry	cache_maint.c	/^	GtkWidget *entry;$/;"	m	struct:_CleanData	file:
entry	ui_bookmark.c	/^	GtkWidget *entry;$/;"	m	struct:_HistoryComboData	file:
entry	ui_pathsel.c	/^	GtkWidget *entry;$/;"	m	struct:_Dest_Data	file:
entry	ui_tabcomp.c	/^	GtkWidget *entry;$/;"	m	struct:_TabCompData	file:
entry	ui_tree_edit.h	/^	GtkWidget *entry;$/;"	m	struct:_TreeEditData
entry	ui_utildlg.h	/^	GtkWidget *entry;$/;"	m	struct:_FileDialog
entry_keywords	search.c	/^	GtkWidget *entry_keywords;$/;"	m	struct:_SearchData	file:
entry_name	search.c	/^	GtkWidget *entry_name;$/;"	m	struct:_SearchData	file:
entry_similarity	search.c	/^	GtkWidget *entry_similarity;$/;"	m	struct:_SearchData	file:
error	cache-loader.h	/^	gint error;$/;"	m	struct:_CacheLoader
error	print.c	/^	sig_atomic_t *error;$/;"	m	struct:_PipeError	file:
escape_char_list	ui_bookmark.c	/^static gint escape_char_list[] = {$/;"	v	file:
escape_code	ui_bookmark.c	/^static const gchar *escape_code(guchar c)$/;"	f	file:
escape_test	ui_bookmark.c	/^static gint escape_test(guchar c)$/;"	f	file:
eventbox	pixbuf-renderer.h	/^	GtkEventBox eventbox;$/;"	m	struct:_PixbufRenderer
exec_prefix	Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	icons/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	icons/svg/Makefile	/^exec_prefix = ${prefix}$/;"	m
exif_byte_get_int16	exif.c	/^guint16 exif_byte_get_int16(unsigned char *f, ExifByteOrder bo)$/;"	f
exif_byte_get_int32	exif.c	/^guint32 exif_byte_get_int32(unsigned char *f, ExifByteOrder bo)$/;"	f
exif_byte_put_int16	exif.c	/^void exif_byte_put_int16(unsigned char *f, guint16 n, ExifByteOrder bo)$/;"	f
exif_byte_put_int32	exif.c	/^void exif_byte_put_int32(unsigned char *f, guint32 n, ExifByteOrder bo)$/;"	f
exif_date_enable	pan-types.h	/^	gint exif_date_enable;$/;"	m	struct:_PanWindow
exif_free	exif.c	/^void exif_free(ExifData *exif)$/;"	f
exif_func	format_raw.c	/^	FormatRawExifParseFunc exif_func;$/;"	m	struct:_FormatRawEntry	file:
exif_get_data_as_text	exif.c	/^gchar *exif_get_data_as_text(ExifData *exif, const gchar *key)$/;"	f
exif_get_description_by_key	exif.c	/^const gchar *exif_get_description_by_key(const gchar *key)$/;"	f
exif_get_formatted_by_key	exif.c	/^static gchar *exif_get_formatted_by_key(ExifData *exif, const gchar *key, gint *key_valid)$/;"	f	file:
exif_get_integer	exif.c	/^gint exif_get_integer(ExifData *exif, const gchar *key, gint *value)$/;"	f
exif_get_item	exif.c	/^ExifItem *exif_get_item(ExifData *exif, const gchar *key)$/;"	f
exif_get_rational	exif.c	/^ExifRational *exif_get_rational(ExifData *exif, const gchar *key, gint *sign)$/;"	f
exif_get_rational_as_double	exif.c	/^static double exif_get_rational_as_double(ExifData *exif, const gchar *key)$/;"	f	file:
exif_item_copy_data	exif.c	/^void exif_item_copy_data(ExifItem *item, void *src, guint len,$/;"	f
exif_item_free	exif.c	/^static void exif_item_free(ExifItem *item)$/;"	f	file:
exif_item_get_data_as_text	exif.c	/^gchar *exif_item_get_data_as_text(ExifItem *item)$/;"	f
exif_item_get_description	exif.c	/^const char *exif_item_get_description(ExifItem *item)$/;"	f
exif_item_get_format_name	exif.c	/^const char *exif_item_get_format_name(ExifItem *item, gint brief)$/;"	f
exif_item_get_integer	exif.c	/^gint exif_item_get_integer(ExifItem *item, gint *value)$/;"	f
exif_item_get_rational	exif.c	/^ExifRational *exif_item_get_rational(ExifItem *item, gint *sign)$/;"	f
exif_item_get_tag_name	exif.c	/^const char *exif_item_get_tag_name(ExifItem *item)$/;"	f
exif_item_new	exif.c	/^ExifItem *exif_item_new(ExifFormatType format, guint tag,$/;"	f
exif_jpeg_parse	exif.c	/^static gint exif_jpeg_parse(ExifData *exif,$/;"	f	file:
exif_jpeg_parse_color	exif.c	/^static gint exif_jpeg_parse_color(ExifData *exif, unsigned char *data, guint size)$/;"	f	file:
exif_jpeg_segment_find	exif.c	/^static gint exif_jpeg_segment_find(unsigned char *data, guint size,$/;"	f	file:
exif_marker_from_tag	exif.c	/^static const ExifMarker *exif_marker_from_tag(guint16 tag, const ExifMarker *list)$/;"	f	file:
exif_parse_IFD_entry	exif.c	/^static gint exif_parse_IFD_entry(ExifData *exif, unsigned char *tiff, guint offset,$/;"	f	file:
exif_parse_IFD_table	exif.c	/^gint exif_parse_IFD_table(ExifData *exif,$/;"	f
exif_rational_to_double	exif.c	/^double exif_rational_to_double(ExifRational *r, gint sign)$/;"	f
exif_read	exif.c	/^ExifData *exif_read(const gchar *path, gint parse_color_profile)$/;"	f
exif_rotate_enable	globals.c	/^gint exif_rotate_enable = FALSE;$/;"	v
exif_rotate_enable_c	preferences.c	/^static gint exif_rotate_enable_c;$/;"	v	file:
exif_text_list_find_value	exif.c	/^gchar *exif_text_list_find_value(ExifTextList *list, guint value)$/;"	f
exif_tiff_directory_offset	exif.c	/^gint exif_tiff_directory_offset(unsigned char *data, const guint len,$/;"	f
exif_tiff_parse	exif.c	/^gint exif_tiff_parse(ExifData *exif, unsigned char *tiff, guint size, ExifMarker *list)$/;"	f
exif_type	format_raw.c	/^	const FormatRawExifType exif_type;$/;"	m	struct:_FormatRawEntry	file:
exif_write_data_list	exif.c	/^void exif_write_data_list(ExifData *exif, FILE *f, gint human_readable_list)$/;"	f
exif_write_item	exif.c	/^static void exif_write_item(FILE *f, ExifItem *item)$/;"	f	file:
exit_confirm_cancel_cb	main.c	/^static void exit_confirm_cancel_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
exit_confirm_dlg	main.c	/^static gint exit_confirm_dlg(void)$/;"	f	file:
exit_confirm_exit_cb	main.c	/^static void exit_confirm_exit_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
exit_dialog	main.c	/^static GenericDialog *exit_dialog = NULL;$/;"	v	file:
exit_gqview	main.c	/^void exit_gqview(void)$/;"	f
exit_gqview_final	main.c	/^static void exit_gqview_final(void)$/;"	f	file:
expanded	view_dir_tree.c	/^	gint expanded;$/;"	m	struct:_NodeData	file:
extension	format_raw.c	/^	const gchar *extension;$/;"	m	struct:_FormatRawEntry	file:
extension_find_dot	cache_maint.c	/^static gchar *extension_find_dot(gchar *path)$/;"	f	file:
extension_from_path	ui_fileops.c	/^const gchar *extension_from_path(const gchar *path)$/;"	f
extension_list	filelist.c	/^static GList *extension_list = NULL;$/;"	v	file:
extension_truncate	cache_maint.c	/^static gint extension_truncate(gchar *path, const gchar *ext)$/;"	f	file:
extensions	filelist.h	/^	gchar *extensions;$/;"	m	struct:_FilterEntry
extra_ICONS	Makefile	/^extra_ICONS = \\$/;"	m
extra_SLIK	Makefile	/^extra_SLIK = \\$/;"	m
extra_label	dupe.h	/^	GtkWidget *extra_label;$/;"	m	struct:_DupeWindow
extra_label	typedefs.h	/^	GtkWidget *extra_label;$/;"	m	struct:_CollectTable
f_view	ui_pathsel.c	/^	GtkWidget *f_view;$/;"	m	struct:_Dest_Data	file:
fd	editors.c	/^	int fd;$/;"	m	struct:_EditorVerboseData	file:
fd	pan-types.h	/^	FileData *fd;$/;"	m	struct:_PanItem
fd	pan-types.h	/^	FileData fd;$/;"	m	struct:_PanCacheData
fd	remote.c	/^	gint fd;$/;"	m	struct:_RemoteClient	file:
fd	remote.h	/^	int fd;$/;"	m	struct:_RemoteConnection
fd	search.c	/^	FileData fd;$/;"	m	struct:_MatchFileData	file:
fd	ui_tabcomp.c	/^	FileDialog *fd;$/;"	m	struct:_TabCompData	file:
fd	utilops.c	/^	FileDialog *fd;$/;"	m	struct:_RenameDataMult	file:
fd	view_dir_tree.c	/^	FileData *fd;$/;"	m	struct:_NodeData	file:
fd	view_file_icon.c	/^	FileData fd;$/;"	m	struct:_IconData	file:
fd_button	ui_tabcomp.c	/^	GtkWidget *fd_button;$/;"	m	struct:_TabCompData	file:
fd_folders_only	ui_tabcomp.c	/^	gint fd_folders_only;$/;"	m	struct:_TabCompData	file:
fd_title	ui_tabcomp.c	/^	gchar *fd_title;$/;"	m	struct:_TabCompData	file:
file_data_free	filelist.c	/^void file_data_free(FileData *fd)$/;"	f
file_data_multiple_free	utilops.c	/^static void file_data_multiple_free(FileDataMult *fdm)$/;"	f	file:
file_data_multiple_new	utilops.c	/^static FileDataMult *file_data_multiple_new(GList *source_list, const gchar *dest, gint copy)$/;"	f	file:
file_data_new	filelist.c	/^FileData *file_data_new(const gchar *path, struct stat *st)$/;"	f
file_data_new_simple	filelist.c	/^FileData *file_data_new_simple(const gchar *path)$/;"	f
file_data_single_free	utilops.c	/^static void file_data_single_free(FileDataSingle *fds)$/;"	f	file:
file_data_single_new	utilops.c	/^static FileDataSingle *file_data_single_new(const gchar *source, const gchar *dest, gint copy)$/;"	f	file:
file_dialog_add_button	ui_utildlg.c	/^GtkWidget *file_dialog_add_button(FileDialog *fd, const gchar *stock_id, const gchar *text,$/;"	f
file_dialog_add_filter	ui_utildlg.c	/^void file_dialog_add_filter(FileDialog *fd, const gchar *filter, const gchar *filter_desc, gint set)$/;"	f
file_dialog_add_path_widgets	ui_utildlg.c	/^void file_dialog_add_path_widgets(FileDialog *fd, const gchar *default_path, const gchar *path,$/;"	f
file_dialog_clear_filter	ui_utildlg.c	/^void file_dialog_clear_filter(FileDialog *fd)$/;"	f
file_dialog_close	ui_utildlg.c	/^void file_dialog_close(FileDialog *fd)$/;"	f
file_dialog_entry_cb	ui_utildlg.c	/^static void file_dialog_entry_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
file_dialog_entry_enter_cb	ui_utildlg.c	/^static void file_dialog_entry_enter_cb(const gchar *path, gpointer data)$/;"	f	file:
file_dialog_new	ui_utildlg.c	/^FileDialog *file_dialog_new(const gchar *title,$/;"	f
file_dialog_sync_history	ui_utildlg.c	/^void file_dialog_sync_history(FileDialog *fd, gint dir_only)$/;"	f
file_extension_match	ui_fileops.c	/^gint file_extension_match(const gchar *path, const gchar *ext)$/;"	f
file_filter_disable	globals.c	/^gint file_filter_disable = FALSE;$/;"	v
file_filter_disable_c	preferences.c	/^static gint file_filter_disable_c;$/;"	v	file:
file_in_path	ui_fileops.c	/^gint file_in_path(const gchar *name)$/;"	f
file_list	ui_tabcomp.c	/^	GList *file_list;$/;"	m	struct:_TabCompData	file:
file_location	typedefs.h	/^	LayoutLocation file_location;$/;"	m	struct:_LayoutWindow
file_maint_copied	utilops.c	/^void file_maint_copied(const gchar *source, const gchar *dest)$/;"	f
file_maint_moved	utilops.c	/^void file_maint_moved(const gchar *source, const gchar *dest, GList *ignore_list)$/;"	f
file_maint_removed	utilops.c	/^void file_maint_removed(const gchar *path, GList *ignore_list)$/;"	f
file_maint_renamed	utilops.c	/^void file_maint_renamed(const gchar *source, const gchar *dest)$/;"	f
file_sort_ascending	globals.c	/^gint file_sort_ascending = TRUE;$/;"	v
file_sort_case_sensitive	ui_fileops.c	/^gint file_sort_case_sensitive = FALSE;$/;"	v
file_sort_case_sensitive_c	preferences.c	/^static gint file_sort_case_sensitive_c;$/;"	v	file:
file_sort_method	globals.c	/^SortType file_sort_method = SORT_NAME;$/;"	v
file_util_copy	utilops.c	/^void file_util_copy(const gchar *source_path, GList *source_list, const gchar *dest_path, GtkWidget *parent)$/;"	f
file_util_copy_simple	utilops.c	/^void file_util_copy_simple(GList *list, const gchar *dest_path)$/;"	f
file_util_create_dir	utilops.c	/^void file_util_create_dir(const gchar *path, GtkWidget *parent)$/;"	f
file_util_create_dir_cb	utilops.c	/^static void file_util_create_dir_cb(FileDialog *fd, gpointer data)$/;"	f	file:
file_util_create_dir_close_cb	utilops.c	/^static void file_util_create_dir_close_cb(FileDialog *fd, gpointer data)$/;"	f	file:
file_util_create_dir_do	utilops.c	/^static void file_util_create_dir_do(const gchar *base, const gchar *name)$/;"	f	file:
file_util_data_free	utilops.c	/^static void file_util_data_free(UtilityData *ud)$/;"	f	file:
file_util_delete	utilops.c	/^void file_util_delete(const gchar *source_path, GList *source_list, GtkWidget *parent)$/;"	f
file_util_delete_cancel_cb	utilops.c	/^static void file_util_delete_cancel_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
file_util_delete_dir	utilops.c	/^void file_util_delete_dir(const gchar *path, GtkWidget *parent)$/;"	f
file_util_delete_dir_cancel_cb	utilops.c	/^static void file_util_delete_dir_cancel_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
file_util_delete_dir_empty_path	utilops.c	/^static gchar *file_util_delete_dir_empty_path(const gchar *path, gint real_content, gint level)$/;"	f	file:
file_util_delete_dir_ok_cb	utilops.c	/^static void file_util_delete_dir_ok_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
file_util_delete_dir_preview_cb	utilops.c	/^static gboolean file_util_delete_dir_preview_cb(GtkTreeSelection *selection, GtkTreeModel *store,$/;"	f	file:
file_util_delete_dir_remaining_folders	utilops.c	/^static GList *file_util_delete_dir_remaining_folders(GList *dlist)$/;"	f	file:
file_util_delete_multiple	utilops.c	/^static void file_util_delete_multiple(GList *source_list, GtkWidget *parent)$/;"	f	file:
file_util_delete_multiple_cancel_cb	utilops.c	/^static void file_util_delete_multiple_cancel_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
file_util_delete_multiple_ok_cb	utilops.c	/^static void file_util_delete_multiple_ok_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
file_util_delete_multiple_review_back	utilops.c	/^static void file_util_delete_multiple_review_back(GtkWidget *button, gpointer data)$/;"	f	file:
file_util_delete_multiple_review_button_cb	utilops.c	/^static void file_util_delete_multiple_review_button_cb(ImageWindow *imd, gint button, guint32 time,$/;"	f	file:
file_util_delete_multiple_review_next	utilops.c	/^static void file_util_delete_multiple_review_next(GtkWidget *button, gpointer data)$/;"	f	file:
file_util_delete_multiple_review_scroll_cb	utilops.c	/^static void file_util_delete_multiple_review_scroll_cb(ImageWindow *imd, GdkScrollDirection direction, guint32 time,$/;"	f	file:
file_util_delete_multiple_review_skip	utilops.c	/^static void file_util_delete_multiple_review_skip(GenericDialog *gd, gint next)$/;"	f	file:
file_util_delete_ok_cb	utilops.c	/^static void file_util_delete_ok_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
file_util_delete_single	utilops.c	/^static void file_util_delete_single(const gchar *path, GtkWidget *parent)$/;"	f	file:
file_util_dialog_add_list	utilops.c	/^static GtkWidget *file_util_dialog_add_list(GtkWidget *box, GList *list, gint full_paths)$/;"	f	file:
file_util_dialog_add_list_column	utilops.c	/^static GtkTreeViewColumn *file_util_dialog_add_list_column(GtkWidget *view, const gchar *text, gint n)$/;"	f	file:
file_util_file_dlg	utilops.c	/^FileDialog *file_util_file_dlg(const gchar *title,$/;"	f
file_util_gen_dlg	utilops.c	/^GenericDialog *file_util_gen_dlg(const gchar *title,$/;"	f
file_util_move	utilops.c	/^void file_util_move(const gchar *source_path, GList *source_list, const gchar *dest_path, GtkWidget *parent)$/;"	f
file_util_move_cancel_cb	utilops.c	/^static void file_util_move_cancel_cb(FileDialog *fd, gpointer data)$/;"	f	file:
file_util_move_cb	utilops.c	/^static void file_util_move_cb(FileDialog *fd, gpointer data)$/;"	f	file:
file_util_move_check	utilops.c	/^static void file_util_move_check(FileDialog *fd)$/;"	f	file:
file_util_move_do	utilops.c	/^static void file_util_move_do(FileDialog *fd)$/;"	f	file:
file_util_move_multiple	utilops.c	/^static void file_util_move_multiple(FileDataMult *fdm)$/;"	f	file:
file_util_move_multiple_all_cb	utilops.c	/^static void file_util_move_multiple_all_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
file_util_move_multiple_cancel_cb	utilops.c	/^static void file_util_move_multiple_cancel_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
file_util_move_multiple_confirm_dialog	utilops.c	/^static GenericDialog *file_util_move_multiple_confirm_dialog(FileDataMult *fdm)$/;"	f	file:
file_util_move_multiple_continue_cb	utilops.c	/^static void file_util_move_multiple_continue_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
file_util_move_multiple_ok_cb	utilops.c	/^static void file_util_move_multiple_ok_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
file_util_move_multiple_rename_auto_cb	utilops.c	/^static void file_util_move_multiple_rename_auto_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
file_util_move_multiple_rename_cb	utilops.c	/^static void file_util_move_multiple_rename_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
file_util_move_multiple_skip_all_cb	utilops.c	/^static void file_util_move_multiple_skip_all_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
file_util_move_multiple_skip_cb	utilops.c	/^static void file_util_move_multiple_skip_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
file_util_move_simple	utilops.c	/^void file_util_move_simple(GList *list, const gchar *dest_path)$/;"	f
file_util_move_single	utilops.c	/^static void file_util_move_single(FileDataSingle *fds)$/;"	f	file:
file_util_move_single_cancel_cb	utilops.c	/^static void file_util_move_single_cancel_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
file_util_move_single_ok_cb	utilops.c	/^static void file_util_move_single_ok_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
file_util_move_single_rename_auto_cb	utilops.c	/^static void file_util_move_single_rename_auto_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
file_util_move_single_rename_cb	utilops.c	/^static void file_util_move_single_rename_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
file_util_rename	utilops.c	/^void file_util_rename(const gchar *source_path, GList *source_list, GtkWidget *parent)$/;"	f
file_util_rename_dir	utilops.c	/^gint file_util_rename_dir(const gchar *old_path, const gchar *new_path, GtkWidget *parent)$/;"	f
file_util_rename_multiple	utilops.c	/^static void file_util_rename_multiple(RenameDataMult *rd)$/;"	f	file:
file_util_rename_multiple_add_column	utilops.c	/^static GtkTreeViewColumn *file_util_rename_multiple_add_column(RenameDataMult *rd, const gchar *text, gint n)$/;"	f	file:
file_util_rename_multiple_auto	utilops.c	/^static void file_util_rename_multiple_auto(RenameDataMult *rd)$/;"	f	file:
file_util_rename_multiple_auto_change	utilops.c	/^static void file_util_rename_multiple_auto_change(GtkWidget *widget, gpointer data)$/;"	f	file:
file_util_rename_multiple_auto_format_name	utilops.c	/^static gchar *file_util_rename_multiple_auto_format_name(const gchar *format, const gchar *name, gint n)$/;"	f	file:
file_util_rename_multiple_cancel_cb	utilops.c	/^static void file_util_rename_multiple_cancel_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
file_util_rename_multiple_cb	utilops.c	/^static void file_util_rename_multiple_cb(FileDialog *fd, gpointer data)$/;"	f	file:
file_util_rename_multiple_close_cb	utilops.c	/^static void file_util_rename_multiple_close_cb(FileDialog *fd, gpointer data)$/;"	f	file:
file_util_rename_multiple_destroy_cb	utilops.c	/^static void file_util_rename_multiple_destroy_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
file_util_rename_multiple_do	utilops.c	/^static void file_util_rename_multiple_do(GList *source_list, GtkWidget *parent)$/;"	f	file:
file_util_rename_multiple_find_row	utilops.c	/^static gint file_util_rename_multiple_find_row(RenameDataMult *rd, const gchar *path, GtkTreeIter *iter)$/;"	f	file:
file_util_rename_multiple_idle_cb	utilops.c	/^static gboolean file_util_rename_multiple_idle_cb(gpointer data)$/;"	f	file:
file_util_rename_multiple_ok_cb	utilops.c	/^static void file_util_rename_multiple_ok_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
file_util_rename_multiple_preview_adj_cb	utilops.c	/^static void file_util_rename_multiple_preview_adj_cb(GtkWidget *spin, gpointer data)$/;"	f	file:
file_util_rename_multiple_preview_entry_cb	utilops.c	/^static void file_util_rename_multiple_preview_entry_cb(GtkWidget *entry, gpointer data)$/;"	f	file:
file_util_rename_multiple_preview_order_cb	utilops.c	/^static void file_util_rename_multiple_preview_order_cb(GtkTreeModel *treemodel, GtkTreePath *tpath,$/;"	f	file:
file_util_rename_multiple_preview_update	utilops.c	/^static void file_util_rename_multiple_preview_update(RenameDataMult *rd)$/;"	f	file:
file_util_rename_multiple_select_cb	utilops.c	/^static gboolean file_util_rename_multiple_select_cb(GtkTreeSelection *selection, GtkTreeModel *store, GtkTreePath *tpath,$/;"	f	file:
file_util_rename_single	utilops.c	/^static void file_util_rename_single(FileDataSingle *fds)$/;"	f	file:
file_util_rename_single_cancel_cb	utilops.c	/^static void file_util_rename_single_cancel_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
file_util_rename_single_cb	utilops.c	/^static void file_util_rename_single_cb(FileDialog *fd, gpointer data)$/;"	f	file:
file_util_rename_single_close_cb	utilops.c	/^static void file_util_rename_single_close_cb(FileDialog *fd, gpointer data)$/;"	f	file:
file_util_rename_single_do	utilops.c	/^static void file_util_rename_single_do(const gchar *source_path, GtkWidget *parent)$/;"	f	file:
file_util_rename_single_ok_cb	utilops.c	/^static void file_util_rename_single_ok_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
file_util_safe_del_close_cb	utilops.c	/^static void file_util_safe_del_close_cb(GtkWidget *dialog, gpointer data)$/;"	f	file:
file_util_safe_del_toggle_cb	utilops.c	/^static void file_util_safe_del_toggle_cb(GtkWidget *button, gpointer data)$/;"	f	file:
file_util_safe_dest	utilops.c	/^static gchar *file_util_safe_dest(const gchar *path)$/;"	f	file:
file_util_safe_number	utilops.c	/^static gint file_util_safe_number(gint64 free_space)$/;"	f	file:
file_util_trash_clear	utilops.c	/^void file_util_trash_clear(void)$/;"	f
file_util_unlink	utilops.c	/^static gint file_util_unlink(const gchar *path)$/;"	f	file:
file_util_warning_dialog	utilops.c	/^GenericDialog *file_util_warning_dialog(const gchar *heading, const gchar *message,$/;"	f
file_util_warning_dialog_ok_cb	utilops.c	/^static void file_util_warning_dialog_ok_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
file_view	typedefs.h	/^	GtkWidget *file_view;$/;"	m	struct:_LayoutWindow
filelist_free	filelist.c	/^void filelist_free(GList *list)$/;"	f
filelist_insert_sort	filelist.c	/^GList *filelist_insert_sort(GList *list, FileData *fd, SortType method, gint ascend)$/;"	f
filelist_read	filelist.c	/^gint filelist_read(const gchar *path, GList **files, GList **dirs)$/;"	f
filelist_sort	filelist.c	/^GList *filelist_sort(GList *list, SortType method, gint ascend)$/;"	f
filelist_sort_ascend	filelist.c	/^static gint filelist_sort_ascend = TRUE;$/;"	v	file:
filelist_sort_method	filelist.c	/^static SortType filelist_sort_method = SORT_NONE;$/;"	v	file:
filename_base_length	utilops.c	/^static gint filename_base_length(const gchar *name)$/;"	f	file:
filename_filter	globals.c	/^GList *filename_filter = NULL;$/;"	v
filename_from_path	ui_fileops.c	/^const gchar *filename_from_path(const gchar *path)$/;"	f
filesize	ui_fileops.c	/^gint64 filesize(const gchar *s)$/;"	f
filetime	ui_fileops.c	/^time_t filetime(const gchar *s)$/;"	f
filetime_set	ui_fileops.c	/^gint filetime_set(const gchar *s, time_t tval)$/;"	f
filled	similar.h	/^        gint filled;$/;"	m	struct:_ImageSimilarityData
filter	ui_pathsel.c	/^	gchar *filter;$/;"	m	struct:_Dest_Data	file:
filter_add	filelist.c	/^void filter_add(const gchar *key, const gchar *description, const gchar *extensions, gint enabled)$/;"	f
filter_add_cb	preferences.c	/^static void filter_add_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
filter_add_defaults	filelist.c	/^void filter_add_defaults(void)$/;"	f
filter_add_if_missing	filelist.c	/^static void filter_add_if_missing(const gchar *key, const gchar *description, const gchar *extensions, gint enabled)$/;"	f	file:
filter_add_unique	filelist.c	/^void filter_add_unique(const gchar *description, const gchar *extensions, gint enabled)$/;"	f
filter_combo	ui_pathsel.c	/^	GtkWidget *filter_combo;$/;"	m	struct:_Dest_Data	file:
filter_default_cb	preferences.c	/^static void filter_default_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
filter_default_ok_cb	preferences.c	/^static void filter_default_ok_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
filter_disable_cb	preferences.c	/^static void filter_disable_cb(GtkWidget* widget, gpointer data)$/;"	f	file:
filter_entry_free	filelist.c	/^static void filter_entry_free(FilterEntry *fe)$/;"	f	file:
filter_entry_new	filelist.c	/^static FilterEntry *filter_entry_new(const gchar *key, const gchar *description,$/;"	f	file:
filter_get_list	filelist.c	/^GList *filter_get_list(void)$/;"	f
filter_key_exists	filelist.c	/^static gint filter_key_exists(const gchar *key)$/;"	f	file:
filter_list	filelist.c	/^static GList *filter_list = NULL;$/;"	v	file:
filter_list	ui_pathsel.c	/^	GList *filter_list;$/;"	m	struct:_Dest_Data	file:
filter_name_exists	filelist.c	/^gint filter_name_exists(const gchar *name)$/;"	f
filter_parse	filelist.c	/^void filter_parse(const gchar *text)$/;"	f
filter_rebuild	filelist.c	/^void filter_rebuild(void)$/;"	f
filter_remove_cb	preferences.c	/^static void filter_remove_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
filter_remove_entry	filelist.c	/^void filter_remove_entry(FilterEntry *fe)$/;"	f
filter_reset	filelist.c	/^void filter_reset(void)$/;"	f
filter_set_func	preferences.c	/^static void filter_set_func(GtkTreeViewColumn *tree_column, GtkCellRenderer *cell,$/;"	f	file:
filter_store	preferences.c	/^static GtkListStore *filter_store = NULL;$/;"	v	file:
filter_store_desc_edit_cb	preferences.c	/^static void filter_store_desc_edit_cb(GtkCellRendererText *cell, gchar *path_str,$/;"	f	file:
filter_store_enable_cb	preferences.c	/^static void filter_store_enable_cb(GtkCellRendererToggle *renderer,$/;"	f	file:
filter_store_ext_edit_cb	preferences.c	/^static void filter_store_ext_edit_cb(GtkCellRendererText *cell, gchar *path_str,$/;"	f	file:
filter_store_populate	preferences.c	/^static void filter_store_populate(void)$/;"	f	file:
filter_text_list	ui_pathsel.c	/^	GList *filter_text_list;$/;"	m	struct:_Dest_Data	file:
filter_to_list	filelist.c	/^static GList *filter_to_list(const gchar *extensions)$/;"	f	file:
filter_write_list	filelist.c	/^void filter_write_list(FILE *f)$/;"	f
fit_window	globals.c	/^gint fit_window = FALSE;$/;"	v
fit_window_c	preferences.c	/^static gint fit_window_c;$/;"	v	file:
fixed_height	cellrenderericon.h	/^	gint fixed_height;$/;"	m	struct:_GQvCellRendererIcon
fixed_width	cellrenderericon.h	/^	gint fixed_width;$/;"	m	struct:_GQvCellRendererIcon
flag_mask	typedefs.h	/^	gint flag_mask;$/;"	m	struct:_CollectInfo
flist	utilops.c	/^	GList *flist;$/;"	m	struct:_UtilityData	file:
float_window_divider	globals.c	/^gint float_window_divider = -1;$/;"	v
float_window_h	globals.c	/^gint float_window_h = 450;$/;"	v
float_window_w	globals.c	/^gint float_window_w = 260;$/;"	v
float_window_x	globals.c	/^gint float_window_x = 0;$/;"	v
float_window_y	globals.c	/^gint float_window_y = 0;$/;"	v
focus_column	typedefs.h	/^	gint focus_column;$/;"	m	struct:_CollectTable
focus_column	typedefs.h	/^	gint focus_column;$/;"	m	struct:_ViewFileIcon
focus_fd	typedefs.h	/^	FileData *focus_fd;$/;"	m	struct:_ViewFileIcon
focus_info	typedefs.h	/^	CollectInfo *focus_info;$/;"	m	struct:_CollectTable
focus_row	typedefs.h	/^	gint focus_row;$/;"	m	struct:_CollectTable
focus_row	typedefs.h	/^	gint focus_row;$/;"	m	struct:_ViewFileIcon
focused	cellrenderericon.h	/^	gboolean focused;$/;"	m	struct:_GQvCellRendererIcon
folder_closed	icons/icons_inline.h	/^const guint8 folder_closed[] __attribute__ ((__aligned__ (4))) = $/;"	v
folder_entry	cache_maint.c	/^	GtkWidget *folder_entry;$/;"	m	struct:_CacheManager	file:
folder_group	bar_sort.c	/^	GtkWidget *folder_group;$/;"	m	struct:_SortData	file:
folder_icons_free	layout_util.c	/^void folder_icons_free(PixmapFolders *pf)$/;"	f
folder_icons_new	layout_util.c	/^PixmapFolders *folder_icons_new(void)$/;"	f
folder_locked	icons/icons_inline.h	/^const guint8 folder_locked[] __attribute__ ((__aligned__ (4))) = $/;"	v
folder_open	icons/icons_inline.h	/^const guint8 folder_open[] __attribute__ ((__aligned__ (4))) = $/;"	v
folder_up	icons/icons_inline.h	/^const guint8 folder_up[] __attribute__ ((__aligned__ (4))) = $/;"	v
foreground	cellrenderericon.h	/^	PangoColor foreground;$/;"	m	struct:_GQvCellRendererIcon
foreground_set	cellrenderericon.h	/^	gboolean foreground_set;$/;"	m	struct:_GQvCellRendererIcon
format	exif.h	/^	ExifFormatType	format;$/;"	m	struct:_ExifMarker
format	exif.h	/^	ExifFormatType format;$/;"	m	struct:_ExifItem
format_box	utilops.c	/^	GtkWidget *format_box;$/;"	m	struct:_RenameDataMult	file:
format_canon_makernote	format_canon.c	/^gint format_canon_makernote(ExifData *exif, unsigned char *tiff, guint offset,$/;"	f
format_canon_raw_cr2	format_canon.c	/^gint format_canon_raw_cr2(unsigned char *data, const guint len,$/;"	f
format_canon_raw_crw	format_canon.c	/^gint format_canon_raw_crw(unsigned char *data, const guint len,$/;"	f
format_debug_tiff_entry	format_raw.c	/^static void format_debug_tiff_entry(unsigned char *data, const guint len, guint offset,$/;"	f	file:
format_debug_tiff_raw	format_raw.c	/^gint format_debug_tiff_raw(unsigned char *data, const guint len,$/;"	f
format_debug_tiff_table	format_raw.c	/^static guint format_debug_tiff_table(unsigned char *data, const guint len, guint offset,$/;"	f	file:
format_entry	utilops.c	/^	GtkWidget *format_entry;$/;"	m	struct:_RenameDataMult	file:
format_exif_list	format_raw.c	/^static FormatExifEntry format_exif_list[] = {$/;"	v	file:
format_exif_makernote_find	format_raw.c	/^static FormatExifEntry *format_exif_makernote_find(ExifData *exif, unsigned char *tiff,$/;"	f	file:
format_exif_makernote_parse	format_raw.c	/^gint format_exif_makernote_parse(ExifData *exif, unsigned char *tiff, guint offset,$/;"	f
format_fuji_makernote	format_fuji.c	/^gint format_fuji_makernote(ExifData *exif, unsigned char *tiff, guint offset,$/;"	f
format_fuji_raw	format_fuji.c	/^gint format_fuji_raw(unsigned char *data, const guint len,$/;"	f
format_nikon_makernote	format_nikon.c	/^gint format_nikon_makernote(ExifData *exif, unsigned char *tiff, guint offset,$/;"	f
format_nikon_raw	format_nikon.c	/^gint format_nikon_raw(unsigned char *data, const guint len,$/;"	f
format_olympus_makernote	format_olympus.c	/^gint format_olympus_makernote(ExifData *exif, unsigned char *tiff, guint offset,$/;"	f
format_olympus_raw	format_olympus.c	/^gint format_olympus_raw(unsigned char *data, const guint len,$/;"	f
format_raw_exif_offset	format_raw.c	/^FormatRawExifType format_raw_exif_offset(unsigned char *data, const guint len, guint *exif_offset,$/;"	f
format_raw_find	format_raw.c	/^static FormatRawEntry *format_raw_find(unsigned char *data, const guint len)$/;"	f	file:
format_raw_img_exif_offsets	format_raw.c	/^gint format_raw_img_exif_offsets(unsigned char *data, const guint len,$/;"	f
format_raw_img_exif_offsets_fd	format_raw.c	/^gint format_raw_img_exif_offsets_fd(int fd, const gchar *path,$/;"	f
format_raw_list	format_raw.c	/^static FormatRawEntry format_raw_list[] = {$/;"	v	file:
format_raw_parse	format_raw.c	/^static gint format_raw_parse(FormatRawEntry *entry,$/;"	f	file:
format_spin	utilops.c	/^	GtkWidget *format_spin;$/;"	m	struct:_RenameDataMult	file:
format_tiff_find_tag_data	format_raw.c	/^static gint format_tiff_find_tag_data(unsigned char *data, const guint len,$/;"	f	file:
frame	typedefs.h	/^	GtkWidget *frame;$/;"	m	struct:_ImageWindow
frame	ui_spinner.c	/^	gint frame;$/;"	m	struct:_SpinnerData	file:
free_rgb_buffer	thumb.c	/^static void free_rgb_buffer(guchar *pixels, gpointer data)$/;"	f	file:
from_selection	typedefs.h	/^	gint from_selection;$/;"	m	struct:_SlideShowData
fs	img-view.c	/^	FullScreenData *fs;$/;"	m	struct:_ViewWindow	file:
fs	pan-types.h	/^	FullScreenData *fs;$/;"	m	struct:_PanWindow
full_screen	typedefs.h	/^	FullScreenData *full_screen;$/;"	m	struct:_LayoutWindow
fullscreen_above	globals.c	/^gint fullscreen_above = FALSE;$/;"	v
fullscreen_above_c	preferences.c	/^static gint fullscreen_above_c;$/;"	v	file:
fullscreen_busy_mouse_disable	fullscreen.c	/^static void fullscreen_busy_mouse_disable(FullScreenData *fs)$/;"	f	file:
fullscreen_clean_flip	globals.c	/^gint fullscreen_clean_flip = FALSE;$/;"	v
fullscreen_clean_flip_c	preferences.c	/^static gint fullscreen_clean_flip_c;$/;"	v	file:
fullscreen_delete_cb	fullscreen.c	/^static gint fullscreen_delete_cb(GtkWidget *widget, GdkEventAny *event, gpointer data)$/;"	f	file:
fullscreen_disable_saver	globals.c	/^gint fullscreen_disable_saver = TRUE;$/;"	v
fullscreen_disable_saver_c	preferences.c	/^static gint fullscreen_disable_saver_c;$/;"	v	file:
fullscreen_hide_mouse_cb	fullscreen.c	/^static gint fullscreen_hide_mouse_cb(gpointer data)$/;"	f	file:
fullscreen_hide_mouse_disable	fullscreen.c	/^static void fullscreen_hide_mouse_disable(FullScreenData *fs)$/;"	f	file:
fullscreen_hide_mouse_reset	fullscreen.c	/^static void fullscreen_hide_mouse_reset(FullScreenData *fs)$/;"	f	file:
fullscreen_image_complete_cb	fullscreen.c	/^static void fullscreen_image_complete_cb(ImageWindow *imd, gint preload, gpointer data)$/;"	f	file:
fullscreen_image_update_cb	fullscreen.c	/^static void fullscreen_image_update_cb(ImageWindow *imd, gpointer data)$/;"	f	file:
fullscreen_mouse_moved	fullscreen.c	/^static gint fullscreen_mouse_moved(GtkWidget *widget, GdkEventButton *bevent, gpointer data)$/;"	f	file:
fullscreen_mouse_set_busy	fullscreen.c	/^static void fullscreen_mouse_set_busy(FullScreenData *fs, gint busy)$/;"	f	file:
fullscreen_mouse_set_busy_cb	fullscreen.c	/^static gboolean fullscreen_mouse_set_busy_cb(gpointer data)$/;"	f	file:
fullscreen_mouse_set_busy_idle	fullscreen.c	/^static void fullscreen_mouse_set_busy_idle(FullScreenData *fs)$/;"	f	file:
fullscreen_prefs_find_screen_for_widget	fullscreen.c	/^gint fullscreen_prefs_find_screen_for_widget(GtkWidget *widget)$/;"	f
fullscreen_prefs_get_geometry	fullscreen.c	/^void fullscreen_prefs_get_geometry(gint screen, GtkWidget *widget, gint *x, gint *y, gint *width, gint *height,$/;"	f
fullscreen_prefs_list	fullscreen.c	/^GList *fullscreen_prefs_list(void)$/;"	f
fullscreen_prefs_list_find	fullscreen.c	/^ScreenData *fullscreen_prefs_list_find(GList *list, gint screen)$/;"	f
fullscreen_prefs_list_free	fullscreen.c	/^void fullscreen_prefs_list_free(GList *list)$/;"	f
fullscreen_prefs_selection_add	fullscreen.c	/^static void fullscreen_prefs_selection_add(GtkListStore *store, const gchar *text, gint value)$/;"	f	file:
fullscreen_prefs_selection_cb	fullscreen.c	/^static void fullscreen_prefs_selection_cb(GtkWidget *combo, gpointer data)$/;"	f	file:
fullscreen_prefs_selection_new	fullscreen.c	/^GtkWidget *fullscreen_prefs_selection_new(const gchar *text, gint *screen_value, gint *above_value)$/;"	f
fullscreen_saver_block_cb	fullscreen.c	/^static gboolean fullscreen_saver_block_cb(gpointer data)$/;"	f	file:
fullscreen_saver_deactivate	fullscreen.c	/^static void fullscreen_saver_deactivate(void)$/;"	f	file:
fullscreen_screen	globals.c	/^gint fullscreen_screen = -1;$/;"	v
fullscreen_screen_c	preferences.c	/^static gint fullscreen_screen_c;$/;"	v	file:
fullscreen_start	fullscreen.c	/^FullScreenData *fullscreen_start(GtkWidget *window, ImageWindow *imd,$/;"	f
fullscreen_stop	fullscreen.c	/^void fullscreen_stop(FullScreenData *fs)$/;"	f
func	main.c	/^	void (*func)(const gchar *text, gpointer data);$/;"	m	struct:_RemoteCommandEntry	file:
func_area_ready	typedefs.h	/^	void (*func_area_ready)(ImageLoader *, guint x, guint y, guint w, guint h, gpointer);$/;"	m	struct:_ImageLoader
func_button	typedefs.h	/^	void (*func_button)(ImageWindow *, gint button,$/;"	m	struct:_ImageWindow
func_complete	typedefs.h	/^	void (*func_complete)(ImageWindow *imd, gint preload, gpointer data);$/;"	m	struct:_ImageWindow
func_done	color-man.h	/^	ColorManDoneFunc func_done;$/;"	m	struct:_ColorMan
func_done	thumb_standard.h	/^	ThumbLoaderStdFunc func_done;$/;"	m	struct:_ThumbLoaderStd
func_done	typedefs.h	/^	ThumbLoaderFunc func_done;$/;"	m	struct:_ThumbLoader
func_done	typedefs.h	/^	void (*func_done)(ImageLoader *, gpointer);$/;"	m	struct:_ImageLoader
func_done_data	color-man.h	/^	gpointer func_done_data;$/;"	m	struct:_ColorMan
func_error	thumb_standard.h	/^	ThumbLoaderStdFunc func_error;$/;"	m	struct:_ThumbLoaderStd
func_error	typedefs.h	/^	ThumbLoaderFunc func_error;$/;"	m	struct:_ThumbLoader
func_error	typedefs.h	/^	void (*func_error)(ImageLoader *, gpointer);$/;"	m	struct:_ImageLoader
func_free	info.c	/^	void (*func_free)(gpointer data);$/;"	m	struct:_TabData	file:
func_image	info.c	/^	void (*func_image)(InfoData *id, gpointer data);$/;"	m	struct:_TabData	file:
func_parse	format_raw.c	/^	FormatExifParseFunc func_parse;$/;"	m	struct:_FormatExifEntry	file:
func_parse	format_raw.c	/^	FormatRawParseFunc func_parse;$/;"	m	struct:_FormatRawEntry	file:
func_percent	typedefs.h	/^	void (*func_percent)(ImageLoader *, gdouble, gpointer);$/;"	m	struct:_ImageLoader
func_progress	thumb_standard.h	/^	ThumbLoaderStdFunc func_progress;$/;"	m	struct:_ThumbLoaderStd
func_progress	typedefs.h	/^	ThumbLoaderFunc func_progress;$/;"	m	struct:_ThumbLoader
func_scroll	typedefs.h	/^	void (*func_scroll)(ImageWindow *, GdkScrollDirection direction,$/;"	m	struct:_ImageWindow
func_scroll_notify	typedefs.h	/^	void (*func_scroll_notify)(ImageWindow *, gint x, gint y, gint width, gint height, gpointer);$/;"	m	struct:_ImageWindow
func_state	typedefs.h	/^	void (*func_state)(ImageWindow *imd, ImageState state, gpointer data);$/;"	m	struct:_ImageWindow
func_status	typedefs.h	/^	void (*func_status)(ViewFileIcon *vfi, gpointer data);$/;"	m	struct:_ViewFileIcon
func_status	typedefs.h	/^	void (*func_status)(ViewFileList *vfl, gpointer data);$/;"	m	struct:_ViewFileList
func_sync	info.c	/^	void (*func_sync)(InfoData *id, gpointer data);$/;"	m	struct:_TabData	file:
func_thumb_status	typedefs.h	/^	void (*func_thumb_status)(ViewFileIcon *vfi, gdouble val, const gchar *text, gpointer data);$/;"	m	struct:_ViewFileIcon
func_thumb_status	typedefs.h	/^	void (*func_thumb_status)(ViewFileList *vfl, gdouble val, const gchar *text, gpointer data);$/;"	m	struct:_ViewFileList
func_tile_data	pixbuf-renderer.h	/^	gpointer func_tile_data;$/;"	m	struct:_PixbufRenderer
func_tile_dispose	pixbuf-renderer.h	/^	PixbufRendererTileDisposeFunc func_tile_dispose;$/;"	m	struct:_PixbufRenderer
func_tile_dispose	typedefs.h	/^	ImageTileDisposeFunc func_tile_dispose;$/;"	m	struct:_ImageWindow
func_tile_request	pixbuf-renderer.h	/^	PixbufRendererTileRequestFunc func_tile_request;$/;"	m	struct:_PixbufRenderer
func_tile_request	typedefs.h	/^	ImageTileRequestFunc func_tile_request;$/;"	m	struct:_ImageWindow
func_update	typedefs.h	/^	void (*func_update)(ImageWindow *imd, gpointer data);$/;"	m	struct:_ImageWindow
func_valid	thumb_standard.c	/^	void (*func_valid)(const gchar *path, gint valid, gpointer data);$/;"	m	struct:_ThumbValidate	file:
furm_simple_vlabel	utilops.c	/^static GtkWidget *furm_simple_vlabel(GtkWidget *box, const gchar *text, gint expand)$/;"	f	file:
gd	bar_info.c	/^	GenericDialog *gd;$/;"	m	struct:_KeywordDlg	file:
gd	cache_maint.c	/^	GenericDialog *gd;$/;"	m	struct:_CMData	file:
gd	cache_maint.c	/^	GenericDialog *gd;$/;"	m	struct:_CleanData	file:
gd	editors.c	/^	GenericDialog *gd;$/;"	m	struct:_EditorVerboseData	file:
gd	ui_pathsel.c	/^	GenericDialog *gd;	\/* any open confirm dialogs ? *\/$/;"	m	struct:_Dest_Data	file:
gd	ui_utildlg.h	/^	GenericDialog gd;$/;"	m	struct:_FileDialog
gd	utilops.c	/^	GenericDialog *gd;$/;"	m	struct:_UtilityData	file:
generate_list	slideshow.c	/^static GList *generate_list(SlideShowData *ss)$/;"	f	file:
generate_random_list	slideshow.c	/^static GList *generate_random_list(SlideShowData *ss)$/;"	f	file:
generic_dialog_add_button	ui_utildlg.c	/^GtkWidget *generic_dialog_add_button(GenericDialog *gd, const gchar *stock_id, const gchar *text,$/;"	f
generic_dialog_add_image	utilops.c	/^static void generic_dialog_add_image(GenericDialog *gd, GtkWidget *box,$/;"	f	file:
generic_dialog_add_message	ui_utildlg.c	/^GtkWidget *generic_dialog_add_message(GenericDialog *gd, const gchar *icon_stock_id,$/;"	f
generic_dialog_attach_default	ui_utildlg.c	/^void generic_dialog_attach_default(GenericDialog *gd, GtkWidget *widget)$/;"	f
generic_dialog_click_cb	ui_utildlg.c	/^static void generic_dialog_click_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
generic_dialog_close	ui_utildlg.c	/^void generic_dialog_close(GenericDialog *gd)$/;"	f
generic_dialog_default_key_press_cb	ui_utildlg.c	/^static gint generic_dialog_default_key_press_cb(GtkWidget *widget, GdkEventKey *event, gpointer data)$/;"	f	file:
generic_dialog_delete_cb	ui_utildlg.c	/^static gint generic_dialog_delete_cb(GtkWidget *w, GdkEventAny *event, gpointer data)$/;"	f	file:
generic_dialog_get_alternative_button_order	ui_utildlg.c	/^gint generic_dialog_get_alternative_button_order(GtkWidget *widget)$/;"	f
generic_dialog_image_set	utilops.c	/^static void generic_dialog_image_set(GenericDialog *gd, const gchar *path)$/;"	f	file:
generic_dialog_key_press_cb	ui_utildlg.c	/^static gint generic_dialog_key_press_cb(GtkWidget *widget, GdkEventKey *event, gpointer data)$/;"	f	file:
generic_dialog_new	ui_utildlg.c	/^GenericDialog *generic_dialog_new(const gchar *title,$/;"	f
generic_dialog_setup	ui_utildlg.c	/^static void generic_dialog_setup(GenericDialog *gd,$/;"	f	file:
generic_dialog_show_cb	ui_utildlg.c	/^static void generic_dialog_show_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
get_current_dir	ui_fileops.c	/^gchar *get_current_dir(void)$/;"	f
get_xv_thumbnail	thumb.c	/^static GdkPixbuf *get_xv_thumbnail(gchar *thumb_filename, gint max_w, gint max_h)$/;"	f	file:
get_zoom_increment	main.c	/^gdouble get_zoom_increment(void)$/;"	f
gettext	intl.h	16;"	d
gqv_cell_renderer_icon_class_init	cellrenderericon.c	/^gqv_cell_renderer_icon_class_init (GQvCellRendererIconClass *class)$/;"	f	file:
gqv_cell_renderer_icon_finalize	cellrenderericon.c	/^gqv_cell_renderer_icon_finalize (GObject *object)$/;"	f	file:
gqv_cell_renderer_icon_get_layout	cellrenderericon.c	/^gqv_cell_renderer_icon_get_layout(GQvCellRendererIcon *cellicon, GtkWidget *widget, gboolean will_render)$/;"	f	file:
gqv_cell_renderer_icon_get_property	cellrenderericon.c	/^gqv_cell_renderer_icon_get_property(GObject	*object,$/;"	f	file:
gqv_cell_renderer_icon_get_size	cellrenderericon.c	/^gqv_cell_renderer_icon_get_size(GtkCellRenderer *cell,$/;"	f	file:
gqv_cell_renderer_icon_get_type	cellrenderericon.c	/^gqv_cell_renderer_icon_get_type (void)$/;"	f
gqv_cell_renderer_icon_init	cellrenderericon.c	/^gqv_cell_renderer_icon_init (GQvCellRendererIcon *cellicon)$/;"	f	file:
gqv_cell_renderer_icon_new	cellrenderericon.c	/^gqv_cell_renderer_icon_new(void)$/;"	f
gqv_cell_renderer_icon_render	cellrenderericon.c	/^gqv_cell_renderer_icon_render(GtkCellRenderer		*cell,$/;"	f	file:
gqv_cell_renderer_icon_set_property	cellrenderericon.c	/^gqv_cell_renderer_icon_set_property(GObject		*object,$/;"	f	file:
gqview_DEPENDENCIES	Makefile	/^gqview_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \\$/;"	m
gqview_LDADD	Makefile	/^gqview_LDADD = $(GTK_LIBS) $(INTLLIBS) $(LCMS_LIBS)$/;"	m
gqview_OBJECTS	Makefile	/^gqview_OBJECTS = $(am_gqview_OBJECTS)$/;"	m
gqview_SOURCES	Makefile	/^gqview_SOURCES = \\$/;"	m
gqview_command_collection	main.c	/^static CollectionData *gqview_command_collection = NULL;$/;"	v	file:
gqview_icon	icons/icons_inline.h	/^const guint8 gqview_icon[] __attribute__ ((__aligned__ (4))) = $/;"	v
gqview_logo	icons/icons_inline.h	/^const guint8 gqview_logo[] __attribute__ ((__aligned__ (4))) = $/;"	v
gqview_remote	main.c	/^static RemoteConnection *gqview_remote = NULL;$/;"	v	file:
gqview_remote_build_list	main.c	/^static GList *gqview_remote_build_list(GList *list, int argc, char *argv[])$/;"	f	file:
gqview_remote_cb	main.c	/^static void gqview_remote_cb(RemoteConnection *rc, const gchar *text, gpointer data)$/;"	f	file:
gqview_remote_command_find	main.c	/^static RemoteCommandEntry *gqview_remote_command_find(const gchar *text, const gchar **offset)$/;"	f	file:
gqview_remote_control	main.c	/^static void gqview_remote_control(const gchar *arg_exec, GList *remote_list, const gchar *path,$/;"	f	file:
gqview_remote_help	main.c	/^static void gqview_remote_help(void)$/;"	f	file:
gr_file_load	main.c	/^static void gr_file_load(const gchar *text, gpointer data)$/;"	f	file:
gr_file_view	main.c	/^static void gr_file_view(const gchar *text, gpointer data)$/;"	f	file:
gr_fullscreen_start	main.c	/^static void gr_fullscreen_start(const gchar *text, gpointer data)$/;"	f	file:
gr_fullscreen_stop	main.c	/^static void gr_fullscreen_stop(const gchar *text, gpointer data)$/;"	f	file:
gr_fullscreen_toggle	main.c	/^static void gr_fullscreen_toggle(const gchar *text, gpointer data)$/;"	f	file:
gr_image_first	main.c	/^static void gr_image_first(const gchar *text, gpointer data)$/;"	f	file:
gr_image_last	main.c	/^static void gr_image_last(const gchar *text, gpointer data)$/;"	f	file:
gr_image_next	main.c	/^static void gr_image_next(const gchar *text, gpointer data)$/;"	f	file:
gr_image_prev	main.c	/^static void gr_image_prev(const gchar *text, gpointer data)$/;"	f	file:
gr_list_add	main.c	/^static void gr_list_add(const gchar *text, gpointer data)$/;"	f	file:
gr_list_clear	main.c	/^static void gr_list_clear(const gchar *text, gpointer data)$/;"	f	file:
gr_quit	main.c	/^static void gr_quit(const gchar *text, gpointer data)$/;"	f	file:
gr_quit_idle_cb	main.c	/^static gint gr_quit_idle_cb(gpointer data)$/;"	f	file:
gr_raise	main.c	/^static void gr_raise(const gchar *text, gpointer data)$/;"	f	file:
gr_slideshow_delay	main.c	/^static void gr_slideshow_delay(const gchar *text, gpointer data)$/;"	f	file:
gr_slideshow_start	main.c	/^static void gr_slideshow_start(const gchar *text, gpointer data)$/;"	f	file:
gr_slideshow_start_rec	main.c	/^static void gr_slideshow_start_rec(const gchar *text, gpointer data)$/;"	f	file:
gr_slideshow_stop	main.c	/^static void gr_slideshow_stop(const gchar *text, gpointer data)$/;"	f	file:
gr_slideshow_toggle	main.c	/^static void gr_slideshow_toggle(const gchar *text, gpointer data)$/;"	f	file:
gr_tools_hide	main.c	/^static void gr_tools_hide(const gchar *text, gpointer data)$/;"	f	file:
gr_tools_show	main.c	/^static void gr_tools_show(const gchar *text, gpointer data)$/;"	f	file:
group	cache_maint.c	/^	GtkWidget *group;$/;"	m	struct:_CleanData	file:
group	dupe.h	/^	GList *group;			\/* List of match data *\/$/;"	m	struct:_DupeItem
group_box	bar_info.c	/^	GtkWidget *group_box;$/;"	m	struct:_BarInfoData	file:
group_box	typedefs.h	/^	GtkWidget *group_box;$/;"	m	struct:_LayoutWindow
group_rank	dupe.h	/^	gdouble group_rank;$/;"	m	struct:_DupeItem
h	pan-types.h	/^	gint h;$/;"	m	struct:_PanGrid
h	pixbuf-renderer.c	/^	gint h;			\/* height '' *\/$/;"	m	struct:_ImageTile	file:
h	pixbuf-renderer.c	/^	gint h;$/;"	m	struct:_QueueData	file:
h	preferences.c	/^	gint h;$/;"	m	struct:_ThumbSize	file:
h_pane	typedefs.h	/^	GtkWidget *h_pane;$/;"	m	struct:_LayoutWindow
handle_prelit	ui_misc.c	/^	gint handle_prelit;$/;"	m	struct:_SizerData	file:
hard_linked	ui_fileops.c	/^static gint hard_linked(const gchar *a, const gchar *b)$/;"	f	file:
has_alpha	color-man.c	/^	gint has_alpha;$/;"	m	struct:_ColorManCache	file:
has_frame	pixbuf-renderer.h	/^	gboolean has_frame;$/;"	m	struct:_PixbufRenderer
has_frame	typedefs.h	/^	gint has_frame;$/;"	m	struct:_ImageWindow
has_history	ui_tabcomp.c	/^	gint has_history;$/;"	m	struct:_TabCompData	file:
have_checksum	cache.h	/^	gint have_checksum;$/;"	m	struct:_CacheData
have_date	cache.h	/^	gint have_date;$/;"	m	struct:_CacheData
have_md5sum	cache.h	/^	gint have_md5sum;$/;"	m	struct:_CacheData
hbox	ui_utildlg.h	/^	GtkWidget *hbox;	\/* button hbox *\/$/;"	m	struct:_GenericDialog
header_length	format_raw.c	/^	const guint header_length;$/;"	m	struct:_FormatExifEntry	file:
header_pattern	format_raw.c	/^	const void *header_pattern;$/;"	m	struct:_FormatExifEntry	file:
header_type	format_raw.c	/^	FormatExifMatchType header_type;$/;"	m	struct:_FormatExifEntry	file:
height	cache.h	/^	gint height;$/;"	m	struct:_CacheData
height	dupe.h	/^	gint height;$/;"	m	struct:_DupeItem
height	fullscreen.h	/^	gint height;$/;"	m	struct:_ScreenData
height	pan-folder.c	/^	gint height;$/;"	m	struct:_FlowerGroup	file:
height	pan-types.h	/^	gint height;$/;"	m	struct:_PanItem
height	pixbuf-renderer.h	/^	gint height;$/;"	m	struct:_PixbufRenderer
height	print.c	/^	gint height;$/;"	m	struct:_PaperSize	file:
height	search.c	/^	gint height;$/;"	m	struct:_MatchFileData	file:
help_browser_command	main.c	/^static void help_browser_command(const gchar *command, const gchar *path)$/;"	f	file:
help_browser_run	main.c	/^static void help_browser_run(void)$/;"	f	file:
help_window	main.c	/^static GtkWidget *help_window = NULL;$/;"	v	file:
help_window_close	ui_help.c	/^static void help_window_close(GtkWidget *widget, gpointer data)$/;"	f	file:
help_window_delete_cb	ui_help.c	/^static gint help_window_delete_cb(GtkWidget *widget, GdkEventAny *event, gpointer data)$/;"	f	file:
help_window_destroy_cb	main.c	/^static void help_window_destroy_cb(GtkWidget *window, gpointer data)$/;"	f	file:
help_window_get_box	ui_help.c	/^GtkWidget *help_window_get_box(GtkWidget *window)$/;"	f
help_window_load_text	ui_help.c	/^static void help_window_load_text(GtkWidget *text, const gchar *path)$/;"	f	file:
help_window_new	ui_help.c	/^GtkWidget *help_window_new(const gchar *title,$/;"	f
help_window_scroll	ui_help.c	/^static void help_window_scroll(GtkWidget *text, const gchar *key)$/;"	f	file:
help_window_set_file	ui_help.c	/^void help_window_set_file(GtkWidget *window, const gchar *path, const gchar *key)$/;"	f
help_window_set_key	ui_help.c	/^void help_window_set_key(GtkWidget *window, const gchar *key)$/;"	f
help_window_show	main.c	/^void help_window_show(const gchar *key)$/;"	f
hex_char	ui_bookmark.c	/^static gchar *hex_char = "0123456789ABCDEF";$/;"	v	file:
hidden_button	ui_pathsel.c	/^	GtkWidget *hidden_button;$/;"	m	struct:_Dest_Data	file:
hide_mouse_id	typedefs.h	/^	gint hide_mouse_id;$/;"	m	struct:_FullScreenData
history_combo_append_history	ui_bookmark.c	/^void history_combo_append_history(GtkWidget *widget, const gchar *text)$/;"	f
history_combo_destroy	ui_bookmark.c	/^static void history_combo_destroy(GtkWidget *widget, gpointer data)$/;"	f	file:
history_combo_new	ui_bookmark.c	/^GtkWidget *history_combo_new(GtkWidget **entry, const gchar *text,$/;"	f
history_key	ui_bookmark.c	/^	gchar *history_key;$/;"	m	struct:_HistoryComboData	file:
history_key	ui_tabcomp.c	/^	gchar *history_key;$/;"	m	struct:_TabCompData	file:
history_levels	ui_bookmark.c	/^	gint history_levels;$/;"	m	struct:_HistoryComboData	file:
history_levels	ui_tabcomp.c	/^	gint history_levels;$/;"	m	struct:_TabCompData	file:
history_list	ui_bookmark.c	/^static GList *history_list = NULL;$/;"	v	file:
history_list_add_to_key	ui_bookmark.c	/^void history_list_add_to_key(const gchar *key, const gchar *path, gint max)$/;"	f
history_list_find_by_key	ui_bookmark.c	/^static HistoryData *history_list_find_by_key(const gchar* key)$/;"	f	file:
history_list_find_last_path_by_key	ui_bookmark.c	/^const gchar *history_list_find_last_path_by_key(const gchar* key)$/;"	f
history_list_free	ui_bookmark.c	/^static void history_list_free(HistoryData *hd)$/;"	f	file:
history_list_free_key	ui_bookmark.c	/^void history_list_free_key(const gchar *key)$/;"	f
history_list_get_by_key	ui_bookmark.c	/^GList *history_list_get_by_key(const gchar *key)$/;"	f
history_list_item_change	ui_bookmark.c	/^void history_list_item_change(const gchar *key, const gchar *oldpath, const gchar *newpath)$/;"	f
history_list_item_move	ui_bookmark.c	/^void history_list_item_move(const gchar *key, const gchar *path, gint direction)$/;"	f
history_list_item_remove	ui_bookmark.c	/^void history_list_item_remove(const gchar *key, const gchar *path)$/;"	f
history_list_load	ui_bookmark.c	/^gint history_list_load(const gchar *path)$/;"	f
history_list_save	ui_bookmark.c	/^gint history_list_save(const gchar *path)$/;"	f
homedir	ui_fileops.c	/^const gchar *homedir(void)$/;"	f
host_alias	Makefile	/^host_alias = $/;"	m
host_alias	icons/Makefile	/^host_alias = $/;"	m
host_alias	icons/svg/Makefile	/^host_alias = $/;"	m
hsize_max	ui_misc.c	/^	gint hsize_max;$/;"	m	struct:_SizerData	file:
hsize_min	ui_misc.c	/^	gint hsize_min;$/;"	m	struct:_SizerData	file:
html_browsers	main.c	/^static gchar *html_browsers[] =$/;"	v	file:
i	md5-util.c	/^static union _endian { gint i; gchar b[4]; } *_endian = (union _endian *)&_ie;$/;"	m	union:_endian	file:
icon	ui_bookmark.c	/^	gchar *icon;$/;"	m	struct:_BookButtonData	file:
icon_book	icons/icons_inline.h	/^const guint8 icon_book[] __attribute__ ((__aligned__ (4))) = $/;"	v
icon_broken	icons/icons_inline.h	/^const guint8 icon_broken[] __attribute__ ((__aligned__ (4))) = $/;"	v
icon_config	icons/icons_inline.h	/^const guint8 icon_config[] __attribute__ ((__aligned__ (4))) = $/;"	v
icon_entry	ui_bookmark.c	/^	GtkWidget *icon_entry;$/;"	m	struct:_BookPropData	file:
icon_float	icons/icons_inline.h	/^const guint8 icon_float[] __attribute__ ((__aligned__ (4))) = $/;"	v
icon_id	image-overlay.c	/^	gint icon_id[IMAGE_OSD_COUNT];$/;"	m	struct:_OverlayStateData	file:
icon_scroller	icons/icons_inline.h	/^const guint8 icon_scroller[] __attribute__ ((__aligned__ (4))) = $/;"	v
icon_spinner	ui_icons.h	/^const guint8 icon_spinner[] __attribute__ ((__aligned__ (4))) = $/;"	v
icon_tabcomp	ui_icons.h	/^const guint8 icon_tabcomp[] __attribute__ ((__aligned__ (4))) = $/;"	v
icon_thumb	icons/icons_inline.h	/^const guint8 icon_thumb[] __attribute__ ((__aligned__ (4))) = $/;"	v
icon_time	image-overlay.c	/^	gint icon_time[IMAGE_OSD_COUNT];$/;"	m	struct:_OverlayStateData	file:
icon_tools	icons/icons_inline.h	/^const guint8 icon_tools[] __attribute__ ((__aligned__ (4))) = $/;"	v
icon_view	icons/icons_inline.h	/^const guint8 icon_view[] __attribute__ ((__aligned__ (4))) = $/;"	v
icon_view	typedefs.h	/^	gint icon_view;$/;"	m	struct:_LayoutWindow
iconlist_free	view_file_icon.c	/^static void iconlist_free(GList *list)$/;"	f	file:
iconlist_read	view_file_icon.c	/^static gint iconlist_read(const gchar *path, GList **list)$/;"	f	file:
id	pixbuf-renderer.c	/^	gint id;$/;"	m	struct:_OverlayData	file:
idle_done_id	typedefs.h	/^	gint idle_done_id;$/;"	m	struct:_ImageLoader
idle_done_id	typedefs.h	/^	gint idle_done_id;$/;"	m	struct:_ThumbLoader
idle_id	cache-loader.h	/^	gint idle_id;$/;"	m	struct:_CacheLoader
idle_id	cache_maint.c	/^	gint idle_id;$/;"	m	struct:_CMData	file:
idle_id	cache_maint.c	/^	gint idle_id;$/;"	m	struct:_CleanData	file:
idle_id	color-man.h	/^	gint idle_id;$/;"	m	struct:_ColorMan
idle_id	dupe.h	/^	gint idle_id;$/;"	m	struct:_DupeWindow
idle_id	image-overlay.c	/^	gint idle_id;$/;"	m	struct:_OverlayStateData	file:
idle_id	pan-types.h	/^	gint idle_id;$/;"	m	struct:_PanWindow
idle_id	thumb_standard.c	/^	gint idle_id;$/;"	m	struct:_ThumbValidate	file:
idle_id	typedefs.h	/^	gint idle_id;$/;"	m	struct:_ImageLoader
idle_priority	typedefs.h	/^	gint idle_priority;$/;"	m	struct:_ImageLoader
ignore_symlinks	pan-types.h	/^	gint ignore_symlinks;$/;"	m	struct:_PanWindow
il	cache-loader.h	/^	ImageLoader *il;$/;"	m	struct:_CacheLoader
il	pan-types.h	/^	ImageLoader *il;$/;"	m	struct:_PanWindow
il	thumb_standard.h	/^	ImageLoader *il;$/;"	m	struct:_ThumbLoaderStd
il	typedefs.h	/^	ImageLoader *il;$/;"	m	struct:_ImageWindow
il	typedefs.h	/^	ImageLoader *il;$/;"	m	struct:_ThumbLoader
image	info.h	/^	ImageWindow *image;$/;"	m	struct:_InfoData
image	typedefs.h	/^	ImageWindow *image;$/;"	m	struct:_LayoutWindow
image	ui_bookmark.c	/^	GtkWidget *image;$/;"	m	struct:_BookButtonData	file:
image	ui_spinner.c	/^	GtkWidget *image;$/;"	m	struct:_SpinnerData	file:
image_alter	image.c	/^void image_alter(ImageWindow *imd, AlterType type)$/;"	f
image_alter_real	image.c	/^static void image_alter_real(ImageWindow *imd, AlterType type, gint clamp)$/;"	f	file:
image_area_changed	image.c	/^void image_area_changed(ImageWindow *imd, gint x, gint y, gint width, gint height)$/;"	f
image_attach_window	image.c	/^void image_attach_window(ImageWindow *imd, GtkWidget *window,$/;"	f
image_auto_refresh	image.c	/^void image_auto_refresh(ImageWindow *imd, gint interval)$/;"	f
image_auto_refresh_cb	image.c	/^static gint image_auto_refresh_cb(gpointer data)$/;"	f	file:
image_background_set_black	image.c	/^void image_background_set_black(ImageWindow *imd, gint black)$/;"	f
image_background_set_color	image.c	/^void image_background_set_color(ImageWindow *imd, GdkColor *color)$/;"	f
image_change_complete	image.c	/^static void image_change_complete(ImageWindow *imd, gdouble zoom, gint new)$/;"	f	file:
image_change_from_collection	image.c	/^void image_change_from_collection(ImageWindow *imd, CollectionData *cd, CollectInfo *info, gdouble zoom)$/;"	f
image_change_from_image	image.c	/^void image_change_from_image(ImageWindow *imd, ImageWindow *source)$/;"	f
image_change_path	image.c	/^void image_change_path(ImageWindow *imd, const gchar *path, gdouble zoom)$/;"	f
image_change_pixbuf	image.c	/^void image_change_pixbuf(ImageWindow *imd, GdkPixbuf *pixbuf, gdouble zoom)$/;"	f
image_change_real	image.c	/^static void image_change_real(ImageWindow *imd, const gchar *path,$/;"	f	file:
image_click_cb	image.c	/^static void image_click_cb(PixbufRenderer *pr, GdkEventButton *event, gpointer data)$/;"	f	file:
image_color_profile_get	image.c	/^gint image_color_profile_get(ImageWindow *imd,$/;"	f
image_color_profile_get_use	image.c	/^gint image_color_profile_get_use(ImageWindow *imd)$/;"	f
image_color_profile_set	image.c	/^void image_color_profile_set(ImageWindow *imd,$/;"	f
image_color_profile_set_use	image.c	/^void image_color_profile_set_use(ImageWindow *imd, gint enable)$/;"	f
image_complete_util	image.c	/^static void image_complete_util(ImageWindow *imd, gint preload)$/;"	f	file:
image_destroy_cb	image.c	/^static void image_destroy_cb(GtkObject *widget, gpointer data)$/;"	f	file:
image_focus_expose	image.c	/^static gint image_focus_expose(GtkWidget *widget, GdkEventExpose *event, gpointer data)$/;"	f	file:
image_focus_in_cb	image.c	/^static gint image_focus_in_cb(GtkWidget *widget, GdkEventFocus *event, gpointer data)$/;"	f	file:
image_focus_out_cb	image.c	/^static gint image_focus_out_cb(GtkWidget *widget, GdkEventFocus *event, gpointer data)$/;"	f	file:
image_focus_paint	image.c	/^static void image_focus_paint(ImageWindow *imd, gint has_focus, GdkRectangle *area)$/;"	f	file:
image_free	image.c	/^static void image_free(ImageWindow *imd)$/;"	f	file:
image_get_collection	image.c	/^CollectionData *image_get_collection(ImageWindow *imd, CollectInfo **info)$/;"	f
image_get_name	image.c	/^const gchar *image_get_name(ImageWindow *imd)$/;"	f
image_get_path	image.c	/^const gchar *image_get_path(ImageWindow *imd)$/;"	f
image_get_pixbuf	image.c	/^GdkPixbuf *image_get_pixbuf(ImageWindow *imd)$/;"	f
image_height	pixbuf-renderer.h	/^	gint image_height;$/;"	m	struct:_PixbufRenderer
image_list	image.c	/^static GList *image_list = NULL;$/;"	v	file:
image_load_area_cb	image.c	/^static void image_load_area_cb(ImageLoader *il, guint x, guint y, guint w, guint h, gpointer data)$/;"	f	file:
image_load_begin	image.c	/^static gint image_load_begin(ImageWindow *imd, const gchar *path)$/;"	f	file:
image_load_buffer_throttle	image.c	/^static void image_load_buffer_throttle(ImageLoader *il)$/;"	f	file:
image_load_dimensions	image-load.c	/^gint image_load_dimensions(const gchar *path, gint *width, gint *height)$/;"	f
image_load_done_cb	image.c	/^static void image_load_done_cb(ImageLoader *il, gpointer data)$/;"	f	file:
image_load_error_cb	image.c	/^static void image_load_error_cb(ImageLoader *il, gpointer data)$/;"	f	file:
image_load_pixbuf_ready	image.c	/^static void image_load_pixbuf_ready(ImageWindow *imd)$/;"	f	file:
image_loader_area_cb	image-load.c	/^static void image_loader_area_cb(GdkPixbufLoader *loader,$/;"	f	file:
image_loader_begin	image-load.c	/^static gint image_loader_begin(ImageLoader *il)$/;"	f	file:
image_loader_done	image-load.c	/^static void image_loader_done(ImageLoader *il)$/;"	f	file:
image_loader_done_delay	image-load.c	/^static void image_loader_done_delay(ImageLoader *il)$/;"	f	file:
image_loader_done_delay_cb	image-load.c	/^static gint image_loader_done_delay_cb(gpointer data)$/;"	f	file:
image_loader_error	image-load.c	/^static void image_loader_error(ImageLoader *il)$/;"	f	file:
image_loader_free	image-load.c	/^void image_loader_free(ImageLoader *il)$/;"	f
image_loader_get_format	image-load.c	/^gchar *image_loader_get_format(ImageLoader *il)$/;"	f
image_loader_get_is_done	image-load.c	/^gint image_loader_get_is_done(ImageLoader *il)$/;"	f
image_loader_get_percent	image-load.c	/^gdouble image_loader_get_percent(ImageLoader *il)$/;"	f
image_loader_get_pixbuf	image-load.c	/^GdkPixbuf *image_loader_get_pixbuf(ImageLoader *il)$/;"	f
image_loader_idle_cb	image-load.c	/^static gint image_loader_idle_cb(gpointer data)$/;"	f	file:
image_loader_new	image-load.c	/^ImageLoader *image_loader_new(const gchar *path)$/;"	f
image_loader_set_area_ready_func	image-load.c	/^void image_loader_set_area_ready_func(ImageLoader *il,$/;"	f
image_loader_set_buffer_size	image-load.c	/^void image_loader_set_buffer_size(ImageLoader *il, guint size)$/;"	f
image_loader_set_error_func	image-load.c	/^void image_loader_set_error_func(ImageLoader *il,$/;"	f
image_loader_set_percent_func	image-load.c	/^void image_loader_set_percent_func(ImageLoader *il,$/;"	f
image_loader_set_priority	image-load.c	/^void image_loader_set_priority(ImageLoader *il, gint priority)$/;"	f
image_loader_set_requested_size	image-load.c	/^void image_loader_set_requested_size(ImageLoader *il, gint width, gint height)$/;"	f
image_loader_setup	image-load.c	/^static gint image_loader_setup(ImageLoader *il)$/;"	f	file:
image_loader_size_cb	image-load.c	/^static void image_loader_size_cb(GdkPixbufLoader *loader,$/;"	f	file:
image_loader_start	image-load.c	/^gint image_loader_start(ImageLoader *il, void (*func_done)(ImageLoader *, gpointer), gpointer data_done)$/;"	f
image_loader_stop	image-load.c	/^static void image_loader_stop(ImageLoader *il)$/;"	f	file:
image_loader_sync_data	image.c	/^static void image_loader_sync_data(ImageLoader *il, gpointer data)$/;"	f	file:
image_loader_sync_pixbuf	image-load.c	/^static void image_loader_sync_pixbuf(ImageLoader *il)$/;"	f	file:
image_location	typedefs.h	/^	LayoutLocation image_location;$/;"	m	struct:_LayoutWindow
image_name	typedefs.h	/^	const gchar *image_name;$/;"	m	struct:_ImageWindow
image_new	image.c	/^ImageWindow *image_new(gint frame)$/;"	f
image_options_set	image.c	/^static void image_options_set(ImageWindow *imd)$/;"	f	file:
image_options_sync	image.c	/^void image_options_sync(void)$/;"	f
image_osd_destroy_cb	image-overlay.c	/^static void image_osd_destroy_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
image_osd_enable	image-overlay.c	/^static void image_osd_enable(ImageWindow *imd, gint info, gint status)$/;"	f	file:
image_osd_free	image-overlay.c	/^static void image_osd_free(OverlayStateData *osd)$/;"	f	file:
image_osd_get	image-overlay.c	/^gint image_osd_get(ImageWindow *imd, gint *info, gint *status)$/;"	f
image_osd_icon	image-overlay.c	/^void image_osd_icon(ImageWindow *imd, ImageOSDFlag flag, gint duration)$/;"	f
image_osd_icon_hide	image-overlay.c	/^static void image_osd_icon_hide(OverlayStateData *osd, ImageOSDFlag flag)$/;"	f	file:
image_osd_icon_pixbuf	image-overlay.c	/^static GdkPixbuf *image_osd_icon_pixbuf(ImageOSDFlag flag)$/;"	f	file:
image_osd_icon_show	image-overlay.c	/^static void image_osd_icon_show(OverlayStateData *osd, ImageOSDFlag flag)$/;"	f	file:
image_osd_info_render	image-overlay.c	/^static GdkPixbuf *image_osd_info_render(ImageWindow *imd)$/;"	f	file:
image_osd_remove	image-overlay.c	/^static void image_osd_remove(ImageWindow *imd)$/;"	f	file:
image_osd_set	image-overlay.c	/^void image_osd_set(ImageWindow *imd, gint info, gint status)$/;"	f
image_osd_state_cb	image-overlay.c	/^static void image_osd_state_cb(ImageWindow *imd, ImageState state, gpointer data)$/;"	f	file:
image_osd_timer_cb	image-overlay.c	/^static gint image_osd_timer_cb(gpointer data)$/;"	f	file:
image_osd_timer_schedule	image-overlay.c	/^static void image_osd_timer_schedule(OverlayStateData *osd)$/;"	f	file:
image_osd_update	image-overlay.c	/^void image_osd_update(ImageWindow *imd)$/;"	f
image_osd_update_cb	image-overlay.c	/^static gint image_osd_update_cb(gpointer data)$/;"	f	file:
image_osd_update_schedule	image-overlay.c	/^static void image_osd_update_schedule(OverlayStateData *osd, gint force)$/;"	f	file:
image_overlay_add	image.c	/^gint image_overlay_add(ImageWindow *imd, GdkPixbuf *pixbuf, gint x, gint y,$/;"	f
image_overlay_get	image.c	/^gint image_overlay_get(ImageWindow *imd, gint id, GdkPixbuf **pixbuf, gint *x, gint *y)$/;"	f
image_overlay_remove	image.c	/^void image_overlay_remove(ImageWindow *imd, gint id)$/;"	f
image_overlay_set	image.c	/^void image_overlay_set(ImageWindow *imd, gint id, GdkPixbuf *pixbuf, gint x, gint y)$/;"	f
image_path	typedefs.h	/^	gchar *image_path;$/;"	m	struct:_ImageWindow
image_post_buffer_get	image.c	/^static gint image_post_buffer_get(ImageWindow *imd)$/;"	f	file:
image_post_buffer_set	image.c	/^static void image_post_buffer_set(ImageWindow *imd, const gchar *path, GdkPixbuf *pixbuf, gint color_row)$/;"	f	file:
image_post_process	image.c	/^static void image_post_process(ImageWindow *imd, gint clamp)$/;"	f	file:
image_post_process_alter	image.c	/^static void image_post_process_alter(ImageWindow *imd, gint clamp)$/;"	f	file:
image_post_process_color	image.c	/^static gint image_post_process_color(ImageWindow *imd, gint start_row, ExifData *exif)$/;"	f	file:
image_post_process_color_cb	image.c	/^static void image_post_process_color_cb(ColorMan *cm, ColorManReturnType type, gpointer data)$/;"	f	file:
image_prebuffer_set	image.c	/^void image_prebuffer_set(ImageWindow *imd, const gchar *path)$/;"	f
image_read_ahead_cancel	image.c	/^static void image_read_ahead_cancel(ImageWindow *imd)$/;"	f	file:
image_read_ahead_check	image.c	/^static gint image_read_ahead_check(ImageWindow *imd)$/;"	f	file:
image_read_ahead_done_cb	image.c	/^static void image_read_ahead_done_cb(ImageLoader *il, gpointer data)$/;"	f	file:
image_read_ahead_error_cb	image.c	/^static void image_read_ahead_error_cb(ImageLoader *il, gpointer data)$/;"	f	file:
image_read_ahead_set	image.c	/^static void image_read_ahead_set(ImageWindow *imd, const gchar *path)$/;"	f	file:
image_read_ahead_start	image.c	/^static void image_read_ahead_start(ImageWindow *imd)$/;"	f	file:
image_reload	image.c	/^void image_reload(ImageWindow *imd)$/;"	f
image_render_complete_cb	image.c	/^static void image_render_complete_cb(PixbufRenderer *pr, gpointer data)$/;"	f	file:
image_reset	image.c	/^static void image_reset(ImageWindow *imd)$/;"	f	file:
image_scale	print.c	/^	gint image_scale;$/;"	m	struct:_PrintWindow	file:
image_scale_spin	print.c	/^	GtkWidget *image_scale_spin;$/;"	m	struct:_PrintWindow	file:
image_scroll	image.c	/^void image_scroll(ImageWindow *imd, gint x, gint y)$/;"	f
image_scroll_cb	image.c	/^static gint image_scroll_cb(GtkWidget *widget, GdkEventScroll *event, gpointer data)$/;"	f	file:
image_scroll_notify_cb	image.c	/^static void image_scroll_notify_cb(PixbufRenderer *pr, gpointer data)$/;"	f	file:
image_scroll_to_point	image.c	/^void image_scroll_to_point(ImageWindow *imd, gint x, gint y,$/;"	f
image_set_button_func	image.c	/^void image_set_button_func(ImageWindow *imd,$/;"	f
image_set_complete_func	image.c	/^void image_set_complete_func(ImageWindow *imd,$/;"	f
image_set_delay_flip	image.c	/^void image_set_delay_flip(ImageWindow *imd, gint delay)$/;"	f
image_set_path	image.c	/^void image_set_path(ImageWindow *imd, const gchar *newpath)$/;"	f
image_set_scroll_func	image.c	/^void image_set_scroll_func(ImageWindow *imd,$/;"	f
image_set_scroll_notify_func	image.c	/^void image_set_scroll_notify_func(ImageWindow *imd,$/;"	f
image_set_state_func	image.c	/^void image_set_state_func(ImageWindow *imd,$/;"	f
image_set_update_func	image.c	/^void image_set_update_func(ImageWindow *imd,$/;"	f
image_sim_alternate_enabled	similar.c	/^gint image_sim_alternate_enabled(void)$/;"	f
image_sim_alternate_processing	similar.c	/^void image_sim_alternate_processing(ImageSimilarityData *sd)$/;"	f
image_sim_alternate_set	similar.c	/^void image_sim_alternate_set(gint enable)$/;"	f
image_sim_channel_eq_sort_cb	similar.c	/^static int image_sim_channel_eq_sort_cb(const void *a, const void *b)$/;"	f	file:
image_sim_channel_equal	similar.c	/^static void image_sim_channel_equal(guint8 *pix, gint len)$/;"	f	file:
image_sim_channel_norm	similar.c	/^static void image_sim_channel_norm(guint8 *pix, gint len)$/;"	f	file:
image_sim_compare	similar.c	/^gdouble image_sim_compare(ImageSimilarityData *a, ImageSimilarityData *b)$/;"	f
image_sim_compare_fast	similar.c	/^gdouble image_sim_compare_fast(ImageSimilarityData *a, ImageSimilarityData *b, gdouble min)$/;"	f
image_sim_fill_data	similar.c	/^void image_sim_fill_data(ImageSimilarityData *sd, GdkPixbuf *pixbuf)$/;"	f
image_sim_free	similar.c	/^void image_sim_free(ImageSimilarityData *sd)$/;"	f
image_sim_new	similar.c	/^ImageSimilarityData *image_sim_new(void)$/;"	f
image_sim_new_from_pixbuf	similar.c	/^ImageSimilarityData *image_sim_new_from_pixbuf(GdkPixbuf *pixbuf)$/;"	f
image_size	pan-types.h	/^	gint image_size;$/;"	m	struct:_PanWindow
image_state_set	image.c	/^static void image_state_set(ImageWindow *imd, ImageState state)$/;"	f	file:
image_state_unset	image.c	/^static void image_state_unset(ImageWindow *imd, ImageState state)$/;"	f	file:
image_to_root_window	image.c	/^void image_to_root_window(ImageWindow *imd, gint scaled)$/;"	f
image_top_window_set_sync	image.c	/^void image_top_window_set_sync(ImageWindow *imd, gint allow_sync)$/;"	f
image_update_title	image.c	/^static void image_update_title(ImageWindow *imd)$/;"	f	file:
image_update_util	image.c	/^static void image_update_util(ImageWindow *imd)$/;"	f	file:
image_width	pixbuf-renderer.h	/^	gint image_width;	\/* image actual dimensions (pixels) *\/$/;"	m	struct:_PixbufRenderer
image_zoom_adjust	image.c	/^void image_zoom_adjust(ImageWindow *imd, gdouble increment)$/;"	f
image_zoom_adjust_at_point	image.c	/^void image_zoom_adjust_at_point(ImageWindow *imd, gdouble increment, gint x, gint y)$/;"	f
image_zoom_cb	image.c	/^static void image_zoom_cb(PixbufRenderer *pr, gdouble zoom, gpointer data)$/;"	f	file:
image_zoom_get	image.c	/^gdouble image_zoom_get(ImageWindow *imd)$/;"	f
image_zoom_get_as_text	image.c	/^gchar *image_zoom_get_as_text(ImageWindow *imd)$/;"	f
image_zoom_get_default	image.c	/^gdouble image_zoom_get_default(ImageWindow *imd, gint mode)$/;"	f
image_zoom_get_real	image.c	/^gdouble image_zoom_get_real(ImageWindow *imd)$/;"	f
image_zoom_set	image.c	/^void image_zoom_set(ImageWindow *imd, gdouble zoom)$/;"	f
image_zoom_set_fill_geometry	image.c	/^void image_zoom_set_fill_geometry(ImageWindow *imd, gint vertical)$/;"	f
image_zoom_set_limits	image.c	/^void image_zoom_set_limits(ImageWindow *imd, gdouble min, gdouble max)$/;"	f
imd	color-man.h	/^	ImageWindow *imd;$/;"	m	struct:_ColorMan
imd	image-overlay.c	/^	ImageWindow *imd;$/;"	m	struct:_OverlayStateData	file:
imd	img-view.c	/^	ImageWindow *imd;$/;"	m	struct:_ViewWindow	file:
imd	pan-types.h	/^	ImageWindow *imd;$/;"	m	struct:_PanWindow
imd	typedefs.h	/^	ImageWindow *imd;$/;"	m	struct:_FullScreenData
imd	typedefs.h	/^	ImageWindow *imd;$/;"	m	struct:_SlideShowData
imd	utilops.c	/^	ImageWindow *imd;$/;"	m	struct:_RenameDataMult	file:
imd_normal	pan-types.h	/^	ImageWindow *imd_normal;$/;"	m	struct:_PanWindow
img_cd	search.c	/^	CacheData   *img_cd;$/;"	m	struct:_SearchData	file:
img_loader	dupe.h	/^	ImageLoader *img_loader;$/;"	m	struct:_DupeWindow
img_loader	search.c	/^	ImageLoader *img_loader;$/;"	m	struct:_SearchData	file:
in	md5-util.h	/^	guchar in[64];$/;"	m	struct:_MD5Context
in_drag	pixbuf-renderer.h	/^	gboolean in_drag;$/;"	m	struct:_PixbufRenderer
in_drag	ui_misc.c	/^	gint in_drag;$/;"	m	struct:_SizerData	file:
includedir	Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	icons/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	icons/svg/Makefile	/^includedir = ${prefix}\/include$/;"	m
incremental_sync	color-man.h	/^	gint incremental_sync;$/;"	m	struct:_ColorMan
info	dupe.h	/^	CollectInfo *info;$/;"	m	struct:_DupeItem
info_box	typedefs.h	/^	GtkWidget *info_box;$/;"	m	struct:_LayoutWindow
info_color	typedefs.h	/^	GtkWidget *info_color;$/;"	m	struct:_LayoutWindow
info_details	typedefs.h	/^	GtkWidget *info_details;$/;"	m	struct:_LayoutWindow
info_image_size	pan-types.h	/^	gint info_image_size;$/;"	m	struct:_PanWindow
info_includes_exif	pan-types.h	/^	gint info_includes_exif;$/;"	m	struct:_PanWindow
info_progress_bar	typedefs.h	/^	GtkWidget *info_progress_bar;$/;"	m	struct:_LayoutWindow
info_sort	typedefs.h	/^	GtkWidget *info_sort;$/;"	m	struct:_LayoutWindow
info_status	typedefs.h	/^	GtkWidget *info_status;$/;"	m	struct:_LayoutWindow
info_tab_exif_image	info.c	/^static void info_tab_exif_image(InfoData *id, gpointer data)$/;"	f	file:
info_tab_exif_new	info.c	/^static TabData *info_tab_exif_new(InfoData *id)$/;"	f	file:
info_tab_exif_sync	info.c	/^static void info_tab_exif_sync(InfoData *id, gpointer data)$/;"	f	file:
info_tab_general_free	info.c	/^static void info_tab_general_free(gpointer data)$/;"	f	file:
info_tab_general_image	info.c	/^static void info_tab_general_image(InfoData *id, gpointer data)$/;"	f	file:
info_tab_general_new	info.c	/^static TabData *info_tab_general_new(InfoData *id)$/;"	f	file:
info_tab_general_sync	info.c	/^static void info_tab_general_sync(InfoData *id, gpointer data)$/;"	f	file:
info_tab_general_sync_perm	info.c	/^static void info_tab_general_sync_perm(InfoTabGeneral *tab, InfoData *id)$/;"	f	file:
info_tab_meta_free	info.c	/^static void info_tab_meta_free(gpointer data)$/;"	f	file:
info_tab_meta_list_cb	info.c	/^static GList *info_tab_meta_list_cb(gpointer data)$/;"	f	file:
info_tab_meta_new	info.c	/^static TabData *info_tab_meta_new(InfoData *id)$/;"	f	file:
info_tab_meta_sync	info.c	/^static void info_tab_meta_sync(InfoData *id, gpointer data)$/;"	f	file:
info_tabs_free	info.c	/^static void info_tabs_free(InfoData *id)$/;"	f	file:
info_tabs_init	info.c	/^static void info_tabs_init(InfoData *id)$/;"	f	file:
info_tabs_sync	info.c	/^static void info_tabs_sync(InfoData *id, gint image)$/;"	f	file:
info_updated_data	typedefs.h	/^	gpointer info_updated_data;$/;"	m	struct:_CollectionData
info_updated_func	typedefs.h	/^	void (*info_updated_func)(CollectionData *, CollectInfo *, gpointer);$/;"	m	struct:_CollectionData
info_window_back_cb	info.c	/^static void info_window_back_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
info_window_close	info.c	/^static void info_window_close(InfoData *id)$/;"	f	file:
info_window_close_cb	info.c	/^static void info_window_close_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
info_window_delete_cb	info.c	/^static gint info_window_delete_cb(GtkWidget *widget, GdkEventAny *event, gpointer data)$/;"	f	file:
info_window_destroy_cb	info.c	/^static void info_window_destroy_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
info_window_dnd_data_set	info.c	/^static void info_window_dnd_data_set(GtkWidget *widget, GdkDragContext *context,$/;"	f	file:
info_window_dnd_init	info.c	/^static void info_window_dnd_init(InfoData *id)$/;"	f	file:
info_window_image_button_cb	info.c	/^static void info_window_image_button_cb(ImageWindow *imd, gint button, guint32 time,$/;"	f	file:
info_window_image_scroll_cb	info.c	/^static void info_window_image_scroll_cb(ImageWindow *imd, GdkScrollDirection direction, guint32 time,$/;"	f	file:
info_window_image_update_cb	info.c	/^static void info_window_image_update_cb(ImageWindow *imd, gpointer data)$/;"	f	file:
info_window_last_height	info.c	/^static gint info_window_last_height = DEF_PROPERTY_HEIGHT;$/;"	v	file:
info_window_last_width	info.c	/^static gint info_window_last_width = DEF_PROPERTY_WIDTH;$/;"	v	file:
info_window_new	info.c	/^void info_window_new(const gchar *path, GList *list)$/;"	f
info_window_next_cb	info.c	/^static void info_window_next_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
info_window_sync	info.c	/^static void info_window_sync(InfoData *id, const gchar *path)$/;"	f	file:
info_zoom	typedefs.h	/^	GtkWidget *info_zoom;$/;"	m	struct:_LayoutWindow
infodir	Makefile	/^infodir = ${prefix}\/info$/;"	m
infodir	icons/Makefile	/^infodir = ${prefix}\/info$/;"	m
infodir	icons/svg/Makefile	/^infodir = ${prefix}\/info$/;"	m
inline_pixbuf_data	pixbuf_util.c	/^static PixbufInline inline_pixbuf_data[] = {$/;"	v	file:
install_sh	Makefile	/^install_sh = \/home\/tjw\/kindle\/gqview-2.1.5\/install-sh$/;"	m
install_sh	icons/Makefile	/^install_sh = \/home\/tjw\/kindle\/gqview-2.1.5\/install-sh$/;"	m
install_sh	icons/svg/Makefile	/^install_sh = \/home\/tjw\/kindle\/gqview-2.1.5\/install-sh$/;"	m
install_sh_DATA	Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	icons/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	icons/svg/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_PROGRAM	Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	icons/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	icons/svg/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_SCRIPT	Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	icons/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	icons/svg/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
is_hidden	ui_pathsel.c	/^static gint is_hidden(const gchar *name)$/;"	f	file:
isdir	ui_fileops.c	/^gint isdir(const gchar *s)$/;"	f
isempty	cache_maint.c	/^static gint isempty(const gchar *path)$/;"	f	file:
isfile	ui_fileops.c	/^gint isfile(const gchar *s)$/;"	f
ishidden	filelist.c	/^gint ishidden(const gchar *name)$/;"	f
islink	ui_fileops.c	/^gint islink(const gchar *s)$/;"	f
isname	ui_fileops.c	/^gint isname(const gchar *s)$/;"	f
it	pixbuf-renderer.c	/^	ImageTile *it;$/;"	m	struct:_QueueData	file:
items	exif.h	/^	GList *items;	\/* list of (ExifItem *) *\/$/;"	m	struct:_ExifData
items	pan-folder.c	/^	GList *items;$/;"	m	struct:_FlowerGroup	file:
job_dialog	print.c	/^	GenericDialog	*job_dialog;$/;"	m	struct:_PrintWindow	file:
job_file	print.c	/^	FILE		*job_file;$/;"	m	struct:_PrintWindow	file:
job_format	print.c	/^	RenderFormat	 job_format;$/;"	m	struct:_PrintWindow	file:
job_loader	print.c	/^	ImageLoader	*job_loader;$/;"	m	struct:_PrintWindow	file:
job_output	print.c	/^	PrintOutput	 job_output;$/;"	m	struct:_PrintWindow	file:
job_page	print.c	/^	gint		 job_page;$/;"	m	struct:_PrintWindow	file:
job_path	print.c	/^	gchar		*job_path;$/;"	m	struct:_PrintWindow	file:
job_pipe	print.c	/^	FILE 		*job_pipe;$/;"	m	struct:_PrintWindow	file:
job_pixbuf	print.c	/^	GdkPixbuf	*job_pixbuf;$/;"	m	struct:_PrintWindow	file:
job_progress	print.c	/^	GtkWidget	*job_progress;$/;"	m	struct:_PrintWindow	file:
job_progress_label	print.c	/^	GtkWidget	*job_progress_label;$/;"	m	struct:_PrintWindow	file:
jpeg_color_marker	exif.c	/^static ExifMarker jpeg_color_marker = { 0x8773, EXIF_FORMAT_UNDEFINED, -1, "ColorProfile", NULL, NULL };$/;"	v	file:
key	exif.h	/^	const gchar *key;$/;"	m	struct:_ExifFormattedText
key	exif.h	/^	gchar		*key;$/;"	m	struct:_ExifMarker
key	filelist.h	/^	gchar *key;$/;"	m	struct:_FilterEntry
key	image-overlay.c	/^	gchar *key;	\/* inline pixbuf *\/$/;"	m	struct:_OSDIcon	file:
key	pan-types.h	/^	gchar *key;$/;"	m	struct:_PanItem
key	pan-types.h	/^	gchar *key;$/;"	m	struct:_PanTextAlignment
key	pixbuf_util.c	/^	const gchar *key;$/;"	m	struct:_PixbufInline	file:
key	ui_bookmark.c	/^	gchar *key;$/;"	m	struct:_BookButtonData	file:
key	ui_bookmark.c	/^	gchar *key;$/;"	m	struct:_BookMarkData	file:
key	ui_bookmark.c	/^	gchar *key;$/;"	m	struct:_HistoryData	file:
keyboard_scroll_calc	main.c	/^void keyboard_scroll_calc(gint *x, gint *y, GdkEventKey *event)$/;"	f
keys_load	main.c	/^static void keys_load(void)$/;"	f	file:
keys_save	main.c	/^static void keys_save(void)$/;"	f	file:
keyword_dialog	bar_info.c	/^static KeywordDlg *keyword_dialog = NULL;$/;"	v	file:
keyword_dialog_add_cb	bar_info.c	/^static void keyword_dialog_add_cb(GtkWidget *button, gpointer data)$/;"	f	file:
keyword_dialog_cancel_cb	bar_info.c	/^static void keyword_dialog_cancel_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
keyword_dialog_edit_cb	bar_info.c	/^static void keyword_dialog_edit_cb(GtkCellRendererText *renderer, const gchar *path,$/;"	f	file:
keyword_dialog_ok_cb	bar_info.c	/^static void keyword_dialog_ok_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
keyword_dialog_populate	bar_info.c	/^static void keyword_dialog_populate(KeywordDlg *kd)$/;"	f	file:
keyword_dialog_remove_cb	bar_info.c	/^static void keyword_dialog_remove_cb(GtkWidget *button, gpointer data)$/;"	f	file:
keyword_dialog_show	bar_info.c	/^static void keyword_dialog_show(void)$/;"	f	file:
keyword_favorite_defaults	bar_info.c	/^static const gchar *keyword_favorite_defaults[] = {$/;"	v	file:
keyword_list_pull	bar_info.c	/^GList *keyword_list_pull(GtkWidget *text_widget)$/;"	f
keyword_list_push	bar_info.c	/^void keyword_list_push(GtkWidget *textview, GList *list)$/;"	f
keyword_treeview	bar_info.c	/^	GtkWidget *keyword_treeview;$/;"	m	struct:_BarInfoData	file:
keyword_view	bar_info.c	/^	GtkWidget *keyword_view;$/;"	m	struct:_BarInfoData	file:
label	ui_bookmark.c	/^	GtkWidget *label;$/;"	m	struct:_BookButtonData	file:
label_compression	info.c	/^	GtkWidget *label_compression;$/;"	m	struct:_InfoTabGeneral	file:
label_count	info.h	/^	GtkWidget *label_count;$/;"	m	struct:_InfoData
label_dimensions	info.c	/^	GtkWidget *label_dimensions;$/;"	m	struct:_InfoTabGeneral	file:
label_file_name	bar_info.c	/^	GtkWidget *label_file_name;$/;"	m	struct:_BarInfoData	file:
label_file_size	info.c	/^	GtkWidget *label_file_size;$/;"	m	struct:_InfoTabGeneral	file:
label_file_time	bar_info.c	/^	GtkWidget *label_file_time;$/;"	m	struct:_BarInfoData	file:
label_file_time	info.c	/^	GtkWidget *label_file_time;$/;"	m	struct:_InfoTabGeneral	file:
label_group	info.c	/^	GtkWidget *label_group;$/;"	m	struct:_InfoTabGeneral	file:
label_image_size	info.c	/^	GtkWidget *label_image_size;$/;"	m	struct:_InfoTabGeneral	file:
label_message	pan-types.h	/^	GtkWidget *label_message;$/;"	m	struct:_PanWindow
label_mime_type	info.c	/^	GtkWidget *label_mime_type;$/;"	m	struct:_InfoTabGeneral	file:
label_perms	info.c	/^	GtkWidget *label_perms;$/;"	m	struct:_InfoTabGeneral	file:
label_progress	search.c	/^	GtkWidget *label_progress;$/;"	m	struct:_SearchData	file:
label_status	search.c	/^	GtkWidget *label_status;$/;"	m	struct:_SearchData	file:
label_transparent	info.c	/^	GtkWidget *label_transparent;$/;"	m	struct:_InfoTabGeneral	file:
label_user	info.c	/^	GtkWidget *label_user;$/;"	m	struct:_InfoTabGeneral	file:
label_zoom	pan-types.h	/^	GtkWidget *label_zoom;$/;"	m	struct:_PanWindow
labels	bar_exif.c	/^	GtkWidget **labels;$/;"	m	struct:_ExifBar	file:
last_time	typedefs.h	/^	time_t last_time;$/;"	m	struct:_LayoutWindow
last_time_id	typedefs.h	/^	gint last_time_id;$/;"	m	struct:_LayoutWindow
last_update	view_dir_tree.c	/^	time_t last_update;$/;"	m	struct:_NodeData	file:
layout	pan-types.h	/^	PanLayoutType layout;$/;"	m	struct:_PanWindow
layout	print.c	/^	PrintLayout layout;$/;"	m	struct:_PrintWindow	file:
layout	typedefs.h	/^	LayoutWindow *layout;$/;"	m	struct:_SlideShowData
layout	typedefs.h	/^	LayoutWindow *layout;$/;"	m	struct:_ViewDirList
layout	typedefs.h	/^	LayoutWindow *layout;$/;"	m	struct:_ViewDirTree
layout	typedefs.h	/^	LayoutWindow *layout;$/;"	m	struct:_ViewFileIcon
layout	typedefs.h	/^	LayoutWindow *layout;$/;"	m	struct:_ViewFileList
layout_actions_add_window	layout_util.c	/^void layout_actions_add_window(LayoutWindow *lw, GtkWidget *window)$/;"	f
layout_actions_menu_bar	layout_util.c	/^GtkWidget *layout_actions_menu_bar(LayoutWindow *lw)$/;"	f
layout_actions_setup	layout_util.c	/^void layout_actions_setup(LayoutWindow *lw)$/;"	f
layout_bar_exif_close	layout_util.c	/^static void layout_bar_exif_close(LayoutWindow *lw)$/;"	f	file:
layout_bar_exif_destroyed	layout_util.c	/^static void layout_bar_exif_destroyed(GtkWidget *widget, gpointer data)$/;"	f	file:
layout_bar_exif_new	layout_util.c	/^static void layout_bar_exif_new(LayoutWindow *lw)$/;"	f	file:
layout_bar_exif_new_image	layout_util.c	/^static void layout_bar_exif_new_image(LayoutWindow *lw)$/;"	f	file:
layout_bar_exif_sized	layout_util.c	/^static void layout_bar_exif_sized(GtkWidget *widget, GtkAllocation *allocation, gpointer data)$/;"	f	file:
layout_bar_exif_toggle	layout_util.c	/^void layout_bar_exif_toggle(LayoutWindow *lw)$/;"	f
layout_bar_info_close	layout_util.c	/^static void layout_bar_info_close(LayoutWindow *lw)$/;"	f	file:
layout_bar_info_destroyed	layout_util.c	/^static void layout_bar_info_destroyed(GtkWidget *widget, gpointer data)$/;"	f	file:
layout_bar_info_list_cb	layout_util.c	/^static GList *layout_bar_info_list_cb(gpointer data)$/;"	f	file:
layout_bar_info_maint_renamed	layout_util.c	/^static void layout_bar_info_maint_renamed(LayoutWindow *lw)$/;"	f	file:
layout_bar_info_new	layout_util.c	/^static void layout_bar_info_new(LayoutWindow *lw)$/;"	f	file:
layout_bar_info_new_image	layout_util.c	/^static void layout_bar_info_new_image(LayoutWindow *lw)$/;"	f	file:
layout_bar_info_new_selection	layout_util.c	/^static void layout_bar_info_new_selection(LayoutWindow *lw, gint count)$/;"	f	file:
layout_bar_info_toggle	layout_util.c	/^void layout_bar_info_toggle(LayoutWindow *lw)$/;"	f
layout_bar_sort_close	layout_util.c	/^static void layout_bar_sort_close(LayoutWindow *lw)$/;"	f	file:
layout_bar_sort_destroyed	layout_util.c	/^static void layout_bar_sort_destroyed(GtkWidget *widget, gpointer data)$/;"	f	file:
layout_bar_sort_new	layout_util.c	/^static void layout_bar_sort_new(LayoutWindow *lw)$/;"	f	file:
layout_bar_sort_toggle	layout_util.c	/^void layout_bar_sort_toggle(LayoutWindow *lw)$/;"	f
layout_bars_close	layout_util.c	/^void layout_bars_close(LayoutWindow *lw)$/;"	f
layout_bars_maint_renamed	layout_util.c	/^void layout_bars_maint_renamed(LayoutWindow *lw)$/;"	f
layout_bars_new_image	layout_util.c	/^void layout_bars_new_image(LayoutWindow *lw)$/;"	f
layout_bars_new_selection	layout_util.c	/^void layout_bars_new_selection(LayoutWindow *lw, gint count)$/;"	f
layout_bars_prepare	layout_util.c	/^GtkWidget *layout_bars_prepare(LayoutWindow *lw, GtkWidget *image)$/;"	f
layout_button_bar	layout_util.c	/^GtkWidget *layout_button_bar(LayoutWindow *lw)$/;"	f
layout_button_config_cb	layout_util.c	/^static void layout_button_config_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
layout_button_custom_icon	layout_util.c	/^static void layout_button_custom_icon(GtkWidget *button, const gchar *key)$/;"	f	file:
layout_button_float_cb	layout_util.c	/^static void layout_button_float_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
layout_button_home_cb	layout_util.c	/^static void layout_button_home_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
layout_button_refresh_cb	layout_util.c	/^static void layout_button_refresh_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
layout_button_thumb_cb	layout_util.c	/^static void layout_button_thumb_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
layout_button_zoom_1_1_cb	layout_util.c	/^static void layout_button_zoom_1_1_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
layout_button_zoom_fit_cb	layout_util.c	/^static void layout_button_zoom_fit_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
layout_button_zoom_in_cb	layout_util.c	/^static void layout_button_zoom_in_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
layout_button_zoom_out_cb	layout_util.c	/^static void layout_button_zoom_out_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
layout_check_for_update_cb	layout.c	/^static gint layout_check_for_update_cb(gpointer data)$/;"	f	file:
layout_close	layout.c	/^void layout_close(LayoutWindow *lw)$/;"	f
layout_color_button	layout.c	/^static GtkWidget *layout_color_button(LayoutWindow *lw)$/;"	f	file:
layout_color_button_press_cb	layout.c	/^static void layout_color_button_press_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
layout_color_menu_enable_cb	layout.c	/^static void layout_color_menu_enable_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
layout_color_menu_input_cb	layout.c	/^static void layout_color_menu_input_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
layout_color_menu_screen_cb	layout.c	/^static void layout_color_menu_screen_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
layout_color_menu_use_image_cb	layout.c	/^static void layout_color_menu_use_image_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
layout_color_name_parse	layout.c	/^static gchar *layout_color_name_parse(const gchar *name)$/;"	f	file:
layout_colors_update	layout.c	/^void layout_colors_update(void)$/;"	f
layout_config_destroy	layout_config.c	/^static void layout_config_destroy(GtkWidget *widget, gpointer data)$/;"	f	file:
layout_config_from_data	layout_config.c	/^static void layout_config_from_data(gint style, gint oa, gint ob, gint oc,$/;"	f	file:
layout_config_get	layout_config.c	/^gchar *layout_config_get(GtkWidget *widget, gint *style)$/;"	f
layout_config_list_order_get	layout_config.c	/^static gint layout_config_list_order_get(LayoutConfig *lc, gint n)$/;"	f	file:
layout_config_list_order_set	layout_config.c	/^static void layout_config_list_order_set(LayoutConfig *lc, gint src, gint dest)$/;"	f	file:
layout_config_new	layout_config.c	/^GtkWidget *layout_config_new(void)$/;"	f
layout_config_number_cb	layout_config.c	/^static void layout_config_number_cb(GtkTreeViewColumn *tree_column, GtkCellRenderer *cell,$/;"	f	file:
layout_config_order_from_text	layout_config.c	/^void layout_config_order_from_text(const gchar *text, gint *a, gint *b, gint *c)$/;"	f
layout_config_order_to_text	layout_config.c	/^gchar *layout_config_order_to_text(gint a, gint b, gint c)$/;"	f
layout_config_parse	layout_config.c	/^void layout_config_parse(gint style, const gchar *order,$/;"	f
layout_config_set	layout_config.c	/^void layout_config_set(GtkWidget *widget, gint style, const gchar *order)$/;"	f
layout_config_set_order	layout_config.c	/^static void layout_config_set_order(LayoutLocation l, gint n,$/;"	f	file:
layout_config_style_count	layout_config.c	/^static gint layout_config_style_count = sizeof(layout_config_styles) \/ sizeof (LayoutStyle);$/;"	v	file:
layout_config_styles	layout_config.c	/^static LayoutStyle layout_config_styles[] = {$/;"	v	file:
layout_config_table_button	layout_config.c	/^static void layout_config_table_button(GtkWidget *table, LayoutLocation l, const gchar *text)$/;"	f	file:
layout_config_widget	layout_config.c	/^static GtkWidget *layout_config_widget(GtkWidget *group, GtkWidget *box, gint style, LayoutConfig *lc)$/;"	f	file:
layout_config_widget_click_cb	layout_config.c	/^static void layout_config_widget_click_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
layout_delete_cb	layout.c	/^static gint layout_delete_cb(GtkWidget *widget, GdkEventAny *event, gpointer data)$/;"	f	file:
layout_edit_update_all	layout_util.c	/^void layout_edit_update_all(void)$/;"	f
layout_find_by_image	layout.c	/^LayoutWindow *layout_find_by_image(ImageWindow *imd)$/;"	f
layout_free	layout.c	/^void layout_free(LayoutWindow *lw)$/;"	f
layout_geometry_get	layout.c	/^gint layout_geometry_get(LayoutWindow *lw, gint *x, gint *y, gint *w, gint *h)$/;"	f
layout_geometry_get_dividers	layout.c	/^gint layout_geometry_get_dividers(LayoutWindow *lw, gint *h, gint *v)$/;"	f
layout_geometry_get_tools	layout.c	/^gint layout_geometry_get_tools(LayoutWindow *lw, gint *x, gint *y, gint *w, gint *h, gint *divider_pos)$/;"	f
layout_get_path	layout.c	/^const gchar *layout_get_path(LayoutWindow *lw)$/;"	f
layout_grid_compass	layout.c	/^static LayoutLocation layout_grid_compass(LayoutWindow *lw)$/;"	f	file:
layout_grid_compute	layout.c	/^static void layout_grid_compute(LayoutWindow *lw,$/;"	f	file:
layout_grid_setup	layout.c	/^static void layout_grid_setup(LayoutWindow *lw)$/;"	f	file:
layout_height	print.c	/^	gdouble layout_height;$/;"	m	struct:_PrintWindow	file:
layout_icon_status_cb	layout.c	/^static void layout_icon_status_cb(ViewFileIcon *vfi, gpointer data)$/;"	f	file:
layout_icon_thumb_cb	layout.c	/^static void layout_icon_thumb_cb(ViewFileIcon *vfi, gdouble val, const gchar *text, gpointer data)$/;"	f	file:
layout_idle_id	print.c	/^	gint layout_idle_id;$/;"	m	struct:_PrintWindow	file:
layout_image	print.c	/^	ImageWindow *layout_image;$/;"	m	struct:_PrintWindow	file:
layout_image_alter	layout_image.c	/^void layout_image_alter(LayoutWindow *lw, AlterType type)$/;"	f
layout_image_button_cb	layout_image.c	/^static void layout_image_button_cb(ImageWindow *imd, gint button, guint32 time,$/;"	f	file:
layout_image_color_profile_get	layout_image.c	/^gint layout_image_color_profile_get(LayoutWindow *lw,$/;"	f
layout_image_color_profile_get_use	layout_image.c	/^gint layout_image_color_profile_get_use(LayoutWindow *lw)$/;"	f
layout_image_color_profile_set	layout_image.c	/^void layout_image_color_profile_set(LayoutWindow *lw,$/;"	f
layout_image_color_profile_set_use	layout_image.c	/^void layout_image_color_profile_set_use(LayoutWindow *lw, gint enable)$/;"	f
layout_image_dnd_end	layout_image.c	/^static void layout_image_dnd_end(GtkWidget *widget, GdkDragContext *context, gpointer data)$/;"	f	file:
layout_image_dnd_get	layout_image.c	/^static void layout_image_dnd_get(GtkWidget *widget, GdkDragContext *context,$/;"	f	file:
layout_image_dnd_init	layout_image.c	/^static void layout_image_dnd_init(LayoutWindow *lw)$/;"	f	file:
layout_image_dnd_receive	layout_image.c	/^static void layout_image_dnd_receive(GtkWidget *widget, GdkDragContext *context,$/;"	f	file:
layout_image_first	layout_image.c	/^void layout_image_first(LayoutWindow *lw)$/;"	f
layout_image_full_screen_active	layout_image.c	/^gint layout_image_full_screen_active(LayoutWindow *lw)$/;"	f
layout_image_full_screen_key_press_cb	layout_image.c	/^static gint layout_image_full_screen_key_press_cb(GtkWidget *widget, GdkEventKey *event, gpointer data)$/;"	f	file:
layout_image_full_screen_menu_popup	layout_image.c	/^static void layout_image_full_screen_menu_popup(LayoutWindow *lw)$/;"	f	file:
layout_image_full_screen_start	layout_image.c	/^void layout_image_full_screen_start(LayoutWindow *lw)$/;"	f
layout_image_full_screen_stop	layout_image.c	/^void layout_image_full_screen_stop(LayoutWindow *lw)$/;"	f
layout_image_full_screen_stop_func	layout_image.c	/^static void layout_image_full_screen_stop_func(FullScreenData *fs, gpointer data)$/;"	f	file:
layout_image_full_screen_toggle	layout_image.c	/^void layout_image_full_screen_toggle(LayoutWindow *lw)$/;"	f
layout_image_fullscreen_menu_pos_cb	layout_image.c	/^static void layout_image_fullscreen_menu_pos_cb(GtkMenu *menu, gint *x, gint *y, gboolean *push_in, gpointer data)$/;"	f	file:
layout_image_get_collection	layout_image.c	/^CollectionData *layout_image_get_collection(LayoutWindow *lw, CollectInfo **info)$/;"	f
layout_image_get_index	layout_image.c	/^gint layout_image_get_index(LayoutWindow *lw)$/;"	f
layout_image_get_name	layout_image.c	/^const gchar *layout_image_get_name(LayoutWindow *lw)$/;"	f
layout_image_get_path	layout_image.c	/^const gchar *layout_image_get_path(LayoutWindow *lw)$/;"	f
layout_image_last	layout_image.c	/^void layout_image_last(LayoutWindow *lw)$/;"	f
layout_image_maint_moved	layout_image.c	/^void layout_image_maint_moved(LayoutWindow *lw, const gchar *source, const gchar *dest)$/;"	f
layout_image_maint_removed	layout_image.c	/^void layout_image_maint_removed(LayoutWindow *lw, const gchar *path)$/;"	f
layout_image_maint_renamed	layout_image.c	/^void layout_image_maint_renamed(LayoutWindow *lw, const gchar *source, const gchar *dest)$/;"	f
layout_image_menu_popup	layout_image.c	/^void layout_image_menu_popup(LayoutWindow *lw)$/;"	f
layout_image_menu_pos_cb	layout_image.c	/^static void layout_image_menu_pos_cb(GtkMenu *menu, gint *x, gint *y, gboolean *push_in, gpointer data)$/;"	f	file:
layout_image_new	layout_image.c	/^GtkWidget *layout_image_new(LayoutWindow *lw, const gchar *path)$/;"	f
layout_image_next	layout_image.c	/^void layout_image_next(LayoutWindow *lw)$/;"	f
layout_image_overlay_toggle	layout_image.c	/^void layout_image_overlay_toggle(LayoutWindow *lw)$/;"	f
layout_image_overlay_update	layout_image.c	/^void layout_image_overlay_update(LayoutWindow *lw)$/;"	f
layout_image_pop_menu	layout_image.c	/^static GtkWidget *layout_image_pop_menu(LayoutWindow *lw)$/;"	f	file:
layout_image_prev	layout_image.c	/^void layout_image_prev(LayoutWindow *lw)$/;"	f
layout_image_refresh	layout_image.c	/^void layout_image_refresh(LayoutWindow *lw)$/;"	f
layout_image_scroll	layout_image.c	/^void layout_image_scroll(LayoutWindow *lw, gint x, gint y)$/;"	f
layout_image_scroll_cb	layout_image.c	/^static void layout_image_scroll_cb(ImageWindow *imd, GdkScrollDirection direction, guint32 time,$/;"	f	file:
layout_image_set_buttons	layout_image.c	/^static void layout_image_set_buttons(LayoutWindow *lw)$/;"	f	file:
layout_image_set_collection	layout_image.c	/^void layout_image_set_collection(LayoutWindow *lw, CollectionData *cd, CollectInfo *info)$/;"	f
layout_image_set_collection_real	layout_image.c	/^static void layout_image_set_collection_real(LayoutWindow *lw, CollectionData *cd, CollectInfo *info, gint forward)$/;"	f	file:
layout_image_set_index	layout_image.c	/^void layout_image_set_index(LayoutWindow *lw, gint index)$/;"	f
layout_image_set_path	layout_image.c	/^void layout_image_set_path(LayoutWindow *lw, const gchar *path)$/;"	f
layout_image_set_with_ahead	layout_image.c	/^void layout_image_set_with_ahead(LayoutWindow *lw, const gchar *path, const gchar *read_ahead_path)$/;"	f
layout_image_slideshow_active	layout_image.c	/^gint layout_image_slideshow_active(LayoutWindow *lw)$/;"	f
layout_image_slideshow_continue_check	layout_image.c	/^static gint layout_image_slideshow_continue_check(LayoutWindow *lw)$/;"	f	file:
layout_image_slideshow_next	layout_image.c	/^static void layout_image_slideshow_next(LayoutWindow *lw)$/;"	f	file:
layout_image_slideshow_pause_toggle	layout_image.c	/^gint layout_image_slideshow_pause_toggle(LayoutWindow *lw)$/;"	f
layout_image_slideshow_paused	layout_image.c	/^gint layout_image_slideshow_paused(LayoutWindow *lw)$/;"	f
layout_image_slideshow_prev	layout_image.c	/^static void layout_image_slideshow_prev(LayoutWindow *lw)$/;"	f	file:
layout_image_slideshow_start	layout_image.c	/^void layout_image_slideshow_start(LayoutWindow *lw)$/;"	f
layout_image_slideshow_start_from_list	layout_image.c	/^void layout_image_slideshow_start_from_list(LayoutWindow *lw, GList *list)$/;"	f
layout_image_slideshow_stop	layout_image.c	/^void layout_image_slideshow_stop(LayoutWindow *lw)$/;"	f
layout_image_slideshow_stop_func	layout_image.c	/^static void layout_image_slideshow_stop_func(SlideShowData *ss, gpointer data)$/;"	f	file:
layout_image_slideshow_toggle	layout_image.c	/^void layout_image_slideshow_toggle(LayoutWindow *lw)$/;"	f
layout_image_to_root	layout_image.c	/^void layout_image_to_root(LayoutWindow *lw)$/;"	f
layout_image_update_cb	layout_image.c	/^static void layout_image_update_cb(ImageWindow *imd, gpointer data)$/;"	f	file:
layout_image_zoom_adjust	layout_image.c	/^void layout_image_zoom_adjust(LayoutWindow *lw, gdouble increment)$/;"	f
layout_image_zoom_set	layout_image.c	/^void layout_image_zoom_set(LayoutWindow *lw, gdouble zoom)$/;"	f
layout_image_zoom_set_fill_geometry	layout_image.c	/^void layout_image_zoom_set_fill_geometry(LayoutWindow *lw, gint vertical)$/;"	f
layout_key_match	layout_util.c	/^static gint layout_key_match(guint keyval)$/;"	f	file:
layout_key_press_cb	layout_util.c	/^static gint layout_key_press_cb(GtkWidget *widget, GdkEventKey *event, gpointer data)$/;"	f	file:
layout_keyboard_init	layout_util.c	/^void layout_keyboard_init(LayoutWindow *lw, GtkWidget *window)$/;"	f
layout_list	layout.c	/^GList *layout_list(LayoutWindow *lw)$/;"	f
layout_list_count	layout.c	/^gint layout_list_count(LayoutWindow *lw, gint64 *bytes)$/;"	f
layout_list_get_index	layout.c	/^gint layout_list_get_index(LayoutWindow *lw, const gchar *path)$/;"	f
layout_list_get_path	layout.c	/^const gchar *layout_list_get_path(LayoutWindow *lw, gint index)$/;"	f
layout_list_new	layout.c	/^static GtkWidget *layout_list_new(LayoutWindow *lw)$/;"	f	file:
layout_list_scroll_to_subpart	layout.c	/^static void layout_list_scroll_to_subpart(LayoutWindow *lw, const gchar *needle)$/;"	f	file:
layout_list_status_cb	layout.c	/^static void layout_list_status_cb(ViewFileList *vfl, gpointer data)$/;"	f	file:
layout_list_sync_path	layout.c	/^void layout_list_sync_path(LayoutWindow *lw, const gchar *path)$/;"	f
layout_list_sync_sort	layout.c	/^static void layout_list_sync_sort(LayoutWindow *lw)$/;"	f	file:
layout_list_sync_thumb	layout.c	/^static void layout_list_sync_thumb(LayoutWindow *lw)$/;"	f	file:
layout_list_thumb_cb	layout.c	/^static void layout_list_thumb_cb(ViewFileList *vfl, gdouble val, const gchar *text, gpointer data)$/;"	f	file:
layout_location_compute	layout.c	/^static void layout_location_compute(LayoutLocation l1, LayoutLocation l2,$/;"	f	file:
layout_location_first	layout.c	/^static gint layout_location_first(LayoutLocation l)$/;"	f	file:
layout_location_single	layout.c	/^static gint layout_location_single(LayoutLocation l)$/;"	f	file:
layout_location_vertical	layout.c	/^static gint layout_location_vertical(LayoutLocation l)$/;"	f	file:
layout_maint_moved	layout.c	/^void layout_maint_moved(const gchar *source, const gchar *dest, GList *ignore_list)$/;"	f
layout_maint_removed	layout.c	/^void layout_maint_removed(const gchar *path, GList *ignore_list)$/;"	f
layout_maint_renamed	layout.c	/^void layout_maint_renamed(const gchar *source, const gchar *dest)$/;"	f
layout_menu_about_cb	layout_util.c	/^static void layout_menu_about_cb(GtkAction *action, gpointer data)$/;"	f	file:
layout_menu_alter_180_cb	layout_util.c	/^static void layout_menu_alter_180_cb(GtkAction *action, gpointer data)$/;"	f	file:
layout_menu_alter_90_cb	layout_util.c	/^static void layout_menu_alter_90_cb(GtkAction *action, gpointer data)$/;"	f	file:
layout_menu_alter_90cc_cb	layout_util.c	/^static void layout_menu_alter_90cc_cb(GtkAction *action, gpointer data)$/;"	f	file:
layout_menu_alter_desaturate_cb	layout_util.c	/^static void layout_menu_alter_desaturate_cb(GtkAction *action, gpointer data)$/;"	f	file:
layout_menu_alter_flip_cb	layout_util.c	/^static void layout_menu_alter_flip_cb(GtkAction *action, gpointer data)$/;"	f	file:
layout_menu_alter_mirror_cb	layout_util.c	/^static void layout_menu_alter_mirror_cb(GtkAction *action, gpointer data)$/;"	f	file:
layout_menu_bar_exif_cb	layout_util.c	/^static void layout_menu_bar_exif_cb(GtkToggleAction *action, gpointer data)$/;"	f	file:
layout_menu_bar_info_cb	layout_util.c	/^static void layout_menu_bar_info_cb(GtkToggleAction *action, gpointer data)$/;"	f	file:
layout_menu_bar_sort_cb	layout_util.c	/^static void layout_menu_bar_sort_cb(GtkToggleAction *action, gpointer data)$/;"	f	file:
layout_menu_close_cb	layout_util.c	/^static void layout_menu_close_cb(GtkAction *action, gpointer data)$/;"	f	file:
layout_menu_config_cb	layout_util.c	/^static void layout_menu_config_cb(GtkAction *action, gpointer data)$/;"	f	file:
layout_menu_copy_cb	layout_util.c	/^static void layout_menu_copy_cb(GtkAction *action, gpointer data)$/;"	f	file:
layout_menu_delete_cb	layout_util.c	/^static void layout_menu_delete_cb(GtkAction *action, gpointer data)$/;"	f	file:
layout_menu_dir_cb	layout_util.c	/^static void layout_menu_dir_cb(GtkAction *action, gpointer data)$/;"	f	file:
layout_menu_dupes_cb	layout_util.c	/^static void layout_menu_dupes_cb(GtkAction *action, gpointer data)$/;"	f	file:
layout_menu_edit_cb	layout_util.c	/^static void layout_menu_edit_cb(GtkAction *action, gpointer data)$/;"	f	file:
layout_menu_edit_update	layout_util.c	/^static void layout_menu_edit_update(LayoutWindow *lw)$/;"	f	file:
layout_menu_exit_cb	layout_util.c	/^static void layout_menu_exit_cb(GtkAction *action, gpointer data)$/;"	f	file:
layout_menu_float_cb	layout_util.c	/^static void layout_menu_float_cb(GtkToggleAction *action, gpointer data)$/;"	f	file:
layout_menu_fullscreen_cb	layout_util.c	/^static void layout_menu_fullscreen_cb(GtkAction *action, gpointer data)$/;"	f	file:
layout_menu_help_cb	layout_util.c	/^static void layout_menu_help_cb(GtkAction *action, gpointer data)$/;"	f	file:
layout_menu_help_keys_cb	layout_util.c	/^static void layout_menu_help_keys_cb(GtkAction *action, gpointer data)$/;"	f	file:
layout_menu_hide_cb	layout_util.c	/^static void layout_menu_hide_cb(GtkAction *action, gpointer data)$/;"	f	file:
layout_menu_info_cb	layout_util.c	/^static void layout_menu_info_cb(GtkAction *action, gpointer data)$/;"	f	file:
layout_menu_list_cb	layout_util.c	/^static void layout_menu_list_cb(GtkRadioAction *action, GtkRadioAction *current, gpointer data)$/;"	f	file:
layout_menu_move_cb	layout_util.c	/^static void layout_menu_move_cb(GtkAction *action, gpointer data)$/;"	f	file:
layout_menu_new_cb	layout_util.c	/^static void layout_menu_new_cb(GtkAction *action, gpointer data)$/;"	f	file:
layout_menu_new_window_cb	layout_util.c	/^static void layout_menu_new_window_cb(GtkAction *action, gpointer data)$/;"	f	file:
layout_menu_notes_cb	layout_util.c	/^static void layout_menu_notes_cb(GtkAction *action, gpointer data)$/;"	f	file:
layout_menu_open_cb	layout_util.c	/^static void layout_menu_open_cb(GtkAction *action, gpointer data)$/;"	f	file:
layout_menu_pan_cb	layout_util.c	/^static void layout_menu_pan_cb(GtkAction *action, gpointer data)$/;"	f	file:
layout_menu_print_cb	layout_util.c	/^static void layout_menu_print_cb(GtkAction *action, gpointer data)$/;"	f	file:
layout_menu_recent_cb	layout_util.c	/^static void layout_menu_recent_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
layout_menu_recent_update	layout_util.c	/^static void layout_menu_recent_update(LayoutWindow *lw)$/;"	f	file:
layout_menu_refresh_cb	layout_util.c	/^static void layout_menu_refresh_cb(GtkAction *action, gpointer data)$/;"	f	file:
layout_menu_remove_thumb_cb	layout_util.c	/^static void layout_menu_remove_thumb_cb(GtkAction *action, gpointer data)$/;"	f	file:
layout_menu_rename_cb	layout_util.c	/^static void layout_menu_rename_cb(GtkAction *action, gpointer data)$/;"	f	file:
layout_menu_search_cb	layout_util.c	/^static void layout_menu_search_cb(GtkAction *action, gpointer data)$/;"	f	file:
layout_menu_select_all_cb	layout_util.c	/^static void layout_menu_select_all_cb(GtkAction *action, gpointer data)$/;"	f	file:
layout_menu_slideshow_cb	layout_util.c	/^static void layout_menu_slideshow_cb(GtkAction *action, gpointer data)$/;"	f	file:
layout_menu_thumb_cb	layout_util.c	/^static void layout_menu_thumb_cb(GtkToggleAction *action, gpointer data)$/;"	f	file:
layout_menu_toolbar_cb	layout_util.c	/^static void layout_menu_toolbar_cb(GtkToggleAction *action, gpointer data)$/;"	f	file:
layout_menu_tree_cb	layout_util.c	/^static void layout_menu_tree_cb(GtkToggleAction *action, gpointer data)$/;"	f	file:
layout_menu_unselect_all_cb	layout_util.c	/^static void layout_menu_unselect_all_cb(GtkAction *action, gpointer data)$/;"	f	file:
layout_menu_wallpaper_cb	layout_util.c	/^static void layout_menu_wallpaper_cb(GtkAction *action, gpointer data)$/;"	f	file:
layout_menu_zoom_1_1_cb	layout_util.c	/^static void layout_menu_zoom_1_1_cb(GtkAction *action, gpointer data)$/;"	f	file:
layout_menu_zoom_fit_cb	layout_util.c	/^static void layout_menu_zoom_fit_cb(GtkAction *action, gpointer data)$/;"	f	file:
layout_menu_zoom_in_cb	layout_util.c	/^static void layout_menu_zoom_in_cb(GtkAction *action, gpointer data)$/;"	f	file:
layout_menu_zoom_out_cb	layout_util.c	/^static void layout_menu_zoom_out_cb(GtkAction *action, gpointer data)$/;"	f	file:
layout_new	layout.c	/^LayoutWindow *layout_new(const gchar *path, gint popped, gint hidden)$/;"	f
layout_new_with_geometry	layout.c	/^LayoutWindow *layout_new_with_geometry(const gchar *path, gint popped, gint hidden,$/;"	f
layout_order	globals.c	/^gchar *layout_order = NULL;$/;"	v
layout_path	typedefs.h	/^	gchar *layout_path;$/;"	m	struct:_SlideShowData
layout_path_entry_cb	layout.c	/^static void layout_path_entry_cb(const gchar *path, gpointer data)$/;"	f	file:
layout_path_entry_changed_cb	layout.c	/^static void layout_path_entry_changed_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
layout_path_entry_tab_cb	layout.c	/^static void layout_path_entry_tab_cb(const gchar *path, gpointer data)$/;"	f	file:
layout_real_moved	layout.c	/^static void layout_real_moved(LayoutWindow *lw, const gchar *source, const gchar *dest, GList *ignore_list)$/;"	f	file:
layout_real_removed	layout.c	/^static void layout_real_removed(LayoutWindow *lw, const gchar *path, GList *ignore_list)$/;"	f	file:
layout_real_renamed	layout.c	/^static void layout_real_renamed(LayoutWindow *lw, const gchar *source, const gchar *dest)$/;"	f	file:
layout_real_time_update	layout.c	/^static void layout_real_time_update(LayoutWindow *lw)$/;"	f	file:
layout_recent_add_path	layout_util.c	/^void layout_recent_add_path(const gchar *path)$/;"	f
layout_recent_update_all	layout_util.c	/^void layout_recent_update_all(void)$/;"	f
layout_refresh	layout.c	/^void layout_refresh(LayoutWindow *lw)$/;"	f
layout_refresh_by_time	layout.c	/^static void layout_refresh_by_time(LayoutWindow *lw)$/;"	f	file:
layout_refresh_lists	layout.c	/^static void layout_refresh_lists(LayoutWindow *lw)$/;"	f	file:
layout_select_all	layout.c	/^void layout_select_all(LayoutWindow *lw)$/;"	f
layout_select_none	layout.c	/^void layout_select_none(LayoutWindow *lw)$/;"	f
layout_selection_count	layout.c	/^gint layout_selection_count(LayoutWindow *lw, gint64 *bytes)$/;"	f
layout_selection_list	layout.c	/^GList *layout_selection_list(LayoutWindow *lw)$/;"	f
layout_selection_list_by_index	layout.c	/^GList *layout_selection_list_by_index(LayoutWindow *lw)$/;"	f
layout_set_path	layout.c	/^gint layout_set_path(LayoutWindow *lw, const gchar *path)$/;"	f
layout_sort_button	layout.c	/^static GtkWidget *layout_sort_button(LayoutWindow *lw)$/;"	f	file:
layout_sort_button_press_cb	layout.c	/^static void layout_sort_button_press_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
layout_sort_get	layout.c	/^gint layout_sort_get(LayoutWindow *lw, SortType *type, gint *ascend)$/;"	f
layout_sort_menu_ascend_cb	layout.c	/^static void layout_sort_menu_ascend_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
layout_sort_menu_cb	layout.c	/^static void layout_sort_menu_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
layout_sort_menu_hide_cb	layout.c	/^static void layout_sort_menu_hide_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
layout_sort_set	layout.c	/^void layout_sort_set(LayoutWindow *lw, SortType type, gint ascend)$/;"	f
layout_status_label	layout.c	/^static GtkWidget *layout_status_label(gchar *text, GtkWidget *box, gint start, gint size, gint expand)$/;"	f	file:
layout_status_setup	layout.c	/^static void layout_status_setup(LayoutWindow *lw, GtkWidget *box, gint small_format)$/;"	f	file:
layout_status_update_all	layout.c	/^void layout_status_update_all(LayoutWindow *lw)$/;"	f
layout_status_update_image	layout.c	/^void layout_status_update_image(LayoutWindow *lw)$/;"	f
layout_status_update_info	layout.c	/^void layout_status_update_info(LayoutWindow *lw, const gchar *text)$/;"	f
layout_status_update_progress	layout.c	/^void layout_status_update_progress(LayoutWindow *lw, gdouble val, const gchar *text)$/;"	f
layout_style	globals.c	/^gint layout_style = 0;$/;"	v
layout_style_set	layout.c	/^void layout_style_set(LayoutWindow *lw, gint style, const gchar *order)$/;"	f
layout_styles_update	layout.c	/^void layout_styles_update(void)$/;"	f
layout_sync_path	layout.c	/^static void layout_sync_path(LayoutWindow *lw)$/;"	f	file:
layout_thumb_get	layout.c	/^gint layout_thumb_get(LayoutWindow *lw)$/;"	f
layout_thumb_set	layout.c	/^void layout_thumb_set(LayoutWindow *lw, gint enable)$/;"	f
layout_titles	layout_config.c	/^static gchar *layout_titles[] = { N_("Tools"), N_("Files"), N_("Image") };$/;"	v	file:
layout_tool_setup	layout.c	/^static GtkWidget *layout_tool_setup(LayoutWindow *lw)$/;"	f	file:
layout_toolbar_hidden	layout.c	/^gint layout_toolbar_hidden(LayoutWindow *lw)$/;"	f
layout_toolbar_toggle	layout.c	/^void layout_toolbar_toggle(LayoutWindow *lw)$/;"	f
layout_tools_delete_cb	layout.c	/^static gint layout_tools_delete_cb(GtkWidget *widget, GdkEventAny *event, gpointer data)$/;"	f	file:
layout_tools_float_get	layout.c	/^gint layout_tools_float_get(LayoutWindow *lw, gint *popped, gint *hidden)$/;"	f
layout_tools_float_set	layout.c	/^void layout_tools_float_set(LayoutWindow *lw, gint popped, gint hidden)$/;"	f
layout_tools_float_toggle	layout.c	/^void layout_tools_float_toggle(LayoutWindow *lw)$/;"	f
layout_tools_geometry_sync	layout.c	/^static void layout_tools_geometry_sync(LayoutWindow *lw)$/;"	f	file:
layout_tools_hide	layout.c	/^static void layout_tools_hide(LayoutWindow *lw, gint hide)$/;"	f	file:
layout_tools_hide_toggle	layout.c	/^void layout_tools_hide_toggle(LayoutWindow *lw)$/;"	f
layout_tools_new	layout.c	/^static GtkWidget *layout_tools_new(LayoutWindow *lw)$/;"	f	file:
layout_tools_setup	layout.c	/^static void layout_tools_setup(LayoutWindow *lw, GtkWidget *tools, GtkWidget *files)$/;"	f	file:
layout_util_sync	layout_util.c	/^void layout_util_sync(LayoutWindow *lw)$/;"	f
layout_util_sync_thumb	layout_util.c	/^void layout_util_sync_thumb(LayoutWindow *lw)$/;"	f
layout_util_sync_views	layout_util.c	/^static void layout_util_sync_views(LayoutWindow *lw)$/;"	f	file:
layout_valid	layout.c	/^gint layout_valid(LayoutWindow **lw)$/;"	f
layout_vdlist_select_cb	layout.c	/^static void layout_vdlist_select_cb(ViewDirList *vdl, const gchar *path, gpointer data)$/;"	f	file:
layout_vdtree_select_cb	layout.c	/^static void layout_vdtree_select_cb(ViewDirTree *vdt, const gchar *path, gpointer data)$/;"	f	file:
layout_view_icons	globals.c	/^gint layout_view_icons = FALSE;$/;"	v
layout_view_tree	globals.c	/^gint layout_view_tree = FALSE;$/;"	v
layout_views_get	layout.c	/^gint layout_views_get(LayoutWindow *lw, gint *tree, gint *icons)$/;"	f
layout_views_set	layout.c	/^void layout_views_set(LayoutWindow *lw, gint tree, gint icons)$/;"	f
layout_widget	preferences.c	/^static GtkWidget *layout_widget;$/;"	v	file:
layout_width	print.c	/^	gdouble layout_width;$/;"	m	struct:_PrintWindow	file:
layout_window_list	layout.c	/^GList *layout_window_list = NULL;$/;"	v
lazy_image_sync	globals.c	/^gint lazy_image_sync = FALSE;$/;"	v
li_pop_menu_alter_cb	layout_image.c	/^static void li_pop_menu_alter_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
li_pop_menu_click_parent	layout_image.c	/^static GtkWidget *li_pop_menu_click_parent(GtkWidget *widget, LayoutWindow *lw)$/;"	f	file:
li_pop_menu_copy_cb	layout_image.c	/^static void li_pop_menu_copy_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
li_pop_menu_delete_cb	layout_image.c	/^static void li_pop_menu_delete_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
li_pop_menu_edit_cb	layout_image.c	/^static void li_pop_menu_edit_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
li_pop_menu_full_screen_cb	layout_image.c	/^static void li_pop_menu_full_screen_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
li_pop_menu_hide_cb	layout_image.c	/^static void li_pop_menu_hide_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
li_pop_menu_info_cb	layout_image.c	/^static void li_pop_menu_info_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
li_pop_menu_move_cb	layout_image.c	/^static void li_pop_menu_move_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
li_pop_menu_new_cb	layout_image.c	/^static void li_pop_menu_new_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
li_pop_menu_rename_cb	layout_image.c	/^static void li_pop_menu_rename_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
li_pop_menu_slide_pause_cb	layout_image.c	/^static void li_pop_menu_slide_pause_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
li_pop_menu_slide_start_cb	layout_image.c	/^static void li_pop_menu_slide_start_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
li_pop_menu_slide_stop_cb	layout_image.c	/^static void li_pop_menu_slide_stop_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
li_pop_menu_wallpaper_cb	layout_image.c	/^static void li_pop_menu_wallpaper_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
li_pop_menu_zoom_1_1_cb	layout_image.c	/^static void li_pop_menu_zoom_1_1_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
li_pop_menu_zoom_fit_cb	layout_image.c	/^static void li_pop_menu_zoom_fit_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
li_pop_menu_zoom_in_cb	layout_image.c	/^static void li_pop_menu_zoom_in_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
li_pop_menu_zoom_out_cb	layout_image.c	/^static void li_pop_menu_zoom_out_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
libdir	Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	icons/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	icons/svg/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libexecdir	Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	icons/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	icons/svg/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
limit_window_size	globals.c	/^gint limit_window_size = FALSE;$/;"	v
limit_window_size_c	preferences.c	/^static gint limit_window_size_c;$/;"	v	file:
list	Makefile	/^	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \\$/;"	m
list	cache_maint.c	/^	GList *list;$/;"	m	struct:_CMData	file:
list	cache_maint.c	/^	GList *list;$/;"	m	struct:_CleanData	file:
list	dupe.c	/^	GList *list;$/;"	m	struct:__anon44	file:
list	dupe.h	/^	GList *list;			\/* dropped files (DupeItem) *\/$/;"	m	struct:_DupeWindow
list	editors.c	/^	GList *list;$/;"	m	struct:_EditorVerboseData	file:
list	exif.h	/^	ExifTextList	*list;$/;"	m	struct:_ExifMarker
list	icons/Makefile	/^	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \\$/;"	m
list	img-view.c	/^	GList *list;$/;"	m	struct:_ViewWindow	file:
list	img-view.c	/^	GList *list;$/;"	m	struct:__anon70	file:
list	info.h	/^	GList *list;$/;"	m	struct:_InfoData
list	pan-types.h	/^	GList *list;$/;"	m	struct:_PanGrid
list	pan-types.h	/^	GList *list;$/;"	m	struct:_PanWindow
list	typedefs.h	/^	GList *list;$/;"	m	struct:_CollectWindow
list	typedefs.h	/^	GList *list;$/;"	m	struct:_CollectionData
list	typedefs.h	/^	GList *list;$/;"	m	struct:_SlideShowData
list	typedefs.h	/^	GList *list;$/;"	m	struct:_ViewDirList
list	typedefs.h	/^	GList *list;$/;"	m	struct:_ViewFileIcon
list	typedefs.h	/^	GList *list;$/;"	m	struct:_ViewFileList
list	ui_bookmark.c	/^	GList *list;$/;"	m	struct:_HistoryData	file:
list	ui_spinner.c	/^	GList *list;		\/* list of pixbufs *\/$/;"	m	struct:_SpinnerData	file:
list_data	bar_info.c	/^	gpointer list_data;$/;"	m	struct:_BarInfoData	file:
list_dir	cache_maint.c	/^	GList *list_dir;$/;"	m	struct:_CleanData	file:
list_done	typedefs.h	/^	GList *list_done;$/;"	m	struct:_SlideShowData
list_func	bar_info.c	/^	GList *(*list_func)(gpointer);$/;"	m	struct:_BarInfoData	file:
list_grid	pan-types.h	/^	GList *list_grid;$/;"	m	struct:_PanWindow
list_pointer	img-view.c	/^	GList *list_pointer;$/;"	m	struct:_ViewWindow	file:
list_static	pan-types.h	/^	GList *list_static;$/;"	m	struct:_PanWindow
list_todo	cache_maint.c	/^	GList *list_todo;$/;"	m	struct:_CacheManager	file:
listview	bar_exif.c	/^	GtkWidget *listview;$/;"	m	struct:_ExifBar	file:
listview	dupe.h	/^	GtkWidget *listview;$/;"	m	struct:_DupeWindow
listview	layout_config.c	/^	GtkWidget *listview;$/;"	m	struct:_LayoutConfig	file:
listview	typedefs.h	/^	GtkWidget *listview;$/;"	m	struct:_CollectTable
listview	typedefs.h	/^	GtkWidget *listview;$/;"	m	struct:_ViewDirList
listview	typedefs.h	/^	GtkWidget *listview;$/;"	m	struct:_ViewFileIcon
listview	typedefs.h	/^	GtkWidget *listview;$/;"	m	struct:_ViewFileList
listview	utilops.c	/^	GtkWidget *listview;$/;"	m	struct:_RenameDataMult	file:
load_fd	typedefs.h	/^	gint load_fd;$/;"	m	struct:_ImageLoader
load_options	rcfile.c	/^void load_options(void)$/;"	f
load_xv_thumbnail	thumb.c	/^static guchar *load_xv_thumbnail(gchar *filename, gint *widthp, gint *heightp)$/;"	f	file:
loader	typedefs.h	/^	GdkPixbufLoader *loader;$/;"	m	struct:_ImageLoader
loading	pixbuf-renderer.h	/^	gboolean loading;$/;"	m	struct:_PixbufRenderer
local	cache_maint.c	/^	gint local;$/;"	m	struct:_CleanData	file:
local_uri	thumb_standard.h	/^	const gchar *local_uri;$/;"	m	struct:_ThumbLoaderStd
localstatedir	Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	icons/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	icons/svg/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
lstat_utf8	ui_fileops.c	/^gint lstat_utf8(const gchar *s, struct stat *st)$/;"	f
lw	bar_sort.c	/^	LayoutWindow *lw;$/;"	m	struct:_SortData	file:
magic_length	format_raw.c	/^	const guint magic_length;$/;"	m	struct:_FormatRawEntry	file:
magic_offset	format_raw.c	/^	const guint magic_offset;$/;"	m	struct:_FormatRawEntry	file:
magic_pattern	format_raw.c	/^	const void *magic_pattern;$/;"	m	struct:_FormatRawEntry	file:
magic_type	format_raw.c	/^	FormatRawMatchType magic_type;$/;"	m	struct:_FormatRawEntry	file:
main	main.c	/^int main (int argc, char *argv[])$/;"	f
main_box	typedefs.h	/^	GtkWidget *main_box;$/;"	m	struct:_LayoutWindow
main_window_h	globals.c	/^gint main_window_h = 400;$/;"	v
main_window_maximized	globals.c	/^gint main_window_maximized = FALSE;$/;"	v
main_window_w	globals.c	/^gint main_window_w = 500;$/;"	v
main_window_x	globals.c	/^gint main_window_x = 0;$/;"	v
main_window_y	globals.c	/^gint main_window_y = 0;$/;"	v
mandir	Makefile	/^mandir = ${prefix}\/man$/;"	m
mandir	icons/Makefile	/^mandir = ${prefix}\/man$/;"	m
mandir	icons/svg/Makefile	/^mandir = ${prefix}\/man$/;"	m
map_file	exif.c	/^static gint map_file(const gchar *path, void **mapping, int *size)$/;"	f	file:
margin_bottom	print.c	/^	gdouble margin_bottom;$/;"	m	struct:_PrintWindow	file:
margin_bottom_spin	print.c	/^	GtkWidget *margin_bottom_spin;$/;"	m	struct:_PrintWindow	file:
margin_left	print.c	/^	gdouble margin_left;$/;"	m	struct:_PrintWindow	file:
margin_left_spin	print.c	/^	GtkWidget *margin_left_spin;$/;"	m	struct:_PrintWindow	file:
margin_right	print.c	/^	gdouble margin_right;$/;"	m	struct:_PrintWindow	file:
margin_right_spin	print.c	/^	GtkWidget *margin_right_spin;$/;"	m	struct:_PrintWindow	file:
margin_top	print.c	/^	gdouble margin_top;$/;"	m	struct:_PrintWindow	file:
margin_top_spin	print.c	/^	GtkWidget *margin_top_spin;$/;"	m	struct:_PrintWindow	file:
marker	exif.h	/^	const ExifMarker *marker;$/;"	m	struct:_ExifItem
marker_info	typedefs.h	/^	CollectInfo *marker_info;$/;"	m	struct:_CollectTable
marker_window	typedefs.h	/^	GdkWindow *marker_window;$/;"	m	struct:_CollectTable
match_date	search.c	/^	MatchType match_date;$/;"	m	struct:_SearchData	file:
match_date_enable	search.c	/^	gboolean match_date_enable;$/;"	m	struct:_SearchData	file:
match_dimensions	search.c	/^	MatchType match_dimensions;$/;"	m	struct:_SearchData	file:
match_dimensions_enable	search.c	/^	gboolean match_dimensions_enable;$/;"	m	struct:_SearchData	file:
match_keywords	search.c	/^	MatchType match_keywords;$/;"	m	struct:_SearchData	file:
match_keywords_enable	search.c	/^	gboolean match_keywords_enable;$/;"	m	struct:_SearchData	file:
match_mask	dupe.h	/^	DupeMatchType match_mask;	\/* mask of things to check for match *\/$/;"	m	struct:_DupeWindow
match_name	search.c	/^	MatchType match_name;$/;"	m	struct:_SearchData	file:
match_name_enable	search.c	/^	gboolean match_name_enable;$/;"	m	struct:_SearchData	file:
match_similarity_enable	search.c	/^	gboolean match_similarity_enable;$/;"	m	struct:_SearchData	file:
match_size	search.c	/^	MatchType match_size;$/;"	m	struct:_SearchData	file:
match_size_enable	search.c	/^	gboolean match_size_enable;$/;"	m	struct:_SearchData	file:
max_dpi	print.c	/^	gdouble max_dpi;$/;"	m	struct:_PrintWindow	file:
max_dpi_menu	print.c	/^	GtkWidget *max_dpi_menu;$/;"	m	struct:_PrintWindow	file:
max_h	typedefs.h	/^	gint max_h;$/;"	m	struct:_ThumbLoader
max_step	ui_tree_edit.c	/^	gint max_step;$/;"	m	struct:_AutoScrollData	file:
max_w	typedefs.h	/^	gint max_w;$/;"	m	struct:_ThumbLoader
max_window_size	globals.c	/^gint max_window_size = 100;$/;"	v
max_window_size_c	preferences.c	/^static gint max_window_size_c;$/;"	v	file:
md5_digest_from_text	md5-util.c	/^gboolean md5_digest_from_text(const gchar *text, guchar digest[16])$/;"	f
md5_digest_to_text	md5-util.c	/^gchar *md5_digest_to_text(guchar digest[16])$/;"	f
md5_final	md5-util.c	/^md5_final (MD5Context *ctx, guchar digest[16])$/;"	f
md5_get_digest	md5-util.c	/^md5_get_digest (const guchar *buffer, gint buffer_size, guchar digest[16])$/;"	f
md5_get_digest_from_file	md5-util.c	/^gboolean md5_get_digest_from_file(const gchar *path, guchar digest[16])$/;"	f
md5_get_digest_from_file_utf8	md5-util.c	/^gboolean md5_get_digest_from_file_utf8(const gchar *path, guchar digest[16])$/;"	f
md5_init	md5-util.c	/^md5_init (MD5Context *ctx)$/;"	f
md5_text_from_file_utf8	md5-util.c	/^gchar *md5_text_from_file_utf8(const gchar *path, const gchar *error_text)$/;"	f
md5_transform	md5-util.c	/^md5_transform (guint32 buf[4], const guint32 in[16])$/;"	f	file:
md5_update	md5-util.c	/^md5_update (MD5Context *ctx, const guchar *buf, guint32 len)$/;"	f
md5sum	cache.h	/^	guchar md5sum[16];$/;"	m	struct:_CacheData
md5sum	dupe.h	/^	gchar *md5sum;$/;"	m	struct:_DupeItem
menu_choice	search.c	/^static GtkWidget *menu_choice(GtkWidget *box, GtkWidget **check, GtkWidget **menu,$/;"	f	file:
menu_choice_check_cb	search.c	/^static void menu_choice_check_cb(GtkWidget *button, gpointer data)$/;"	f	file:
menu_choice_date_cb	search.c	/^static void menu_choice_date_cb(GtkWidget *combo, gpointer data)$/;"	f	file:
menu_choice_dimensions_cb	search.c	/^static void menu_choice_dimensions_cb(GtkWidget *combo, gpointer data)$/;"	f	file:
menu_choice_keyword_cb	search.c	/^static void menu_choice_keyword_cb(GtkWidget *combo, gpointer data)$/;"	f	file:
menu_choice_menu	search.c	/^static GtkWidget *menu_choice_menu(const MatchList *items, gint item_count,$/;"	f	file:
menu_choice_name_cb	search.c	/^static void menu_choice_name_cb(GtkWidget *combo, gpointer data)$/;"	f	file:
menu_choice_path_cb	search.c	/^static void menu_choice_path_cb(GtkWidget *combo, gpointer data)$/;"	f	file:
menu_choice_set_visible	search.c	/^static void menu_choice_set_visible(GtkWidget *widget, gint visible)$/;"	f	file:
menu_choice_size_cb	search.c	/^static void menu_choice_size_cb(GtkWidget *combo, gpointer data)$/;"	f	file:
menu_choice_spin_cb	search.c	/^static void menu_choice_spin_cb(GtkAdjustment *adjustment, gpointer data)$/;"	f	file:
menu_date	search.c	/^	GtkWidget *menu_date;$/;"	m	struct:_SearchData	file:
menu_dimensions	search.c	/^	GtkWidget *menu_dimensions;$/;"	m	struct:_SearchData	file:
menu_entries	layout_util.c	/^static GtkActionEntry menu_entries[] = {$/;"	v	file:
menu_item_add	ui_menu.c	/^GtkWidget *menu_item_add(GtkWidget *menu, const gchar *label,$/;"	f
menu_item_add_check	ui_menu.c	/^GtkWidget *menu_item_add_check(GtkWidget *menu, const gchar *label, gint active,$/;"	f
menu_item_add_divider	ui_menu.c	/^void menu_item_add_divider(GtkWidget *menu)$/;"	f
menu_item_add_radio	ui_menu.c	/^GtkWidget *menu_item_add_radio(GtkWidget *menu, GtkWidget *parent,$/;"	f
menu_item_add_sensitive	ui_menu.c	/^GtkWidget *menu_item_add_sensitive(GtkWidget *menu, const gchar *label, gint sensitive,$/;"	f
menu_item_add_simple	ui_menu.c	/^GtkWidget *menu_item_add_simple(GtkWidget *menu, const gchar *label,$/;"	f
menu_item_add_stock	ui_menu.c	/^GtkWidget *menu_item_add_stock(GtkWidget *menu, const gchar *label, const gchar *stock_id,$/;"	f
menu_item_add_stock_sensitive	ui_menu.c	/^GtkWidget *menu_item_add_stock_sensitive(GtkWidget *menu, const gchar *label, const gchar *stock_id, gint sensitive,$/;"	f
menu_item_finish	ui_menu.c	/^static void menu_item_finish(GtkWidget *menu, GtkWidget *item, GCallback func, gpointer data)$/;"	f	file:
menu_keywords	search.c	/^	GtkWidget *menu_keywords;$/;"	m	struct:_SearchData	file:
menu_name	search.c	/^	GtkWidget *menu_name;$/;"	m	struct:_SearchData	file:
menu_path	search.c	/^	GtkWidget *menu_path;$/;"	m	struct:_SearchData	file:
menu_radio_entries	layout_util.c	/^static GtkRadioActionEntry menu_radio_entries[] = {$/;"	v	file:
menu_size	search.c	/^	GtkWidget *menu_size;$/;"	m	struct:_SearchData	file:
menu_spin	search.c	/^static GtkWidget *menu_spin(GtkWidget *box, gdouble min, gdouble max, gint value,$/;"	f	file:
menu_toggle_entries	layout_util.c	/^static GtkToggleActionEntry menu_toggle_entries[] = {$/;"	v	file:
menu_translate	layout_util.c	/^static gchar *menu_translate(const gchar *path, gpointer data)$/;"	f	file:
menu_ui_description	layout_util.c	/^static const char *menu_ui_description =$/;"	v	file:
metadata	cache_maint.c	/^	gint metadata;$/;"	m	struct:_CMData	file:
metadata_set_keywords	bar_info.c	/^static void metadata_set_keywords(const gchar *path, GList *list, gint add)$/;"	f	file:
mkdir_p	Makefile	/^mkdir_p = mkdir -p --$/;"	m
mkdir_p	icons/Makefile	/^mkdir_p = mkdir -p --$/;"	m
mkdir_p	icons/svg/Makefile	/^mkdir_p = mkdir -p --$/;"	m
mkdir_utf8	ui_fileops.c	/^gint mkdir_utf8(const gchar *s, int mode)$/;"	f
mkinstalldirs	Makefile	/^mkinstalldirs = $(SHELL) $(top_srcdir)\/mkinstalldirs$/;"	m
mkinstalldirs	icons/Makefile	/^mkinstalldirs = $(SHELL) $(top_srcdir)\/mkinstalldirs$/;"	m
mkinstalldirs	icons/svg/Makefile	/^mkinstalldirs = $(SHELL) $(top_srcdir)\/mkinstalldirs$/;"	m
mode	bar_sort.c	/^	SortModeType mode;$/;"	m	struct:_SortData	file:
mode_number	info.c	/^static gchar *mode_number(mode_t m)$/;"	f	file:
module_SLIK	Makefile	/^module_SLIK = \\$/;"	m
mousewheel_scrolls	globals.c	/^gint mousewheel_scrolls = FALSE;$/;"	v
mousewheel_scrolls_c	preferences.c	/^static gint mousewheel_scrolls_c;$/;"	v	file:
move_file	ui_fileops.c	/^gint move_file(const gchar *s, const gchar *t)$/;"	f
msec_time	dupe.c	/^static guint64 msec_time(void)$/;"	f	file:
mtime	typedefs.h	/^	time_t mtime;		\/* file modified time stamp *\/$/;"	m	struct:_ImageWindow
multiple_files	ui_utildlg.h	/^	gint multiple_files;$/;"	m	struct:_FileDialog
n_collection_drag_types	collect-table.c	/^static gint n_collection_drag_types = 3;$/;"	v	file:
n_collection_drop_types	collect-table.c	/^static gint n_collection_drop_types = 2;$/;"	v	file:
n_dupe_drag_types	dupe.c	/^static gint n_dupe_drag_types = 2;$/;"	v	file:
n_dupe_drop_types	dupe.c	/^static gint n_dupe_drop_types = 2;$/;"	v	file:
n_result_drag_types	search.c	/^static gint n_result_drag_types = 2;$/;"	v	file:
name	dupe.h	/^	const gchar *name;		\/* we store the pointer into path for the name,$/;"	m	struct:_DupeItem
name	typedefs.h	/^	const gchar *name;$/;"	m	struct:_FileData
name	typedefs.h	/^	gchar *name;$/;"	m	struct:_CollectionData
name	ui_bookmark.c	/^	gchar *name;$/;"	m	struct:_BookButtonData	file:
name	view_dir_tree.c	/^	gchar *name;$/;"	m	struct:_PathData	file:
name_entry	info.h	/^	GtkWidget *name_entry;$/;"	m	struct:_InfoData
name_entry	ui_bookmark.c	/^	GtkWidget *name_entry;$/;"	m	struct:_BookPropData	file:
needs_extra	main.c	/^	gint needs_extra;$/;"	m	struct:_RemoteCommandEntry	file:
new_data	pixbuf-renderer.c	/^	gboolean new_data;$/;"	m	struct:_QueueData	file:
new_name	ui_tree_edit.h	/^	gchar *new_name;$/;"	m	struct:_TreeEditData
newpath	collect-io.c	/^	gchar *newpath;$/;"	m	struct:_CollectManagerAction	file:
nikon_tiff_entry	format_nikon.c	/^static void nikon_tiff_entry(unsigned char *data, const guint len, guint offset, ExifByteOrder bo,$/;"	f	file:
nikon_tiff_table	format_nikon.c	/^static guint nikon_tiff_table(unsigned char *data, const guint len, guint offset, ExifByteOrder bo,$/;"	f	file:
no_defaults	ui_bookmark.c	/^	gint no_defaults;$/;"	m	struct:_BookMarkData	file:
node	view_dir_tree.c	/^	FileData *node;$/;"	m	struct:_PathData	file:
noinst_DATA	Makefile	/^noinst_DATA = ui_icons.h$/;"	m
noinst_DATA	icons/Makefile	/^noinst_DATA = icons_inline.h$/;"	m
normal_imd	typedefs.h	/^	ImageWindow *normal_imd;$/;"	m	struct:_FullScreenData
normal_window	typedefs.h	/^	GtkWidget *normal_window;$/;"	m	struct:_FullScreenData
normalize_thumb	thumb.c	/^static gint normalize_thumb(gint *width, gint *height, gint max_w, gint max_h)$/;"	f	file:
notebook	info.h	/^	GtkWidget *notebook;$/;"	m	struct:_InfoData
notebook	print.c	/^	GtkWidget *notebook;$/;"	m	struct:_PrintWindow	file:
notify_data	ui_tree_edit.c	/^	gpointer notify_data;$/;"	m	struct:_AutoScrollData	file:
notify_func	ui_tree_edit.c	/^	gint (*notify_func)(GtkWidget *, gint, gint, gpointer);$/;"	m	struct:_AutoScrollData	file:
num	exif.h	/^	guint32 num;$/;"	m	struct:_ExifRational
num_to_text_char	layout_config.c	/^static char num_to_text_char(gint n)$/;"	f	file:
number	collect-table.c	/^	gint number;$/;"	m	struct:_ColumnData	file:
number	fullscreen.h	/^	gint number;$/;"	m	struct:_ScreenData
number	view_file_icon.c	/^	gint number;$/;"	m	struct:_ColumnData	file:
old_action	print.c	/^	struct sigaction old_action;$/;"	m	struct:_PipeError	typeref:struct:_PipeError::sigaction	file:
old_name	ui_tree_edit.h	/^	gchar *old_name;$/;"	m	struct:_TreeEditData
oldincludedir	Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	icons/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	icons/svg/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldpath	collect-io.c	/^	gchar *oldpath;$/;"	m	struct:_CollectManagerAction	file:
olympus_tiff_entry	format_olympus.c	/^static void olympus_tiff_entry(unsigned char *data, const guint len, guint offset, ExifByteOrder bo,$/;"	f	file:
olympus_tiff_table	format_olympus.c	/^static guint olympus_tiff_table(unsigned char *data, const guint len, guint offset, ExifByteOrder bo,$/;"	f	file:
open	typedefs.h	/^	GdkPixbuf *open;$/;"	m	struct:_PixmapFolders
opt_l	main.c	/^	gchar *opt_l;$/;"	m	struct:_RemoteCommandEntry	file:
opt_s	main.c	/^	gchar *opt_s;$/;"	m	struct:_RemoteCommandEntry	file:
orientation	print.c	/^	PaperOrientation orientation;$/;"	m	struct:_PaperSize	file:
osd_icons	image-overlay.c	/^static OSDIcon osd_icons[] = {$/;"	v	file:
output	print.c	/^	PrintOutput output;$/;"	m	struct:_PrintWindow	file:
output_custom	print.c	/^	gchar *output_custom;$/;"	m	struct:_PrintWindow	file:
output_format	print.c	/^	PrintFileFormat output_format;$/;"	m	struct:_PrintWindow	file:
output_path	print.c	/^	gchar *output_path;$/;"	m	struct:_PrintWindow	file:
overlay_buffer	pixbuf-renderer.h	/^	GdkPixmap *overlay_buffer;$/;"	m	struct:_PixbufRenderer
overlay_id	pan-types.h	/^	gint overlay_id;$/;"	m	struct:_PanWindow
overlay_list	pixbuf-renderer.h	/^	GList *overlay_list;$/;"	m	struct:_PixbufRenderer
ovl_info	image-overlay.c	/^	gint ovl_info;$/;"	m	struct:_OverlayStateData	file:
page_height	collect-table.c	/^static gint page_height(CollectTable *ct)$/;"	f	file:
page_height	view_file_icon.c	/^static gint page_height(ViewFileIcon *vfi)$/;"	f	file:
page_label	print.c	/^	GtkWidget *page_label;$/;"	m	struct:_PrintWindow	file:
pan_cache_fill	pan-view.c	/^static void pan_cache_fill(PanWindow *pw, const gchar *path)$/;"	f	file:
pan_cache_free	pan-view.c	/^static void pan_cache_free(PanWindow *pw)$/;"	f	file:
pan_cache_step	pan-view.c	/^static gint pan_cache_step(PanWindow *pw)$/;"	f	file:
pan_cache_step_done_cb	pan-view.c	/^static void pan_cache_step_done_cb(CacheLoader *cl, gint error, gpointer data)$/;"	f	file:
pan_cache_sync_date	pan-view.c	/^void pan_cache_sync_date(PanWindow *pw, GList *list)$/;"	f
pan_calendar_compute	pan-calendar.c	/^void pan_calendar_compute(PanWindow *pw, const gchar *path, gint *width, gint *height)$/;"	f
pan_calendar_update	pan-calendar.c	/^void pan_calendar_update(PanWindow *pw, PanItem *pi_day)$/;"	f
pan_close_cb	pan-view.c	/^static void pan_close_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
pan_copy_cb	pan-view.c	/^static void pan_copy_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
pan_date_compare	pan-util.c	/^gint pan_date_compare(time_t a, time_t b, PanDateLengthType length)$/;"	f
pan_date_to_time	pan-util.c	/^time_t pan_date_to_time(gint year, gint month, gint day)$/;"	f
pan_date_value	pan-util.c	/^gint pan_date_value(time_t d, PanDateLengthType length)$/;"	f
pan_date_value_string	pan-util.c	/^gchar *pan_date_value_string(time_t d, PanDateLengthType length)$/;"	f
pan_delete_cb	pan-view.c	/^static void pan_delete_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
pan_edit_cb	pan-view.c	/^static void pan_edit_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
pan_exif_date_toggle_cb	pan-view.c	/^static void pan_exif_date_toggle_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
pan_flower_build	pan-folder.c	/^static void pan_flower_build(PanWindow *pw, FlowerGroup *group, FlowerGroup *parent)$/;"	f	file:
pan_flower_compute	pan-folder.c	/^void pan_flower_compute(PanWindow *pw, const gchar *path,$/;"	f
pan_flower_group	pan-folder.c	/^static FlowerGroup *pan_flower_group(PanWindow *pw, const gchar *path, gint x, gint y)$/;"	f	file:
pan_flower_move	pan-folder.c	/^static void pan_flower_move(FlowerGroup *group, gint x, gint y)$/;"	f	file:
pan_flower_position	pan-folder.c	/^static void pan_flower_position(FlowerGroup *group, FlowerGroup *parent,$/;"	f	file:
pan_flower_size	pan-folder.c	/^static void pan_flower_size(PanWindow *pw, gint *width, gint *height)$/;"	f	file:
pan_folder_tree_compute	pan-folder.c	/^void pan_folder_tree_compute(PanWindow *pw, const gchar *path, gint *width, gint *height)$/;"	f
pan_folder_tree_path	pan-folder.c	/^static void pan_folder_tree_path(PanWindow *pw, const gchar *path,$/;"	f	file:
pan_fullscreen_cb	pan-view.c	/^static void pan_fullscreen_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
pan_fullscreen_stop_func	pan-view.c	/^static void pan_fullscreen_stop_func(FullScreenData *fs, gpointer data)$/;"	f	file:
pan_fullscreen_toggle	pan-view.c	/^static void pan_fullscreen_toggle(PanWindow *pw, gint force_off)$/;"	f	file:
pan_grid_build	pan-view.c	/^static void pan_grid_build(PanWindow *pw, gint width, gint height, gint grid_size)$/;"	f	file:
pan_grid_clear	pan-view.c	/^static void pan_grid_clear(PanWindow *pw)$/;"	f	file:
pan_grid_compute	pan-grid.c	/^void pan_grid_compute(PanWindow *pw, const gchar *path, gint *width, gint *height)$/;"	f
pan_image_set_buttons	pan-view.c	/^static void pan_image_set_buttons(PanWindow *pw, ImageWindow *imd)$/;"	f	file:
pan_info_add_exif	pan-view.c	/^static void pan_info_add_exif(PanTextAlignment *ta, FileData *fd)$/;"	f	file:
pan_info_cb	pan-view.c	/^static void pan_info_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
pan_info_toggle_exif_cb	pan-view.c	/^static void pan_info_toggle_exif_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
pan_info_toggle_image_cb	pan-view.c	/^static void pan_info_toggle_image_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
pan_info_update	pan-view.c	/^static void pan_info_update(PanWindow *pw, PanItem *pi)$/;"	f	file:
pan_is_ignored	pan-util.c	/^gint pan_is_ignored(const gchar *s, gint ignore_symlinks)$/;"	f
pan_is_link_loop	pan-util.c	/^gint pan_is_link_loop(const gchar *s)$/;"	f
pan_item_added	pan-item.c	/^void pan_item_added(PanWindow *pw, PanItem *pi)$/;"	f
pan_item_box_draw	pan-item.c	/^gint pan_item_box_draw(PanWindow *pw, PanItem *pi, GdkPixbuf *pixbuf, PixbufRenderer *pr,$/;"	f
pan_item_box_new	pan-item.c	/^PanItem *pan_item_box_new(PanWindow *pw, FileData *fd, gint x, gint y, gint width, gint height,$/;"	f
pan_item_box_shadow	pan-item.c	/^void pan_item_box_shadow(PanItem *pi, gint offset, gint fade)$/;"	f
pan_item_find_by_coord	pan-item.c	/^PanItem *pan_item_find_by_coord(PanWindow *pw, PanItemType type,$/;"	f
pan_item_find_by_coord_l	pan-item.c	/^static PanItem *pan_item_find_by_coord_l(GList *list, PanItemType type, gint x, gint y, const gchar *key)$/;"	f	file:
pan_item_find_by_key	pan-item.c	/^PanItem *pan_item_find_by_key(PanWindow *pw, PanItemType type, const gchar *key)$/;"	f
pan_item_find_by_path	pan-item.c	/^GList *pan_item_find_by_path(PanWindow *pw, PanItemType type, const gchar *path,$/;"	f
pan_item_find_by_path_l	pan-item.c	/^static GList *pan_item_find_by_path_l(GList *list, GList *search_list,$/;"	f	file:
pan_item_free	pan-item.c	/^void pan_item_free(PanItem *pi)$/;"	f
pan_item_image_draw	pan-item.c	/^gint pan_item_image_draw(PanWindow *pw, PanItem *pi, GdkPixbuf *pixbuf, PixbufRenderer *pr,$/;"	f
pan_item_image_find_size	pan-item.c	/^static void pan_item_image_find_size(PanWindow *pw, PanItem *pi, gint w, gint h)$/;"	f	file:
pan_item_image_new	pan-item.c	/^PanItem *pan_item_image_new(PanWindow *pw, FileData *fd, gint x, gint y, gint w, gint h)$/;"	f
pan_item_remove	pan-item.c	/^void pan_item_remove(PanWindow *pw, PanItem *pi)$/;"	f
pan_item_set_key	pan-item.c	/^void pan_item_set_key(PanItem *pi, const gchar *key)$/;"	f
pan_item_size_by_item	pan-item.c	/^void pan_item_size_by_item(PanItem *pi, PanItem *child, gint border)$/;"	f
pan_item_size_coordinates	pan-item.c	/^void pan_item_size_coordinates(PanItem *pi, gint border, gint *w, gint *h)$/;"	f
pan_item_text_compute_size	pan-item.c	/^static void pan_item_text_compute_size(PanItem *pi, GtkWidget *widget)$/;"	f	file:
pan_item_text_draw	pan-item.c	/^gint pan_item_text_draw(PanWindow *pw, PanItem *pi, GdkPixbuf *pixbuf, PixbufRenderer *pr,$/;"	f
pan_item_text_layout	pan-item.c	/^static PangoLayout *pan_item_text_layout(PanItem *pi, GtkWidget *widget)$/;"	f	file:
pan_item_text_new	pan-item.c	/^PanItem *pan_item_text_new(PanWindow *pw, gint x, gint y, const gchar *text,$/;"	f
pan_item_thumb_draw	pan-item.c	/^gint pan_item_thumb_draw(PanWindow *pw, PanItem *pi, GdkPixbuf *pixbuf, PixbufRenderer *pr,$/;"	f
pan_item_thumb_new	pan-item.c	/^PanItem *pan_item_thumb_new(PanWindow *pw, FileData *fd, gint x, gint y)$/;"	f
pan_item_tri_border	pan-item.c	/^void pan_item_tri_border(PanItem *pi, gint borders,$/;"	f
pan_item_tri_draw	pan-item.c	/^gint pan_item_tri_draw(PanWindow *pw, PanItem *pi, GdkPixbuf *pixbuf, PixbufRenderer *pr,$/;"	f
pan_item_tri_new	pan-item.c	/^PanItem *pan_item_tri_new(PanWindow *pw, FileData *fd, gint x, gint y, gint width, gint height,$/;"	f
pan_layout_compute	pan-view.c	/^static void pan_layout_compute(PanWindow *pw, const gchar *path,$/;"	f	file:
pan_layout_intersect	pan-view.c	/^GList *pan_layout_intersect(PanWindow *pw, gint x, gint y, gint width, gint height)$/;"	f
pan_layout_intersect_l	pan-view.c	/^static GList *pan_layout_intersect_l(GList *list, GList *item_list,$/;"	f	file:
pan_layout_resize	pan-view.c	/^void pan_layout_resize(PanWindow *pw)$/;"	f
pan_layout_set_path	pan-view.c	/^static void pan_layout_set_path(PanWindow *pw, const gchar *path)$/;"	f	file:
pan_layout_update	pan-view.c	/^static void pan_layout_update(PanWindow *pw)$/;"	f	file:
pan_layout_update_idle	pan-view.c	/^static void pan_layout_update_idle(PanWindow *pw)$/;"	f	file:
pan_layout_update_idle_cb	pan-view.c	/^static gint pan_layout_update_idle_cb(gpointer data)$/;"	f	file:
pan_list_tree	pan-util.c	/^GList *pan_list_tree(const gchar *path, SortType sort, gint ascend,$/;"	f
pan_menu_click_path	pan-view.c	/^static const gchar *pan_menu_click_path(PanWindow *pw)$/;"	f	file:
pan_move_cb	pan-view.c	/^static void pan_move_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
pan_new_window_cb	pan-view.c	/^static void pan_new_window_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
pan_popup_menu	pan-view.c	/^static GtkWidget *pan_popup_menu(PanWindow *pw)$/;"	f	file:
pan_queue_add	pan-view.c	/^static void pan_queue_add(PanWindow *pw, PanItem *pi)$/;"	f	file:
pan_queue_image_done_cb	pan-view.c	/^static void pan_queue_image_done_cb(ImageLoader *il, gpointer data)$/;"	f	file:
pan_queue_step	pan-view.c	/^static gint pan_queue_step(PanWindow *pw)$/;"	f	file:
pan_queue_thumb_done_cb	pan-view.c	/^static void pan_queue_thumb_done_cb(ThumbLoader *tl, gpointer data)$/;"	f	file:
pan_rename_cb	pan-view.c	/^static void pan_rename_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
pan_search_activate	pan-view.c	/^static void pan_search_activate(PanWindow *pw)$/;"	f	file:
pan_search_activate_cb	pan-view.c	/^static void pan_search_activate_cb(const gchar *text, gpointer data)$/;"	f	file:
pan_search_by_date	pan-view.c	/^static gint pan_search_by_date(PanWindow *pw, const gchar *text)$/;"	f	file:
pan_search_by_date_val	pan-view.c	/^static GList *pan_search_by_date_val(PanWindow *pw, PanItemType type,$/;"	f	file:
pan_search_by_partial	pan-view.c	/^static gint pan_search_by_partial(PanWindow *pw, const gchar *text)$/;"	f	file:
pan_search_by_path	pan-view.c	/^static gint pan_search_by_path(PanWindow *pw, const gchar *path)$/;"	f	file:
pan_search_status	pan-view.c	/^static void pan_search_status(PanWindow *pw, const gchar *text)$/;"	f	file:
pan_search_toggle_cb	pan-view.c	/^static void pan_search_toggle_cb(GtkWidget *button, gpointer data)$/;"	f	file:
pan_search_toggle_visible	pan-view.c	/^static void pan_search_toggle_visible(PanWindow *pw, gint enable)$/;"	f	file:
pan_text_alignment_add	pan-item.c	/^PanItem *pan_text_alignment_add(PanTextAlignment *ta, const gchar *label, const gchar *text)$/;"	f
pan_text_alignment_calc	pan-item.c	/^void pan_text_alignment_calc(PanTextAlignment *ta, PanItem *box)$/;"	f
pan_text_alignment_free	pan-item.c	/^void pan_text_alignment_free(PanTextAlignment *ta)$/;"	f
pan_text_alignment_new	pan-item.c	/^PanTextAlignment *pan_text_alignment_new(PanWindow *pw, gint x, gint y, const gchar *key)$/;"	f
pan_timeline_compute	pan-timeline.c	/^void pan_timeline_compute(PanWindow *pw, const gchar *path, gint *width, gint *height)$/;"	f
pan_warning	pan-view.c	/^static gint pan_warning(const gchar *path)$/;"	f	file:
pan_warning_folder	pan-view.c	/^static void pan_warning_folder(const gchar *path, GtkWidget *parent)$/;"	f	file:
pan_warning_hide_cb	pan-view.c	/^static void pan_warning_hide_cb(GtkWidget *button, gpointer data)$/;"	f	file:
pan_warning_ok_cb	pan-view.c	/^static void pan_warning_ok_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
pan_window_close	pan-view.c	/^static void pan_window_close(PanWindow *pw)$/;"	f	file:
pan_window_delete_cb	pan-view.c	/^static gint pan_window_delete_cb(GtkWidget *w, GdkEventAny *event, gpointer data)$/;"	f	file:
pan_window_dispose_tile_cb	pan-view.c	/^static void pan_window_dispose_tile_cb(PixbufRenderer *pr, gint x, gint y,$/;"	f	file:
pan_window_dnd_init	pan-view.c	/^static void pan_window_dnd_init(PanWindow *pw)$/;"	f	file:
pan_window_entry_activate_cb	pan-view.c	/^static void pan_window_entry_activate_cb(const gchar *new_text, gpointer data)$/;"	f	file:
pan_window_entry_change_cb	pan-view.c	/^static void pan_window_entry_change_cb(GtkWidget *combo, gpointer data)$/;"	f	file:
pan_window_get_dnd_data	pan-view.c	/^static void pan_window_get_dnd_data(GtkWidget *widget, GdkDragContext *context,$/;"	f	file:
pan_window_image_scroll_notify_cb	pan-view.c	/^static void pan_window_image_scroll_notify_cb(PixbufRenderer *pr, gpointer data)$/;"	f	file:
pan_window_image_zoom_cb	pan-view.c	/^static void pan_window_image_zoom_cb(PixbufRenderer *pr, gdouble zoom, gpointer data)$/;"	f	file:
pan_window_items_free	pan-view.c	/^static void pan_window_items_free(PanWindow *pw)$/;"	f	file:
pan_window_key_press_cb	pan-view.c	/^static gint pan_window_key_press_cb(GtkWidget *widget, GdkEventKey *event, gpointer data)$/;"	f	file:
pan_window_layout_change_cb	pan-view.c	/^static void pan_window_layout_change_cb(GtkWidget *combo, gpointer data)$/;"	f	file:
pan_window_layout_size_cb	pan-view.c	/^static void pan_window_layout_size_cb(GtkWidget *combo, gpointer data)$/;"	f	file:
pan_window_list	pan-view.c	/^static GList *pan_window_list = NULL;$/;"	v	file:
pan_window_menu_pos_cb	pan-view.c	/^static void pan_window_menu_pos_cb(GtkMenu *menu, gint *x, gint *y, gboolean *push_in, gpointer data)$/;"	f	file:
pan_window_message	pan-view.c	/^static void pan_window_message(PanWindow *pw, const gchar *text)$/;"	f	file:
pan_window_new	pan-view.c	/^void pan_window_new(const gchar *path)$/;"	f
pan_window_new_real	pan-view.c	/^static void pan_window_new_real(const gchar *path)$/;"	f	file:
pan_window_request_tile_cb	pan-view.c	/^static gint pan_window_request_tile_cb(PixbufRenderer *pr, gint x, gint y,$/;"	f	file:
pan_window_scrollbar_h_value_cb	pan-view.c	/^static void pan_window_scrollbar_h_value_cb(GtkRange *range, gpointer data)$/;"	f	file:
pan_window_scrollbar_v_value_cb	pan-view.c	/^static void pan_window_scrollbar_v_value_cb(GtkRange *range, gpointer data)$/;"	f	file:
pan_window_set_dnd_data	pan-view.c	/^static void pan_window_set_dnd_data(GtkWidget *widget, GdkDragContext *context,$/;"	f	file:
pan_window_zoom_limit	pan-view.c	/^static void pan_window_zoom_limit(PanWindow *pw)$/;"	f	file:
pan_zoom_1_1_cb	pan-view.c	/^static void pan_zoom_1_1_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
pan_zoom_in_cb	pan-view.c	/^static void pan_zoom_in_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
pan_zoom_out_cb	pan-view.c	/^static void pan_zoom_out_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
paper_height	print.c	/^	gdouble paper_height;$/;"	m	struct:_PrintWindow	file:
paper_height_spin	print.c	/^	GtkWidget *paper_height_spin;$/;"	m	struct:_PrintWindow	file:
paper_menu	print.c	/^	GtkWidget *paper_menu;$/;"	m	struct:_PrintWindow	file:
paper_orientation	print.c	/^	gint paper_orientation;$/;"	m	struct:_PrintWindow	file:
paper_orientation_menu	print.c	/^	GtkWidget *paper_orientation_menu;$/;"	m	struct:_PrintWindow	file:
paper_size	print.c	/^	gint paper_size;$/;"	m	struct:_PrintWindow	file:
paper_unit_default	print.c	/^static PaperUnits paper_unit_default(void)$/;"	f	file:
paper_units	print.c	/^	gint paper_units;$/;"	m	struct:_PrintWindow	file:
paper_units_menu	print.c	/^	GtkWidget *paper_units_menu;$/;"	m	struct:_PrintWindow	file:
paper_width	print.c	/^	gdouble paper_width;$/;"	m	struct:_PrintWindow	file:
paper_width_spin	print.c	/^	GtkWidget *paper_width_spin;$/;"	m	struct:_PrintWindow	file:
parent	cellrenderericon.h	/^	GtkCellRenderer parent;$/;"	m	struct:_GQvCellRendererIcon
parent	typedefs.h	/^	GdkPixbuf *parent;$/;"	m	struct:_PixmapFolders
parent	ui_bookmark.c	/^	gchar *parent;$/;"	m	struct:_BookButtonData	file:
parent	ui_misc.c	/^	GtkWidget *parent;$/;"	m	struct:_SizerData	file:
parent_class	cellrenderericon.c	/^static gpointer parent_class;$/;"	v	file:
parent_class	cellrenderericon.h	/^	GtkCellRendererClass parent_class;$/;"	m	struct:_GQvCellRendererIconClass
parent_class	pixbuf-renderer.c	/^static GtkEventBoxClass *parent_class = NULL;$/;"	v	file:
parent_class	pixbuf-renderer.h	/^	GtkEventBoxClass parent_class;$/;"	m	struct:_PixbufRendererClass
parent_window	pixbuf-renderer.h	/^	GtkWidget *parent_window;	\/* resize parent_window when image dimensions change *\/$/;"	m	struct:_PixbufRenderer
parse_command_line	main.c	/^static void parse_command_line(int argc, char *argv[], gchar **path, gchar **file,$/;"	f	file:
parse_command_line_add_dir	main.c	/^static void parse_command_line_add_dir(const gchar *dir, gchar **path, gchar **file,$/;"	f	file:
parse_command_line_add_file	main.c	/^static void parse_command_line_add_file(const gchar *file_path, gchar **path, gchar **file,$/;"	f	file:
parse_command_line_process_dir	main.c	/^static void parse_command_line_process_dir(const gchar *dir, gchar **path, gchar **file,$/;"	f	file:
parse_command_line_process_file	main.c	/^static void parse_command_line_process_file(const gchar *file_path, gchar **path, gchar **file,$/;"	f	file:
parse_out_relatives	ui_fileops.c	/^void parse_out_relatives(gchar *path)$/;"	f
parts_list	view_dir_tree.c	/^static GList *parts_list(const gchar *path)$/;"	f	file:
parts_list_add_node_points	view_dir_tree.c	/^static GList *parts_list_add_node_points(ViewDirTree *vdt, GList *list)$/;"	f	file:
parts_list_free	view_dir_tree.c	/^static void parts_list_free(GList *list)$/;"	f	file:
pass	thumb_standard.c	/^	gint pass;$/;"	m	struct:_TMaintMove	file:
path	bar_exif.c	/^	gchar *path;$/;"	m	struct:_ExifBar	file:
path	bar_info.c	/^	gchar *path;$/;"	m	struct:_BarInfoData	file:
path	cache-loader.h	/^	gchar *path;$/;"	m	struct:_CacheLoader
path	cache.h	/^	gchar *path;$/;"	m	struct:_CacheData
path	collect-io.c	/^	gchar *path;$/;"	m	struct:_CollectManagerEntry	file:
path	dupe.h	/^	gchar *path;$/;"	m	struct:_DupeItem
path	info.h	/^	const gchar *path;$/;"	m	struct:_InfoData
path	pan-types.h	/^	gchar *path;$/;"	m	struct:_PanWindow
path	remote.h	/^	gchar *path;$/;"	m	struct:_RemoteConnection
path	thumb_standard.c	/^	gchar *path;$/;"	m	struct:_ThumbValidate	file:
path	typedefs.h	/^	gchar *path;$/;"	m	struct:_CollectInfo
path	typedefs.h	/^	gchar *path;$/;"	m	struct:_CollectionData
path	typedefs.h	/^	gchar *path;$/;"	m	struct:_FileData
path	typedefs.h	/^	gchar *path;$/;"	m	struct:_ImageLoader
path	typedefs.h	/^	gchar *path;$/;"	m	struct:_LayoutWindow
path	typedefs.h	/^	gchar *path;$/;"	m	struct:_ThumbLoader
path	typedefs.h	/^	gchar *path;$/;"	m	struct:_ViewDirList
path	typedefs.h	/^	gchar *path;$/;"	m	struct:_ViewDirTree
path	typedefs.h	/^	gchar *path;$/;"	m	struct:_ViewFileIcon
path	typedefs.h	/^	gchar *path;$/;"	m	struct:_ViewFileList
path	ui_bookmark.c	/^	gchar *path;$/;"	m	struct:_BookButtonData	file:
path	ui_pathsel.c	/^	gchar *path;$/;"	m	struct:_DestDel_Data	file:
path	ui_pathsel.c	/^	gchar *path;$/;"	m	struct:_Dest_Data	file:
path	ui_tree_edit.h	/^	GtkTreePath *path;$/;"	m	struct:_TreeEditData
path_entry	pan-types.h	/^	GtkWidget *path_entry;$/;"	m	struct:_PanWindow
path_entry	print.c	/^	GtkWidget *path_entry;$/;"	m	struct:_PrintWindow	file:
path_entry	search.c	/^	GtkWidget *path_entry;$/;"	m	struct:_SearchData	file:
path_entry	typedefs.h	/^	GtkWidget *path_entry;$/;"	m	struct:_LayoutWindow
path_entry	ui_bookmark.c	/^	GtkWidget *path_entry;$/;"	m	struct:_BookPropData	file:
path_format_menu	print.c	/^	GtkWidget *path_format_menu;$/;"	m	struct:_PrintWindow	file:
path_from_utf8	ui_fileops.c	/^gchar *path_from_utf8(const gchar *utf8)$/;"	f
path_list	typedefs.h	/^	GList *path_list;$/;"	m	struct:_SlideShowData
path_list	ui_fileops.c	/^gint path_list(const gchar *path, GList **files, GList **dirs)$/;"	f
path_list_copy	ui_fileops.c	/^GList *path_list_copy(GList *list)$/;"	f
path_list_filter	filelist.c	/^GList *path_list_filter(GList *list, gint is_dir_list)$/;"	f
path_list_free	ui_fileops.c	/^void path_list_free(GList *list)$/;"	f
path_list_lstat	ui_fileops.c	/^gint path_list_lstat(const gchar *path, GList **files, GList **dirs)$/;"	f
path_list_real	ui_fileops.c	/^static gint path_list_real(const gchar *path, GList **files, GList **dirs,$/;"	f	file:
path_list_recursive	filelist.c	/^GList *path_list_recursive(const gchar *path)$/;"	f
path_list_recursive_append	filelist.c	/^static void path_list_recursive_append(GList **list, GList *dirs)$/;"	f	file:
path_list_sort	filelist.c	/^GList *path_list_sort(GList *list)$/;"	f
path_list_sort_cb	filelist.c	/^static gint path_list_sort_cb(gconstpointer a, gconstpointer b)$/;"	f	file:
path_selection_add_filter	ui_pathsel.c	/^void path_selection_add_filter(GtkWidget *entry, const gchar *filter, const gchar *description, gint set)$/;"	f
path_selection_add_select_func	ui_pathsel.c	/^void path_selection_add_select_func(GtkWidget *entry,$/;"	f
path_selection_clear_filter	ui_pathsel.c	/^void path_selection_clear_filter(GtkWidget *entry)$/;"	f
path_selection_new	ui_pathsel.c	/^GtkWidget *path_selection_new(const gchar *path, GtkWidget *entry)$/;"	f
path_selection_new_with_files	ui_pathsel.c	/^GtkWidget *path_selection_new_with_files(GtkWidget *entry, const gchar *path,$/;"	f
path_selection_sync_to_entry	ui_pathsel.c	/^void path_selection_sync_to_entry(GtkWidget *entry)$/;"	f
path_to_utf8	ui_fileops.c	/^gchar *path_to_utf8(const gchar *path)$/;"	f
paused	typedefs.h	/^	gint paused;$/;"	m	struct:_SlideShowData
percent_done	typedefs.h	/^	gdouble percent_done;$/;"	m	struct:_ThumbLoader
pf	typedefs.h	/^	PixmapFolders *pf;$/;"	m	struct:_ViewDirList
pf	typedefs.h	/^	PixmapFolders *pf;$/;"	m	struct:_ViewDirTree
pipe_handler_check	print.c	/^static gint pipe_handler_check(PipeError *pe)$/;"	f	file:
pipe_handler_data	print.c	/^static PipeError *pipe_handler_data = NULL;$/;"	v	file:
pipe_handler_error	print.c	/^static sig_atomic_t pipe_handler_error = FALSE;$/;"	v	file:
pipe_handler_free	print.c	/^static void pipe_handler_free(PipeError *pe)$/;"	f	file:
pipe_handler_new	print.c	/^static PipeError *pipe_handler_new(void)$/;"	f	file:
pipe_handler_sigpipe_cb	print.c	/^static void pipe_handler_sigpipe_cb(int fd)$/;"	f	file:
pixbuf	cellrenderericon.h	/^	GdkPixbuf *pixbuf;$/;"	m	struct:_GQvCellRendererIcon
pixbuf	color-man.h	/^	GdkPixbuf *pixbuf;$/;"	m	struct:_ColorMan
pixbuf	dupe.h	/^	GdkPixbuf *pixbuf;$/;"	m	struct:_DupeItem
pixbuf	pan-types.h	/^	GdkPixbuf *pixbuf;$/;"	m	struct:_PanItem
pixbuf	pixbuf-renderer.c	/^	GdkPixbuf *pixbuf;	\/* pixbuf area for zooming *\/$/;"	m	struct:_ImageTile	file:
pixbuf	pixbuf-renderer.c	/^	GdkPixbuf *pixbuf;$/;"	m	struct:_OverlayData	file:
pixbuf	pixbuf-renderer.c	/^	GdkPixbuf *pixbuf;$/;"	m	struct:_SourceTile	file:
pixbuf	pixbuf-renderer.h	/^	GdkPixbuf *pixbuf;$/;"	m	struct:_PixbufRenderer
pixbuf	thumb_standard.h	/^	GdkPixbuf *pixbuf;$/;"	m	struct:_ThumbLoaderStd
pixbuf	typedefs.h	/^	GdkPixbuf *pixbuf;	\/* contains final (scaled) image when done *\/$/;"	m	struct:_ThumbLoader
pixbuf	typedefs.h	/^	GdkPixbuf *pixbuf;$/;"	m	struct:_CollectInfo
pixbuf	typedefs.h	/^	GdkPixbuf *pixbuf;$/;"	m	struct:_FileData
pixbuf	typedefs.h	/^	GdkPixbuf *pixbuf;$/;"	m	struct:_ImageLoader
pixbuf_copy_block	pixbuf_util.c	/^static void pixbuf_copy_block(guchar *src, gint src_row_stride, gint w, gint h,$/;"	f	file:
pixbuf_copy_block_rotate	pixbuf_util.c	/^static void pixbuf_copy_block_rotate(guchar *src, gint src_row_stride, gint x, gint y,$/;"	f	file:
pixbuf_copy_font	pixbuf_util.c	/^static void pixbuf_copy_font(GdkPixbuf *src, gint sx, gint sy,$/;"	f	file:
pixbuf_copy_mirror	pixbuf_util.c	/^GdkPixbuf *pixbuf_copy_mirror(GdkPixbuf *src, gint mirror, gint flip)$/;"	f
pixbuf_copy_rotate_90	pixbuf_util.c	/^GdkPixbuf *pixbuf_copy_rotate_90(GdkPixbuf *src, gint counter_clockwise)$/;"	f
pixbuf_desaturate_rect	pixbuf_util.c	/^void pixbuf_desaturate_rect(GdkPixbuf *pb,$/;"	f
pixbuf_draw_border	dnd.c	/^static void pixbuf_draw_border(GdkPixbuf *pixbuf, gint w, gint h)$/;"	f	file:
pixbuf_draw_fade_linear	pixbuf_util.c	/^static void pixbuf_draw_fade_linear(guchar *p_pix, gint prs, gint p_alpha,$/;"	f	file:
pixbuf_draw_fade_radius	pixbuf_util.c	/^static void pixbuf_draw_fade_radius(guchar *p_pix, gint prs, gint p_alpha,$/;"	f	file:
pixbuf_draw_layout	pixbuf_util.c	/^void pixbuf_draw_layout(GdkPixbuf *pixbuf, PangoLayout *layout, GtkWidget *widget,$/;"	f
pixbuf_draw_line	pixbuf_util.c	/^void pixbuf_draw_line(GdkPixbuf *pb,$/;"	f
pixbuf_draw_rect	dnd.c	/^static void pixbuf_draw_rect(GdkPixbuf *pixbuf, gint x, gint y, gint w, gint h, guint8 val)$/;"	f	file:
pixbuf_draw_rect	pixbuf_util.c	/^void pixbuf_draw_rect(GdkPixbuf *pb,$/;"	f
pixbuf_draw_rect_fill	pixbuf_util.c	/^void pixbuf_draw_rect_fill(GdkPixbuf *pb,$/;"	f
pixbuf_draw_shadow	pixbuf_util.c	/^void pixbuf_draw_shadow(GdkPixbuf *pb,$/;"	f
pixbuf_draw_triangle	pixbuf_util.c	/^void pixbuf_draw_triangle(GdkPixbuf *pb,$/;"	f
pixbuf_inline	pixbuf_util.c	/^GdkPixbuf *pixbuf_inline(const gchar *key)$/;"	f
pixbuf_pixel_set	pixbuf_util.c	/^void pixbuf_pixel_set(GdkPixbuf *pb, gint x, gint y, gint r, gint g, gint b, gint a)$/;"	f
pixbuf_renderer_area_changed	pixbuf-renderer.c	/^void pixbuf_renderer_area_changed(PixbufRenderer *pr, gint x, gint y, gint width, gint height)$/;"	f
pixbuf_renderer_class_init	pixbuf-renderer.c	/^static void pixbuf_renderer_class_init(PixbufRendererClass *class)$/;"	f	file:
pixbuf_renderer_expose	pixbuf-renderer.c	/^static gint pixbuf_renderer_expose(GtkWidget *widget, GdkEventExpose *event)$/;"	f	file:
pixbuf_renderer_finalize	pixbuf-renderer.c	/^static void pixbuf_renderer_finalize(GObject *object)$/;"	f	file:
pixbuf_renderer_get_image_size	pixbuf-renderer.c	/^gint pixbuf_renderer_get_image_size(PixbufRenderer *pr, gint *width, gint *height)$/;"	f
pixbuf_renderer_get_parent	pixbuf-renderer.c	/^GtkWindow *pixbuf_renderer_get_parent(PixbufRenderer *pr)$/;"	f
pixbuf_renderer_get_pixbuf	pixbuf-renderer.c	/^GdkPixbuf *pixbuf_renderer_get_pixbuf(PixbufRenderer *pr)$/;"	f
pixbuf_renderer_get_property	pixbuf-renderer.c	/^static void pixbuf_renderer_get_property(GObject *object, guint prop_id,$/;"	f	file:
pixbuf_renderer_get_scaled_size	pixbuf-renderer.c	/^gint pixbuf_renderer_get_scaled_size(PixbufRenderer *pr, gint *width, gint *height)$/;"	f
pixbuf_renderer_get_tiles	pixbuf-renderer.c	/^gint pixbuf_renderer_get_tiles(PixbufRenderer *pr)$/;"	f
pixbuf_renderer_get_type	pixbuf-renderer.c	/^GType pixbuf_renderer_get_type(void)$/;"	f
pixbuf_renderer_get_virtual_rect	pixbuf-renderer.c	/^gint pixbuf_renderer_get_virtual_rect(PixbufRenderer *pr, GdkRectangle *rect)$/;"	f
pixbuf_renderer_get_visible_rect	pixbuf-renderer.c	/^gint pixbuf_renderer_get_visible_rect(PixbufRenderer *pr, GdkRectangle *rect)$/;"	f
pixbuf_renderer_init	pixbuf-renderer.c	/^static void pixbuf_renderer_init(PixbufRenderer *pr)$/;"	f	file:
pixbuf_renderer_move	pixbuf-renderer.c	/^void pixbuf_renderer_move(PixbufRenderer *pr, PixbufRenderer *source)$/;"	f
pixbuf_renderer_new	pixbuf-renderer.c	/^PixbufRenderer* pixbuf_renderer_new(void)$/;"	f
pixbuf_renderer_overlay_add	pixbuf-renderer.c	/^gint pixbuf_renderer_overlay_add(PixbufRenderer *pr, GdkPixbuf *pixbuf, gint x, gint y,$/;"	f
pixbuf_renderer_overlay_get	pixbuf-renderer.c	/^gint pixbuf_renderer_overlay_get(PixbufRenderer *pr, gint id, GdkPixbuf **pixbuf, gint *x, gint *y)$/;"	f
pixbuf_renderer_overlay_remove	pixbuf-renderer.c	/^void pixbuf_renderer_overlay_remove(PixbufRenderer *pr, gint id)$/;"	f
pixbuf_renderer_overlay_set	pixbuf-renderer.c	/^void pixbuf_renderer_overlay_set(PixbufRenderer *pr, gint id, GdkPixbuf *pixbuf, gint x, gint y)$/;"	f
pixbuf_renderer_paint	pixbuf-renderer.c	/^static void pixbuf_renderer_paint(PixbufRenderer *pr, GdkRectangle *area)$/;"	f	file:
pixbuf_renderer_scroll	pixbuf-renderer.c	/^void pixbuf_renderer_scroll(PixbufRenderer *pr, gint x, gint y)$/;"	f
pixbuf_renderer_scroll_to_point	pixbuf-renderer.c	/^void pixbuf_renderer_scroll_to_point(PixbufRenderer *pr, gint x, gint y,$/;"	f
pixbuf_renderer_set_black	pixbuf-renderer.c	/^void pixbuf_renderer_set_black(PixbufRenderer *pr, gint black)$/;"	f
pixbuf_renderer_set_color	pixbuf-renderer.c	/^void pixbuf_renderer_set_color(PixbufRenderer *pr, GdkColor *color)$/;"	f
pixbuf_renderer_set_parent	pixbuf-renderer.c	/^void pixbuf_renderer_set_parent(PixbufRenderer *pr, GtkWindow *window)$/;"	f
pixbuf_renderer_set_pixbuf	pixbuf-renderer.c	/^void pixbuf_renderer_set_pixbuf(PixbufRenderer *pr, GdkPixbuf *pixbuf, gdouble zoom)$/;"	f
pixbuf_renderer_set_property	pixbuf-renderer.c	/^static void pixbuf_renderer_set_property(GObject *object, guint prop_id,$/;"	f	file:
pixbuf_renderer_set_tiles	pixbuf-renderer.c	/^void pixbuf_renderer_set_tiles(PixbufRenderer *pr, gint width, gint height,$/;"	f
pixbuf_renderer_set_tiles_size	pixbuf-renderer.c	/^void pixbuf_renderer_set_tiles_size(PixbufRenderer *pr, gint width, gint height)$/;"	f
pixbuf_renderer_zoom_adjust	pixbuf-renderer.c	/^void pixbuf_renderer_zoom_adjust(PixbufRenderer *pr, gdouble increment)$/;"	f
pixbuf_renderer_zoom_adjust_at_point	pixbuf-renderer.c	/^void pixbuf_renderer_zoom_adjust_at_point(PixbufRenderer *pr, gdouble increment, gint x, gint y)$/;"	f
pixbuf_renderer_zoom_get	pixbuf-renderer.c	/^gdouble pixbuf_renderer_zoom_get(PixbufRenderer *pr)$/;"	f
pixbuf_renderer_zoom_get_scale	pixbuf-renderer.c	/^gdouble pixbuf_renderer_zoom_get_scale(PixbufRenderer *pr)$/;"	f
pixbuf_renderer_zoom_set	pixbuf-renderer.c	/^void pixbuf_renderer_zoom_set(PixbufRenderer *pr, gdouble zoom)$/;"	f
pixbuf_renderer_zoom_set_limits	pixbuf-renderer.c	/^void pixbuf_renderer_zoom_set_limits(PixbufRenderer *pr, gdouble min, gdouble max)$/;"	f
pixbuf_set_rect	pixbuf_util.c	/^void pixbuf_set_rect(GdkPixbuf *pb,$/;"	f
pixbuf_set_rect_fill	pixbuf_util.c	/^void pixbuf_set_rect_fill(GdkPixbuf *pb,$/;"	f
pixbuf_to_file_as_jpg	pixbuf_util.c	/^gboolean pixbuf_to_file_as_jpg(GdkPixbuf *pixbuf, const gchar *filename, gint quality)$/;"	f
pixbuf_to_file_as_png	pixbuf_util.c	/^gboolean pixbuf_to_file_as_png (GdkPixbuf *pixbuf, const char *filename)$/;"	f
pixmap	pixbuf-renderer.c	/^	GdkPixmap *pixmap;	\/* off screen buffer *\/$/;"	m	struct:_ImageTile	file:
pixmap_calc_size	pixbuf-renderer.c	/^static gint pixmap_calc_size(GdkPixmap *pixmap)$/;"	f	file:
pkgdatadir	Makefile	/^pkgdatadir = $(datadir)\/gqview$/;"	m
pkgdatadir	icons/Makefile	/^pkgdatadir = $(datadir)\/gqview$/;"	m
pkgdatadir	icons/svg/Makefile	/^pkgdatadir = $(datadir)\/gqview$/;"	m
pkgincludedir	Makefile	/^pkgincludedir = $(includedir)\/gqview$/;"	m
pkgincludedir	icons/Makefile	/^pkgincludedir = $(includedir)\/gqview$/;"	m
pkgincludedir	icons/svg/Makefile	/^pkgincludedir = $(includedir)\/gqview$/;"	m
pkglibdir	Makefile	/^pkglibdir = $(libdir)\/gqview$/;"	m
pkglibdir	icons/Makefile	/^pkglibdir = $(libdir)\/gqview$/;"	m
pkglibdir	icons/svg/Makefile	/^pkglibdir = $(libdir)\/gqview$/;"	m
place_dialogs_under_mouse	globals.c	/^gint place_dialogs_under_mouse = FALSE;$/;"	v
popup	typedefs.h	/^	GtkWidget *popup;$/;"	m	struct:_CollectTable
popup	typedefs.h	/^	GtkWidget *popup;$/;"	m	struct:_ViewDirList
popup	typedefs.h	/^	GtkWidget *popup;$/;"	m	struct:_ViewDirTree
popup	typedefs.h	/^	GtkWidget *popup;$/;"	m	struct:_ViewFileIcon
popup	typedefs.h	/^	GtkWidget *popup;$/;"	m	struct:_ViewFileList
popup_menu_position_clamp	ui_menu.c	/^gint popup_menu_position_clamp(GtkMenu *menu, gint *x, gint *y, gint height)$/;"	f
popup_menu_short_lived	ui_menu.c	/^GtkWidget *popup_menu_short_lived(void)$/;"	f
popup_menu_short_lived_cb	ui_menu.c	/^static void popup_menu_short_lived_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
position	ui_misc.c	/^	SizerPositionType position;$/;"	m	struct:_SizerData	file:
pr	typedefs.h	/^	GtkWidget *pr;$/;"	m	struct:_ImageWindow
pr_border_clear	pixbuf-renderer.c	/^static void pr_border_clear(PixbufRenderer *pr)$/;"	f	file:
pr_border_draw	pixbuf-renderer.c	/^static void pr_border_draw(PixbufRenderer *pr, gint x, gint y, gint w, gint h)$/;"	f	file:
pr_clamp_to_visible	pixbuf-renderer.c	/^static gint pr_clamp_to_visible(PixbufRenderer *pr, gint *x, gint *y, gint *w, gint *h)$/;"	f	file:
pr_clicked_signal	pixbuf-renderer.c	/^static void pr_clicked_signal(PixbufRenderer *pr, GdkEventButton *bevent)$/;"	f	file:
pr_clip_region	pixbuf-renderer.c	/^static gint pr_clip_region(gint x, gint y, gint w, gint h,$/;"	f	file:
pr_mouse_drag_cb	pixbuf-renderer.c	/^static void pr_mouse_drag_cb(GtkWidget *widget, GdkDragContext *context, gpointer data)$/;"	f	file:
pr_mouse_leave_cb	pixbuf-renderer.c	/^static gint pr_mouse_leave_cb(GtkWidget *widget, GdkEventCrossing *event, gpointer data)$/;"	f	file:
pr_mouse_motion_cb	pixbuf-renderer.c	/^static gint pr_mouse_motion_cb(GtkWidget *widget, GdkEventButton *bevent, gpointer data)$/;"	f	file:
pr_mouse_press_cb	pixbuf-renderer.c	/^static gint pr_mouse_press_cb(GtkWidget *widget, GdkEventButton *bevent, gpointer data)$/;"	f	file:
pr_mouse_release_cb	pixbuf-renderer.c	/^static gint pr_mouse_release_cb(GtkWidget *widget, GdkEventButton *bevent, gpointer data)$/;"	f	file:
pr_overlay_draw	pixbuf-renderer.c	/^static void pr_overlay_draw(PixbufRenderer *pr, gint x, gint y, gint w, gint h,$/;"	f	file:
pr_overlay_find	pixbuf-renderer.c	/^static OverlayData *pr_overlay_find(PixbufRenderer *pr, gint id)$/;"	f	file:
pr_overlay_free	pixbuf-renderer.c	/^static void pr_overlay_free(PixbufRenderer *pr, OverlayData *od)$/;"	f	file:
pr_overlay_get_position	pixbuf-renderer.c	/^static void pr_overlay_get_position(PixbufRenderer *pr, OverlayData *od,$/;"	f	file:
pr_overlay_list_clear	pixbuf-renderer.c	/^static void pr_overlay_list_clear(PixbufRenderer *pr)$/;"	f	file:
pr_overlay_queue_all	pixbuf-renderer.c	/^static void pr_overlay_queue_all(PixbufRenderer *pr)$/;"	f	file:
pr_overlay_queue_draw	pixbuf-renderer.c	/^static void pr_overlay_queue_draw(PixbufRenderer *pr, OverlayData *od)$/;"	f	file:
pr_overlay_update_sizes	pixbuf-renderer.c	/^static void pr_overlay_update_sizes(PixbufRenderer *pr)$/;"	f	file:
pr_parent_window_resize	pixbuf-renderer.c	/^static gint pr_parent_window_resize(PixbufRenderer *pr, gint w, gint h)$/;"	f	file:
pr_parent_window_sizable	pixbuf-renderer.c	/^static gint pr_parent_window_sizable(PixbufRenderer *pr)$/;"	f	file:
pr_pixbuf_sync	pixbuf-renderer.c	/^static void pr_pixbuf_sync(PixbufRenderer *pr, gdouble zoom)$/;"	f	file:
pr_queue	pixbuf-renderer.c	/^static void pr_queue(PixbufRenderer *pr, gint x, gint y, gint w, gint h,$/;"	f	file:
pr_queue_clear	pixbuf-renderer.c	/^static void pr_queue_clear(PixbufRenderer *pr)$/;"	f	file:
pr_queue_draw_idle_cb	pixbuf-renderer.c	/^static gint pr_queue_draw_idle_cb(gpointer data)$/;"	f	file:
pr_queue_list_free	pixbuf-renderer.c	/^static void pr_queue_list_free(GList *list)$/;"	f	file:
pr_queue_merge	pixbuf-renderer.c	/^static void pr_queue_merge(QueueData *parent, QueueData *qd)$/;"	f	file:
pr_queue_to_tiles	pixbuf-renderer.c	/^static gint pr_queue_to_tiles(PixbufRenderer *pr, gint x, gint y, gint w, gint h,$/;"	f	file:
pr_redraw	pixbuf-renderer.c	/^static void pr_redraw(PixbufRenderer *pr, gint new_data)$/;"	f	file:
pr_render_complete_signal	pixbuf-renderer.c	/^static void pr_render_complete_signal(PixbufRenderer *pr)$/;"	f	file:
pr_scroll_clamp	pixbuf-renderer.c	/^static gint pr_scroll_clamp(PixbufRenderer *pr)$/;"	f	file:
pr_scroll_notify_signal	pixbuf-renderer.c	/^static void pr_scroll_notify_signal(PixbufRenderer *pr)$/;"	f	file:
pr_scroller_start	pixbuf-renderer.c	/^static void pr_scroller_start(PixbufRenderer *pr, gint x, gint y)$/;"	f	file:
pr_scroller_stop	pixbuf-renderer.c	/^static void pr_scroller_stop(PixbufRenderer *pr)$/;"	f	file:
pr_scroller_timer_set	pixbuf-renderer.c	/^static void pr_scroller_timer_set(PixbufRenderer *pr, gint start)$/;"	f	file:
pr_scroller_update_cb	pixbuf-renderer.c	/^static gboolean pr_scroller_update_cb(gpointer data)$/;"	f	file:
pr_set_pixbuf	pixbuf-renderer.c	/^static void pr_set_pixbuf(PixbufRenderer *pr, GdkPixbuf *pixbuf, gdouble zoom)$/;"	f	file:
pr_signals_connect	pixbuf-renderer.c	/^static void pr_signals_connect(PixbufRenderer *pr)$/;"	f	file:
pr_size_cb	pixbuf-renderer.c	/^static void pr_size_cb(GtkWidget *widget, GtkAllocation *allocation, gpointer data)$/;"	f	file:
pr_size_clamp	pixbuf-renderer.c	/^static gint pr_size_clamp(PixbufRenderer *pr)$/;"	f	file:
pr_size_sync	pixbuf-renderer.c	/^static void pr_size_sync(PixbufRenderer *pr, gint new_width, gint new_height)$/;"	f	file:
pr_source_tile_changed	pixbuf-renderer.c	/^static void pr_source_tile_changed(PixbufRenderer *pr, gint x, gint y, gint width, gint height)$/;"	f	file:
pr_source_tile_compute_region	pixbuf-renderer.c	/^static GList *pr_source_tile_compute_region(PixbufRenderer *pr, gint x, gint y, gint w, gint h, gint request)$/;"	f	file:
pr_source_tile_find	pixbuf-renderer.c	/^static SourceTile *pr_source_tile_find(PixbufRenderer *pr, gint x, gint y)$/;"	f	file:
pr_source_tile_free	pixbuf-renderer.c	/^static void pr_source_tile_free(SourceTile *st)$/;"	f	file:
pr_source_tile_free_all	pixbuf-renderer.c	/^static void pr_source_tile_free_all(PixbufRenderer *pr)$/;"	f	file:
pr_source_tile_new	pixbuf-renderer.c	/^static SourceTile *pr_source_tile_new(PixbufRenderer *pr, gint x, gint y)$/;"	f	file:
pr_source_tile_render	pixbuf-renderer.c	/^static gint pr_source_tile_render(PixbufRenderer *pr, ImageTile *it,$/;"	f	file:
pr_source_tile_request	pixbuf-renderer.c	/^static SourceTile *pr_source_tile_request(PixbufRenderer *pr, gint x, gint y)$/;"	f	file:
pr_source_tile_unset	pixbuf-renderer.c	/^static void pr_source_tile_unset(PixbufRenderer *pr)$/;"	f	file:
pr_source_tile_visible	pixbuf-renderer.c	/^static gint pr_source_tile_visible(PixbufRenderer *pr, SourceTile *st)$/;"	f	file:
pr_tile_add	pixbuf-renderer.c	/^static ImageTile *pr_tile_add(PixbufRenderer *pr, gint x, gint y)$/;"	f	file:
pr_tile_expose	pixbuf-renderer.c	/^static void pr_tile_expose(PixbufRenderer *pr, ImageTile *it,$/;"	f	file:
pr_tile_free	pixbuf-renderer.c	/^static void pr_tile_free(ImageTile *it)$/;"	f	file:
pr_tile_free_all	pixbuf-renderer.c	/^static void pr_tile_free_all(PixbufRenderer *pr)$/;"	f	file:
pr_tile_free_space	pixbuf-renderer.c	/^static void pr_tile_free_space(PixbufRenderer *pr, guint space, ImageTile *it)$/;"	f	file:
pr_tile_get	pixbuf-renderer.c	/^static ImageTile *pr_tile_get(PixbufRenderer *pr, gint x, gint y, gint only_existing)$/;"	f	file:
pr_tile_invalidate_all	pixbuf-renderer.c	/^static void pr_tile_invalidate_all(PixbufRenderer *pr)$/;"	f	file:
pr_tile_invalidate_region	pixbuf-renderer.c	/^static void pr_tile_invalidate_region(PixbufRenderer *pr, gint x, gint y, gint w, gint h)$/;"	f	file:
pr_tile_is_visible	pixbuf-renderer.c	/^static gint pr_tile_is_visible(PixbufRenderer *pr, ImageTile *it)$/;"	f	file:
pr_tile_new	pixbuf-renderer.c	/^static ImageTile *pr_tile_new(gint x, gint y, gint width, gint height)$/;"	f	file:
pr_tile_prepare	pixbuf-renderer.c	/^static void pr_tile_prepare(PixbufRenderer *pr, ImageTile *it)$/;"	f	file:
pr_tile_remove	pixbuf-renderer.c	/^static void pr_tile_remove(PixbufRenderer *pr, ImageTile *it)$/;"	f	file:
pr_tile_render	pixbuf-renderer.c	/^static void pr_tile_render(PixbufRenderer *pr, ImageTile *it,$/;"	f	file:
pr_update_signal	pixbuf-renderer.c	/^static void pr_update_signal(PixbufRenderer *pr)$/;"	f	file:
pr_zoom_adjust_real	pixbuf-renderer.c	/^static void pr_zoom_adjust_real(PixbufRenderer *pr, gdouble increment,$/;"	f	file:
pr_zoom_clamp	pixbuf-renderer.c	/^static gint pr_zoom_clamp(PixbufRenderer *pr, gdouble zoom,$/;"	f	file:
pr_zoom_signal	pixbuf-renderer.c	/^static void pr_zoom_signal(PixbufRenderer *pr)$/;"	f	file:
pr_zoom_sync	pixbuf-renderer.c	/^static void pr_zoom_sync(PixbufRenderer *pr, gdouble zoom,$/;"	f	file:
pref_box_new	ui_misc.c	/^GtkWidget *pref_box_new(GtkWidget *parent_box, gint fill,$/;"	f
pref_button_new	ui_misc.c	/^GtkWidget *pref_button_new(GtkWidget *parent_box, const gchar *stock_id,$/;"	f
pref_checkbox_int_cb	ui_misc.c	/^static void pref_checkbox_int_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
pref_checkbox_link_sensitivity	ui_misc.c	/^void pref_checkbox_link_sensitivity(GtkWidget *button, GtkWidget *widget)$/;"	f
pref_checkbox_link_sensitivity_cb	ui_misc.c	/^static void pref_checkbox_link_sensitivity_cb(GtkWidget *button, gpointer data)$/;"	f	file:
pref_checkbox_link_sensitivity_swap	ui_misc.c	/^void pref_checkbox_link_sensitivity_swap(GtkWidget *button, GtkWidget *widget)$/;"	f
pref_checkbox_link_sensitivity_swap_cb	ui_misc.c	/^static void pref_checkbox_link_sensitivity_swap_cb(GtkWidget *button, gpointer data)$/;"	f	file:
pref_checkbox_new	ui_misc.c	/^GtkWidget *pref_checkbox_new(GtkWidget *parent_box, const gchar *text, gint active,$/;"	f
pref_checkbox_new_int	ui_misc.c	/^GtkWidget *pref_checkbox_new_int(GtkWidget *parent_box, const gchar *text, gint active,$/;"	f
pref_checkbox_new_mnemonic	ui_misc.c	/^GtkWidget *pref_checkbox_new_mnemonic(GtkWidget *parent_box, const gchar *text, gint active,$/;"	f
pref_frame_new	ui_misc.c	/^GtkWidget *pref_frame_new(GtkWidget *parent_box, gint fill,$/;"	f
pref_group_new	ui_misc.c	/^GtkWidget *pref_group_new(GtkWidget *parent_box, gint fill,$/;"	f
pref_group_parent	ui_misc.c	/^GtkWidget *pref_group_parent(GtkWidget *child)$/;"	f
pref_label_bold	ui_misc.c	/^void pref_label_bold(GtkWidget *label, gint bold, gint increase_size)$/;"	f
pref_label_new	ui_misc.c	/^GtkWidget *pref_label_new(GtkWidget *parent_box, const gchar *text)$/;"	f
pref_label_new_mnemonic	ui_misc.c	/^GtkWidget *pref_label_new_mnemonic(GtkWidget *parent_box, const gchar *text, GtkWidget *widget)$/;"	f
pref_line	ui_misc.c	/^GtkWidget *pref_line(GtkWidget *parent_box, gint padding)$/;"	f
pref_link_sensitivity	ui_misc.c	/^void pref_link_sensitivity(GtkWidget *widget, GtkWidget *watch)$/;"	f
pref_link_sensitivity_cb	ui_misc.c	/^static void pref_link_sensitivity_cb(GtkWidget *watch, GtkStateType prev_state, gpointer data)$/;"	f	file:
pref_list_double_get	ui_misc.c	/^gint pref_list_double_get(const gchar *group, const gchar *key, gdouble *result)$/;"	f
pref_list_double_set	ui_misc.c	/^void pref_list_double_set(const gchar *group, const gchar *key, gdouble value)$/;"	f
pref_list_find	ui_misc.c	/^static GList *pref_list_find(const gchar *group, const gchar *token)$/;"	f	file:
pref_list_get	ui_misc.c	/^static gint pref_list_get(const gchar *group, const gchar *key, const gchar *marker, const gchar **result)$/;"	f	file:
pref_list_int_get	ui_misc.c	/^gint pref_list_int_get(const gchar *group, const gchar *key, gint *result)$/;"	f
pref_list_int_set	ui_misc.c	/^void pref_list_int_set(const gchar *group, const gchar *key, gint value)$/;"	f
pref_list_set	ui_misc.c	/^static void pref_list_set(const gchar *group, const gchar *key, const gchar *marker, const gchar *text)$/;"	f	file:
pref_list_string_get	ui_misc.c	/^gint pref_list_string_get(const gchar *group, const gchar *key, const gchar **result)$/;"	f
pref_list_string_set	ui_misc.c	/^void pref_list_string_set(const gchar *group, const gchar *key, const gchar *value)$/;"	f
pref_radiobutton_int_cb	ui_misc.c	/^static void pref_radiobutton_int_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
pref_radiobutton_new	ui_misc.c	/^GtkWidget *pref_radiobutton_new(GtkWidget *parent_box, GtkWidget *sibling,$/;"	f
pref_radiobutton_new_int	ui_misc.c	/^GtkWidget *pref_radiobutton_new_int(GtkWidget *parent_box, GtkWidget *sibling,$/;"	f
pref_radiobutton_new_mnemonic	ui_misc.c	/^GtkWidget *pref_radiobutton_new_mnemonic(GtkWidget *parent_box, GtkWidget *sibling,$/;"	f
pref_signal_block_data	ui_misc.c	/^void pref_signal_block_data(GtkWidget *widget, gpointer data)$/;"	f
pref_signal_unblock_data	ui_misc.c	/^void pref_signal_unblock_data(GtkWidget *widget, gpointer data)$/;"	f
pref_spacer	ui_misc.c	/^GtkWidget *pref_spacer(GtkWidget *parent_box, gint padding)$/;"	f
pref_spin_int_cb	ui_misc.c	/^static void pref_spin_int_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
pref_spin_new	ui_misc.c	/^GtkWidget *pref_spin_new(GtkWidget *parent_box, const gchar *text, const gchar *suffix,$/;"	f
pref_spin_new_int	ui_misc.c	/^GtkWidget *pref_spin_new_int(GtkWidget *parent_box, const gchar *text, const gchar *suffix,$/;"	f
pref_spin_new_mnemonic	ui_misc.c	/^GtkWidget *pref_spin_new_mnemonic(GtkWidget *parent_box, const gchar *text, const gchar *suffix,$/;"	f
pref_table_box	ui_misc.c	/^GtkWidget *pref_table_box(GtkWidget *table, gint column, gint row,$/;"	f
pref_table_button	ui_misc.c	/^GtkWidget *pref_table_button(GtkWidget *table, gint column, gint row,$/;"	f
pref_table_label	ui_misc.c	/^GtkWidget *pref_table_label(GtkWidget *table, gint column, gint row,$/;"	f
pref_table_new	ui_misc.c	/^GtkWidget *pref_table_new(GtkWidget *parent_box, gint columns, gint rows,$/;"	f
pref_table_spin	ui_misc.c	/^GtkWidget *pref_table_spin(GtkWidget *table, gint column, gint row,$/;"	f
pref_toolbar_button	ui_misc.c	/^GtkWidget *pref_toolbar_button(GtkWidget *toolbar,$/;"	f
pref_toolbar_button_set_icon	ui_misc.c	/^void pref_toolbar_button_set_icon(GtkWidget *button, GtkWidget *widget, const gchar *stock_id)$/;"	f
pref_toolbar_destroy_cb	ui_misc.c	/^static void pref_toolbar_destroy_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
pref_toolbar_new	ui_misc.c	/^GtkWidget *pref_toolbar_new(GtkWidget *parent_box, GtkToolbarStyle style)$/;"	f
pref_toolbar_spacer	ui_misc.c	/^GtkWidget *pref_toolbar_spacer(GtkWidget *toolbar)$/;"	f
prefer_command_line	main.c	/^	gint prefer_command_line;$/;"	m	struct:_RemoteCommandEntry	file:
prefix	Makefile	/^prefix = \/usr\/local$/;"	m
prefix	icons/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	icons/svg/Makefile	/^prefix = \/usr\/local$/;"	m
press_height	ui_misc.c	/^	gint press_height;$/;"	m	struct:_SizerData	file:
press_width	ui_misc.c	/^	gint press_width;$/;"	m	struct:_SizerData	file:
press_x	ui_misc.c	/^	gint press_x;$/;"	m	struct:_SizerData	file:
press_y	ui_misc.c	/^	gint press_y;$/;"	m	struct:_SizerData	file:
prev_color_row	typedefs.h	/^	gint prev_color_row;$/;"	m	struct:_ImageWindow
prev_path	typedefs.h	/^	gchar *prev_path;$/;"	m	struct:_ImageWindow
prev_pixbuf	typedefs.h	/^	GdkPixbuf *prev_pixbuf;$/;"	m	struct:_ImageWindow
prev_selection	typedefs.h	/^	CollectInfo *prev_selection;$/;"	m	struct:_CollectTable
prev_selection	typedefs.h	/^	FileData *prev_selection;$/;"	m	struct:_ViewFileIcon
print_button	print.c	/^	GtkWidget *print_button;$/;"	m	struct:_PrintWindow	file:
print_combo_menu	print.c	/^static GtkWidget *print_combo_menu(const gchar *text[], gint count, gint preferred,$/;"	f	file:
print_custom_entry_set	print.c	/^static void print_custom_entry_set(PrintWindow *pw, GtkWidget *combo)$/;"	f	file:
print_file_format_text	print.c	/^const gchar *print_file_format_text[] = {$/;"	v
print_image_scale_cb	print.c	/^static void print_image_scale_cb(GtkWidget *spin, gpointer data)$/;"	f	file:
print_job_cancel_cb	print.c	/^static void print_job_cancel_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
print_job_close	print.c	/^static void print_job_close(PrintWindow *pw, gint error)$/;"	f	file:
print_job_close_file	print.c	/^static void print_job_close_file(PrintWindow *pw)$/;"	f	file:
print_job_close_finish_cb	print.c	/^static gboolean print_job_close_finish_cb(gpointer data)$/;"	f	file:
print_job_done	print.c	/^static void print_job_done(PrintWindow *pw)$/;"	f	file:
print_job_finish	print.c	/^static gint print_job_finish(PrintWindow *pw)$/;"	f	file:
print_job_init	print.c	/^static gint print_job_init(PrintWindow *pw)$/;"	f	file:
print_job_page_done	print.c	/^static gint print_job_page_done(PrintWindow *pw)$/;"	f	file:
print_job_page_image	print.c	/^static gint print_job_page_image(PrintWindow *pw, GdkPixbuf *pixbuf,$/;"	f	file:
print_job_page_new	print.c	/^static gint print_job_page_new(PrintWindow *pw)$/;"	f	file:
print_job_page_text	print.c	/^static gint print_job_page_text(PrintWindow *pw, const gchar *text, gdouble point_size,$/;"	f	file:
print_job_preview_init	print.c	/^static gint print_job_preview_init(PrintWindow *pw)$/;"	f	file:
print_job_preview_page_done	print.c	/^static gint print_job_preview_page_done(PrintWindow *pw)$/;"	f	file:
print_job_preview_page_image	print.c	/^static gint print_job_preview_page_image(PrintWindow *pw, GdkPixbuf *pixbuf,$/;"	f	file:
print_job_preview_page_new	print.c	/^static gint print_job_preview_page_new(PrintWindow *pw, gint page)$/;"	f	file:
print_job_preview_page_text	print.c	/^static gint print_job_preview_page_text(PrintWindow *pw, const gchar *text, gdouble point_size,$/;"	f	file:
print_job_ps_end	print.c	/^static gint print_job_ps_end(PrintWindow *pw)$/;"	f	file:
print_job_ps_fd	print.c	/^static FILE *print_job_ps_fd(PrintWindow *pw)$/;"	f	file:
print_job_ps_init	print.c	/^static gint print_job_ps_init(PrintWindow *pw)$/;"	f	file:
print_job_ps_page_done	print.c	/^static gint print_job_ps_page_done(PrintWindow *pw)$/;"	f	file:
print_job_ps_page_image	print.c	/^static gint print_job_ps_page_image(PrintWindow *pw, GdkPixbuf *pixbuf,$/;"	f	file:
print_job_ps_page_image_pixel	print.c	/^static void print_job_ps_page_image_pixel(FILE *f, guchar *pix)$/;"	f	file:
print_job_ps_page_new	print.c	/^static gint print_job_ps_page_new(PrintWindow *pw, gint page)$/;"	f	file:
print_job_ps_page_text	print.c	/^static gint print_job_ps_page_text(PrintWindow *pw, const gchar *text, gdouble point_size,$/;"	f	file:
print_job_render	print.c	/^static void print_job_render(PrintWindow *pw)$/;"	f	file:
print_job_render_image	print.c	/^static gint print_job_render_image(PrintWindow *pw)$/;"	f	file:
print_job_render_image_loader_done	print.c	/^static void print_job_render_image_loader_done(ImageLoader *il, gpointer data)$/;"	f	file:
print_job_render_proof	print.c	/^static gint print_job_render_proof(PrintWindow *pw)$/;"	f	file:
print_job_render_proof_loader_done	print.c	/^static void print_job_render_proof_loader_done(ImageLoader *il, gpointer data)$/;"	f	file:
print_job_rgb_init	print.c	/^static gint print_job_rgb_init(PrintWindow *pw)$/;"	f	file:
print_job_rgb_page_done	print.c	/^static gint print_job_rgb_page_done(PrintWindow *pw)$/;"	f	file:
print_job_rgb_page_image	print.c	/^static gint print_job_rgb_page_image(PrintWindow *pw, GdkPixbuf *pixbuf,$/;"	f	file:
print_job_rgb_page_new	print.c	/^static gint print_job_rgb_page_new(PrintWindow *pw, gint page)$/;"	f	file:
print_job_rgb_page_text	print.c	/^static gint print_job_rgb_page_text(PrintWindow *pw, const gchar *text, gdouble point_size,$/;"	f	file:
print_job_start	print.c	/^static gint print_job_start(PrintWindow *pw, RenderFormat format, PrintOutput output)$/;"	f	file:
print_job_status	print.c	/^static void print_job_status(PrintWindow *pw)$/;"	f	file:
print_job_text_image	print.c	/^static gint print_job_text_image(PrintWindow *pw, const gchar *path,$/;"	f	file:
print_job_throw_error	print.c	/^static void print_job_throw_error(PrintWindow *pw, const gchar *message)$/;"	f	file:
print_layout_page_back_cb	print.c	/^static void print_layout_page_back_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
print_layout_page_count	print.c	/^static gint print_layout_page_count(PrintWindow *pw)$/;"	f	file:
print_layout_page_next_cb	print.c	/^static void print_layout_page_next_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
print_layout_page_step	print.c	/^static void print_layout_page_step(PrintWindow *pw, gint step)$/;"	f	file:
print_layout_select_cb	print.c	/^static void print_layout_select_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
print_layout_text	print.c	/^const gchar *print_layout_text[] = {$/;"	v
print_layout_zoom_in_cb	print.c	/^static void print_layout_zoom_in_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
print_layout_zoom_original_cb	print.c	/^static void print_layout_zoom_original_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
print_layout_zoom_out_cb	print.c	/^static void print_layout_zoom_out_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
print_misc_menu	print.c	/^static GtkWidget *print_misc_menu(GtkWidget *parent_box, gint preferred,$/;"	f	file:
print_output_cb	print.c	/^static void print_output_cb(GtkWidget *combo, gpointer data)$/;"	f	file:
print_output_dpi_cb	print.c	/^static void print_output_dpi_cb(GtkWidget *combo, gpointer data)$/;"	f	file:
print_output_dpi_menu	print.c	/^static GtkWidget *print_output_dpi_menu(GtkWidget * table, gint column, gint row,$/;"	f	file:
print_output_format_cb	print.c	/^static void print_output_format_cb(GtkWidget *combo, gpointer data)$/;"	f	file:
print_output_format_menu	print.c	/^static GtkWidget *print_output_format_menu(GtkWidget * table, gint column, gint row,$/;"	f	file:
print_output_menu	print.c	/^static GtkWidget *print_output_menu(GtkWidget *table, gint column, gint row,$/;"	f	file:
print_output_name	print.c	/^static const gchar *print_output_name(PrintOutput output)$/;"	f	file:
print_output_set	print.c	/^static void print_output_set(PrintWindow *pw, PrintOutput output)$/;"	f	file:
print_output_text	print.c	/^const gchar *print_output_text[] = {$/;"	v
print_paper_margin_cb	print.c	/^static void print_paper_margin_cb(GtkWidget *spin, gpointer data)$/;"	f	file:
print_paper_menu	print.c	/^static GtkWidget *print_paper_menu(GtkWidget *table, gint column, gint row,$/;"	f	file:
print_paper_orientation	print.c	/^const gchar *print_paper_orientation[] = {$/;"	v
print_paper_orientation_cb	print.c	/^static void print_paper_orientation_cb(GtkWidget *combo, gpointer data)$/;"	f	file:
print_paper_orientation_menu	print.c	/^static GtkWidget *print_paper_orientation_menu(GtkWidget *table, gint column, gint row,$/;"	f	file:
print_paper_select_cb	print.c	/^static void print_paper_select_cb(GtkWidget *combo, gpointer data)$/;"	f	file:
print_paper_size_cb	print.c	/^static void print_paper_size_cb(GtkWidget *spin, gpointer data)$/;"	f	file:
print_paper_size_convert_units	print.c	/^static gdouble print_paper_size_convert_units(gdouble value, PaperUnits src, PaperUnits dst)$/;"	f	file:
print_paper_size_lookup	print.c	/^static gint print_paper_size_lookup(gint n, gdouble *width, gdouble *height)$/;"	f	file:
print_paper_size_nth	print.c	/^static PaperSize *print_paper_size_nth(gint n)$/;"	f	file:
print_paper_sizes	print.c	/^PaperSize print_paper_sizes[] = {$/;"	v
print_paper_units	print.c	/^const gchar *print_paper_units[] = {$/;"	v
print_paper_units_cb	print.c	/^static void print_paper_units_cb(GtkWidget *combo, gpointer data)$/;"	f	file:
print_paper_units_menu	print.c	/^static GtkWidget *print_paper_units_menu(GtkWidget *table, gint column, gint row,$/;"	f	file:
print_paper_units_set	print.c	/^static void print_paper_units_set(PrintWindow *pw, PaperUnits units)$/;"	f	file:
print_pref_double	print.c	/^static gdouble print_pref_double(const gchar *key, gdouble fallback)$/;"	f	file:
print_pref_int	print.c	/^static gint print_pref_int(const gchar *key, gint fallback)$/;"	f	file:
print_pref_store	print.c	/^static void print_pref_store(PrintWindow *pw)$/;"	f	file:
print_preview_unit	print.c	/^static gint print_preview_unit(gdouble points)$/;"	f	file:
print_proof_size	print.c	/^static void print_proof_size(PrintWindow *pw, gdouble *width, gdouble *height)$/;"	f	file:
print_proof_size_cb	print.c	/^static void print_proof_size_cb(GtkWidget *spin, gpointer data)$/;"	f	file:
print_source_select_cb	print.c	/^static void print_source_select_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
print_source_text	print.c	/^const gchar *print_source_text[] = {$/;"	v
print_term	ui_fileops.c	/^void print_term(const gchar *text_utf8)$/;"	f
print_text_cb_date	print.c	/^static void print_text_cb_date(GtkWidget *widget, gpointer data)$/;"	f	file:
print_text_cb_dims	print.c	/^static void print_text_cb_dims(GtkWidget *widget, gpointer data)$/;"	f	file:
print_text_cb_name	print.c	/^static void print_text_cb_name(GtkWidget *widget, gpointer data)$/;"	f	file:
print_text_cb_points	print.c	/^static void print_text_cb_points(GtkWidget *widget, gpointer data)$/;"	f	file:
print_text_cb_size	print.c	/^static void print_text_cb_size(GtkWidget *widget, gpointer data)$/;"	f	file:
print_text_field_set	print.c	/^static void print_text_field_set(PrintWindow *pw, TextInfo field, gint active)$/;"	f	file:
print_text_menu	print.c	/^static void print_text_menu(GtkWidget *box, PrintWindow *pw)$/;"	f	file:
print_window_cancel_cb	print.c	/^static void print_window_cancel_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
print_window_close	print.c	/^static void print_window_close(PrintWindow *pw)$/;"	f	file:
print_window_layout_render	print.c	/^static void print_window_layout_render(PrintWindow *pw)$/;"	f	file:
print_window_layout_render_idle	print.c	/^static gboolean print_window_layout_render_idle(gpointer data)$/;"	f	file:
print_window_layout_render_stop	print.c	/^static void print_window_layout_render_stop(PrintWindow *pw)$/;"	f	file:
print_window_layout_set_orientation	print.c	/^static void print_window_layout_set_orientation(PrintWindow *pw, PaperOrientation o)$/;"	f	file:
print_window_layout_set_size	print.c	/^static void print_window_layout_set_size(PrintWindow *pw, gdouble width, gdouble height)$/;"	f	file:
print_window_layout_setup	print.c	/^static GtkWidget *print_window_layout_setup(PrintWindow *pw, GtkWidget *box)$/;"	f	file:
print_window_layout_size	print.c	/^static void print_window_layout_size(PrintWindow *pw)$/;"	f	file:
print_window_layout_status	print.c	/^static void print_window_layout_status(PrintWindow *pw)$/;"	f	file:
print_window_layout_sync_layout	print.c	/^static void print_window_layout_sync_layout(PrintWindow *pw)$/;"	f	file:
print_window_layout_sync_paper	print.c	/^static void print_window_layout_sync_paper(PrintWindow *pw)$/;"	f	file:
print_window_list_printers	print.c	/^static GList *print_window_list_printers(void)$/;"	f	file:
print_window_new	print.c	/^void print_window_new(const gchar *path, GList *selection, GList *list, GtkWidget *parent)$/;"	f
print_window_print_cb	print.c	/^static void print_window_print_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
print_window_print_start	print.c	/^static void print_window_print_start(PrintWindow *pw)$/;"	f	file:
print_window_spin_set	print.c	/^static void print_window_spin_set(GtkSpinButton *spin, gpointer block_data,$/;"	f	file:
profile	color-man.h	/^	gpointer profile;$/;"	m	struct:_ColorMan
profile_in	color-man.c	/^	cmsHPROFILE   profile_in;$/;"	m	struct:_ColorManCache	file:
profile_in_file	color-man.c	/^	gchar *profile_in_file;$/;"	m	struct:_ColorManCache	file:
profile_in_type	color-man.c	/^	ColorManProfileType profile_in_type;$/;"	m	struct:_ColorManCache	file:
profile_out	color-man.c	/^	cmsHPROFILE   profile_out;$/;"	m	struct:_ColorManCache	file:
profile_out_file	color-man.c	/^	gchar *profile_out_file;$/;"	m	struct:_ColorManCache	file:
profile_out_type	color-man.c	/^	ColorManProfileType profile_out_type;$/;"	m	struct:_ColorManCache	file:
program_transform_name	Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	icons/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	icons/svg/Makefile	/^program_transform_name = s,x,x,$/;"	m
progress	cache_maint.c	/^	GtkWidget *progress;$/;"	m	struct:_CacheManager	file:
progress	cache_maint.c	/^	GtkWidget *progress;$/;"	m	struct:_CleanData	file:
progress	editors.c	/^	GtkWidget *progress;$/;"	m	struct:_EditorVerboseData	file:
progress	thumb_standard.h	/^	gdouble progress;$/;"	m	struct:_ThumbLoaderStd
progressive_key_scrolling	globals.c	/^gint progressive_key_scrolling = FALSE;$/;"	v
progressive_key_scrolling_c	preferences.c	/^static gint progressive_key_scrolling_c;$/;"	v	file:
proof_columns	print.c	/^	gint proof_columns;$/;"	m	struct:_PrintWindow	file:
proof_group	print.c	/^	GtkWidget *proof_group;$/;"	m	struct:_PrintWindow	file:
proof_height	print.c	/^	gdouble proof_height;$/;"	m	struct:_PrintWindow	file:
proof_height_spin	print.c	/^	GtkWidget *proof_height_spin;$/;"	m	struct:_PrintWindow	file:
proof_page	print.c	/^	gint proof_page;$/;"	m	struct:_PrintWindow	file:
proof_point	print.c	/^	GList *proof_point;$/;"	m	struct:_PrintWindow	file:
proof_position	print.c	/^	gint proof_position;$/;"	m	struct:_PrintWindow	file:
proof_rows	print.c	/^	gint proof_rows;$/;"	m	struct:_PrintWindow	file:
proof_width	print.c	/^	gdouble proof_width;$/;"	m	struct:_PrintWindow	file:
proof_width_spin	print.c	/^	GtkWidget *proof_width_spin;$/;"	m	struct:_PrintWindow	file:
ps_text_parse	print.c	/^static void ps_text_parse(FILE *f, const gchar *text, gdouble x, gdouble y, gdouble point_size)$/;"	f	file:
ps_text_to_hex_array	print.c	/^static const gchar *ps_text_to_hex_array(FILE *f, const gchar *text, gdouble x, gdouble y)$/;"	f	file:
pw	pan-types.h	/^	PanWindow *pw;$/;"	m	struct:_PanTextAlignment
qd	pixbuf-renderer.c	/^	QueueData *qd;$/;"	m	struct:_ImageTile	file:
qd2	pixbuf-renderer.c	/^	QueueData *qd2;$/;"	m	struct:_ImageTile	file:
quality_menu_cb	preferences.c	/^static void quality_menu_cb(GtkWidget *combo, gpointer data)$/;"	f	file:
queue	pan-types.h	/^	GList *queue;$/;"	m	struct:_PanWindow
queue_pi	pan-types.h	/^	PanItem *queue_pi;$/;"	m	struct:_PanWindow
queued	pan-types.h	/^	gint queued;$/;"	m	struct:_PanItem
quoted_from_text	ui_bookmark.c	/^static gchar *quoted_from_text(const gchar *text)$/;"	f	file:
quoted_value	rcfile.c	/^gchar *quoted_value(const gchar *text)$/;"	f
rank	dupe.h	/^	gdouble rank;$/;"	m	struct:_DupeMatch
rank	search.c	/^	gint rank;$/;"	m	struct:_MatchFileData	file:
rational_from_data	exif.c	/^static void rational_from_data(ExifRational *r, void *src, ExifByteOrder bo)$/;"	f	file:
rc	remote.c	/^	RemoteConnection *rc;$/;"	m	struct:_RemoteClient	file:
read_ahead_il	typedefs.h	/^	ImageLoader *read_ahead_il;$/;"	m	struct:_ImageWindow
read_ahead_path	typedefs.h	/^	gchar *read_ahead_path;$/;"	m	struct:_ImageWindow
read_ahead_pixbuf	typedefs.h	/^	GdkPixbuf *read_ahead_pixbuf;$/;"	m	struct:_ImageWindow
read_bool_option	rcfile.c	/^static gint read_bool_option(FILE *f, gchar *option, gchar *label, gchar *value, gint n)$/;"	f	file:
read_char_option	rcfile.c	/^static gchar *read_char_option(FILE *f, gchar *option, gchar *label, gchar *value, gchar *text)$/;"	f	file:
read_data	remote.h	/^	gpointer read_data;$/;"	m	struct:_RemoteConnection
read_func	remote.h	/^	RemoteReadFunc *read_func;$/;"	m	struct:_RemoteConnection
read_int_option	rcfile.c	/^static gint read_int_option(FILE *f, gchar *option, gchar *label, gchar *value, gint n)$/;"	f	file:
read_int_unit_option	rcfile.c	/^static gint read_int_unit_option(FILE *f, gchar *option, gchar *label, gchar *value, gint n, gint subunits)$/;"	f	file:
real_collection_button_pressed	collect-dlg.c	/^static void real_collection_button_pressed(FileDialog *fd, gpointer data, gint append)$/;"	f	file:
real_file_util_move	utilops.c	/^static void real_file_util_move(const gchar *source_path, GList *source_list,$/;"	f	file:
real_pref_checkbox_new	ui_misc.c	/^static GtkWidget *real_pref_checkbox_new(GtkWidget *parent_box, const gchar *text, gint mnemonic_text,$/;"	f	file:
real_pref_radiobutton_new	ui_misc.c	/^static GtkWidget *real_pref_radiobutton_new(GtkWidget *parent_box, GtkWidget *sibling,$/;"	f	file:
real_pref_spin_new	ui_misc.c	/^static GtkWidget *real_pref_spin_new(GtkWidget *parent_box, const gchar *text, const gchar *suffix,$/;"	f	file:
real_slideshow_start	slideshow.c	/^static SlideShowData *real_slideshow_start(ImageWindow *imd, LayoutWindow *lw,$/;"	f	file:
real_submenu_add_alter	menu.c	/^static GtkWidget *real_submenu_add_alter(GtkWidget *menu, GCallback func, gpointer data,$/;"	f	file:
real_view_window_new	img-view.c	/^static ViewWindow *real_view_window_new(const gchar *path, GList *list, CollectionData *cd, CollectInfo *info)$/;"	f	file:
recent_list_max	globals.c	/^gint recent_list_max = 10;$/;"	v
recurse	cache_maint.c	/^	gint recurse;$/;"	m	struct:_CleanData	file:
ref	collect-io.c	/^	gint ref;$/;"	m	struct:_CollectManagerAction	file:
ref	typedefs.h	/^	gint ref;$/;"	m	struct:_CollectionData
refcount	color-man.c	/^	gint refcount;$/;"	m	struct:_ColorManCache	file:
refcount	pan-types.h	/^	gint refcount;$/;"	m	struct:_PanItem
region_size	ui_tree_edit.c	/^	gint region_size;$/;"	m	struct:_AutoScrollData	file:
relative	pixbuf-renderer.c	/^	gint relative;	\/* x,y coordinates are relative, negative values start bottom right *\/$/;"	m	struct:_OverlayData	file:
remote_client_open	remote.c	/^RemoteConnection *remote_client_open(const gchar *path)$/;"	f
remote_client_send	remote.c	/^gint remote_client_send(RemoteConnection *rc, const gchar *text)$/;"	f
remote_close	remote.c	/^void remote_close(RemoteConnection *rc)$/;"	f
remote_commands	main.c	/^static RemoteCommandEntry remote_commands[] = {$/;"	v	file:
remote_server_client_add	remote.c	/^static void remote_server_client_add(RemoteConnection *rc, int fd)$/;"	f	file:
remote_server_client_cb	remote.c	/^static gboolean remote_server_client_cb(GIOChannel *source, GIOCondition condition, gpointer data)$/;"	f	file:
remote_server_clients_close	remote.c	/^static void remote_server_clients_close(RemoteConnection *rc)$/;"	f	file:
remote_server_exists	remote.c	/^static gint remote_server_exists(const gchar *path)$/;"	f	file:
remote_server_open	remote.c	/^RemoteConnection *remote_server_open(const gchar *path)$/;"	f
remote_server_read_cb	remote.c	/^static gboolean remote_server_read_cb(GIOChannel *source, GIOCondition condition, gpointer data)$/;"	f	file:
remote_server_subscribe	remote.c	/^void remote_server_subscribe(RemoteConnection *rc, RemoteReadFunc *func, gpointer data)$/;"	f
remove_extension_from_path	ui_fileops.c	/^gchar *remove_extension_from_path(const gchar *path)$/;"	f
remove_level_from_path	ui_fileops.c	/^gchar *remove_level_from_path(const gchar *path)$/;"	f
remove_trailing_slash	ui_tabcomp.c	/^gchar *remove_trailing_slash(const gchar *path)$/;"	f
rename	utilops.c	/^	gint rename;$/;"	m	struct:_FileDataMult	file:
rename	utilops.c	/^	gint rename;$/;"	m	struct:_FileDataSingle	file:
rename_all	utilops.c	/^	gint rename_all;$/;"	m	struct:_FileDataMult	file:
rename_auto	utilops.c	/^	gint rename_auto;$/;"	m	struct:_FileDataMult	file:
rename_auto	utilops.c	/^	gint rename_auto;$/;"	m	struct:_FileDataSingle	file:
rename_auto_box	utilops.c	/^	GtkWidget *rename_auto_box;$/;"	m	struct:_FileDataMult	file:
rename_auto_box	utilops.c	/^	GtkWidget *rename_auto_box;$/;"	m	struct:_FileDataSingle	file:
rename_box	utilops.c	/^	GtkWidget *rename_box;$/;"	m	struct:_FileDataMult	file:
rename_box	utilops.c	/^	GtkWidget *rename_box;$/;"	m	struct:_FileDataSingle	file:
rename_box	utilops.c	/^	GtkWidget *rename_box;$/;"	m	struct:_RenameDataMult	file:
rename_entry	utilops.c	/^	GtkWidget *rename_entry;$/;"	m	struct:_FileDataMult	file:
rename_entry	utilops.c	/^	GtkWidget *rename_entry;$/;"	m	struct:_FileDataSingle	file:
rename_entry	utilops.c	/^	GtkWidget *rename_entry;$/;"	m	struct:_RenameDataMult	file:
rename_file	ui_fileops.c	/^gint rename_file(const gchar *s, const gchar *t)$/;"	f
rename_label	utilops.c	/^	GtkWidget *rename_label;$/;"	m	struct:_RenameDataMult	file:
rename_type	utilops.c	/^	RenameType rename_type;$/;"	m	struct:_RenameDataMult	file:
render_complete	pixbuf-renderer.h	/^	void (* render_complete)(PixbufRenderer *pr);$/;"	m	struct:_PixbufRendererClass
render_done	pixbuf-renderer.c	/^	ImageTileRenderType render_done;	\/* highest that has been done before on tile *\/$/;"	m	struct:_ImageTile	file:
render_todo	pixbuf-renderer.c	/^	ImageTileRenderType render_todo;	\/* what to do (see above) *\/$/;"	m	struct:_ImageTile	file:
requested_height	thumb_standard.h	/^	gint requested_height;$/;"	m	struct:_ThumbLoaderStd
requested_height	typedefs.h	/^	gint requested_height;$/;"	m	struct:_ImageLoader
requested_width	thumb_standard.h	/^	gint requested_width;$/;"	m	struct:_ThumbLoaderStd
requested_width	typedefs.h	/^	gint requested_width;$/;"	m	struct:_ImageLoader
reset	image-overlay.c	/^	gint reset;	\/* reset on new image *\/$/;"	m	struct:_OSDIcon	file:
restore_tool	globals.c	/^gint restore_tool = FALSE;$/;"	v
restore_tool_c	preferences.c	/^static gint restore_tool_c;$/;"	v	file:
result_drag_types	search.c	/^static GtkTargetEntry result_drag_types[] = {$/;"	v	file:
result_view	search.c	/^	GtkWidget *result_view;$/;"	m	struct:_SearchData	file:
right_click_path	ui_pathsel.c	/^	GtkTreePath *right_click_path;$/;"	m	struct:_Dest_Data	file:
rmdir_utf8	ui_fileops.c	/^gint rmdir_utf8(const gchar *s)$/;"	f
row	color-man.h	/^	gint row;$/;"	m	struct:_ColorMan
row	view_file_icon.c	/^	gint row;$/;"	m	struct:_IconData	file:
rows	typedefs.h	/^	gint rows;$/;"	m	struct:_CollectTable
rows	typedefs.h	/^	gint rows;$/;"	m	struct:_ViewFileIcon
safe_delete_clear_cb	preferences.c	/^static void safe_delete_clear_cb(GtkWidget* widget, gpointer data)$/;"	f	file:
safe_delete_clear_ok_cb	preferences.c	/^static void safe_delete_clear_ok_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
safe_delete_enable	globals.c	/^gint safe_delete_enable = FALSE;$/;"	v
safe_delete_enable_c	preferences.c	/^static gint safe_delete_enable_c;$/;"	v	file:
safe_delete_path	globals.c	/^gchar *safe_delete_path = NULL;$/;"	v
safe_delete_path_entry	preferences.c	/^static GtkWidget *safe_delete_path_entry;$/;"	v	file:
safe_delete_size	globals.c	/^gint safe_delete_size = 20;$/;"	v
safe_delete_size_c	preferences.c	/^static gint safe_delete_size_c;$/;"	v	file:
safe_delete_view_cb	preferences.c	/^static void safe_delete_view_cb(GtkWidget* widget, gpointer data)$/;"	f	file:
save_options	rcfile.c	/^void save_options(void)$/;"	f
save_settings	print.c	/^	gint save_settings;$/;"	m	struct:_PrintWindow	file:
save_timeout_id	bar_info.c	/^	gint save_timeout_id;$/;"	m	struct:_BarInfoData	file:
save_window_positions	globals.c	/^gint save_window_positions = FALSE;$/;"	v
save_window_positions_c	preferences.c	/^static gint save_window_positions_c;$/;"	v	file:
saver_block_id	typedefs.h	/^	gint saver_block_id;$/;"	m	struct:_FullScreenData
sbindir	Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	icons/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	icons/svg/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
scale	pixbuf-renderer.h	/^	gdouble scale;		\/* zoom we got (should never be 0) *\/$/;"	m	struct:_PixbufRenderer
scan_geometry	collect-io.c	/^static gint scan_geometry(gchar *buffer, gint *x, gint *y, gint *w, gint *h)$/;"	f	file:
scroll_cb	img-view.c	/^static void scroll_cb(ImageWindow *imd, GdkScrollDirection direction, guint32 time,$/;"	f	file:
scroll_cb	pan-view.c	/^static void scroll_cb(PixbufRenderer *pr, GdkEventScroll *event, gpointer data)$/;"	f	file:
scroll_notify	pixbuf-renderer.h	/^	void (* scroll_notify)	(PixbufRenderer *pr);$/;"	m	struct:_PixbufRendererClass
scroll_reset	pixbuf-renderer.h	/^	PixbufRendererScrollResetType scroll_reset;$/;"	m	struct:_PixbufRenderer
scroll_reset_method	globals.c	/^gint scroll_reset_method = SCROLL_RESET_TOPLEFT;$/;"	v
scrollbar_h	pan-types.h	/^	GtkWidget *scrollbar_h;$/;"	m	struct:_PanWindow
scrollbar_v	pan-types.h	/^	GtkWidget *scrollbar_v;$/;"	m	struct:_PanWindow
scrolled	bar_exif.c	/^	GtkWidget *scrolled;$/;"	m	struct:_ExifBar	file:
scrolled	typedefs.h	/^	GtkWidget *scrolled;$/;"	m	struct:_CollectTable
scroller_id	pixbuf-renderer.h	/^	gint scroller_id;$/;"	m	struct:_PixbufRenderer
scroller_overlay	pixbuf-renderer.h	/^	gint scroller_overlay;$/;"	m	struct:_PixbufRenderer
scroller_x	pixbuf-renderer.h	/^	gint scroller_x;$/;"	m	struct:_PixbufRenderer
scroller_xinc	pixbuf-renderer.h	/^	gint scroller_xinc;$/;"	m	struct:_PixbufRenderer
scroller_xpos	pixbuf-renderer.h	/^	gint scroller_xpos;$/;"	m	struct:_PixbufRenderer
scroller_y	pixbuf-renderer.h	/^	gint scroller_y;$/;"	m	struct:_PixbufRenderer
scroller_yinc	pixbuf-renderer.h	/^	gint scroller_yinc;$/;"	m	struct:_PixbufRenderer
scroller_ypos	pixbuf-renderer.h	/^	gint scroller_ypos;$/;"	m	struct:_PixbufRenderer
search_box	pan-types.h	/^	GtkWidget *search_box;$/;"	m	struct:_PanWindow
search_buffer_count	search.c	/^	gint search_buffer_count;$/;"	m	struct:_SearchData	file:
search_buffer_flush	search.c	/^static void search_buffer_flush(SearchData *sd)$/;"	f	file:
search_buffer_list	search.c	/^	GList *search_buffer_list;$/;"	m	struct:_SearchData	file:
search_button	pan-types.h	/^	GtkWidget *search_button;$/;"	m	struct:_PanWindow
search_button_arrow	pan-types.h	/^	GtkWidget *search_button_arrow;$/;"	m	struct:_PanWindow
search_count	search.c	/^	gint search_count;$/;"	m	struct:_SearchData	file:
search_date_d	search.c	/^	gint   search_date_d;$/;"	m	struct:_SearchData	file:
search_date_end_d	search.c	/^	gint   search_date_end_d;$/;"	m	struct:_SearchData	file:
search_date_end_m	search.c	/^	gint   search_date_end_m;$/;"	m	struct:_SearchData	file:
search_date_end_y	search.c	/^	gint   search_date_end_y;$/;"	m	struct:_SearchData	file:
search_date_m	search.c	/^	gint   search_date_m;$/;"	m	struct:_SearchData	file:
search_date_y	search.c	/^	gint   search_date_y;$/;"	m	struct:_SearchData	file:
search_dnd_begin	search.c	/^static void search_dnd_begin(GtkWidget *widget, GdkDragContext *context, gpointer data)$/;"	f	file:
search_dnd_data_set	search.c	/^static void search_dnd_data_set(GtkWidget *widget, GdkDragContext *context,$/;"	f	file:
search_dnd_init	search.c	/^static void search_dnd_init(SearchData *sd)$/;"	f	file:
search_done_list	search.c	/^	GList *search_done_list;$/;"	m	struct:_SearchData	file:
search_entry	pan-types.h	/^	GtkWidget *search_entry;$/;"	m	struct:_PanWindow
search_file_do_extra	search.c	/^static gint search_file_do_extra(SearchData *sd, FileData *fd, gint *match,$/;"	f	file:
search_file_list	search.c	/^	GList *search_file_list;$/;"	m	struct:_SearchData	file:
search_file_load_done_cb	search.c	/^static void search_file_load_done_cb(ImageLoader *il, gpointer data)$/;"	f	file:
search_file_load_process	search.c	/^static void search_file_load_process(SearchData *sd, CacheData *cd)$/;"	f	file:
search_file_next	search.c	/^static gint search_file_next(SearchData *sd)$/;"	f	file:
search_folder_list	search.c	/^	GList *search_folder_list;$/;"	m	struct:_SearchData	file:
search_height	search.c	/^	gint   search_height;$/;"	m	struct:_SearchData	file:
search_height_end	search.c	/^	gint   search_height_end;$/;"	m	struct:_SearchData	file:
search_idle_id	search.c	/^	gint search_idle_id;$/;"	m	struct:_SearchData	file:
search_keyword_list	search.c	/^	GList *search_keyword_list;$/;"	m	struct:_SearchData	file:
search_label	pan-types.h	/^	GtkWidget *search_label;$/;"	m	struct:_PanWindow
search_maint_removed	search.c	/^void search_maint_removed(const gchar *path)$/;"	f
search_maint_renamed	search.c	/^void search_maint_renamed(const gchar *source, const gchar *dest)$/;"	f
search_name	search.c	/^	gchar *search_name;$/;"	m	struct:_SearchData	file:
search_name_match_case	search.c	/^	gint   search_name_match_case;$/;"	m	struct:_SearchData	file:
search_new	search.c	/^void search_new(const gchar *path, const gchar *example_file)$/;"	f
search_path	search.c	/^	gchar *search_path;$/;"	m	struct:_SearchData	file:
search_path_recurse	search.c	/^	gint   search_path_recurse;$/;"	m	struct:_SearchData	file:
search_pi	pan-types.h	/^	PanItem *search_pi;$/;"	m	struct:_PanWindow
search_progress_update	search.c	/^static void search_progress_update(SearchData *sd, gint search, gdouble thumbs)$/;"	f	file:
search_result_add_column	search.c	/^static void search_result_add_column(SearchData * sd, gint n, const gchar *title, gint image, gint right_justify)$/;"	f	file:
search_result_append	search.c	/^static void search_result_append(SearchData *sd, MatchFileData *mfd)$/;"	f	file:
search_result_change_path	search.c	/^static void search_result_change_path(SearchData *sd, const gchar *path, const gchar *newpath)$/;"	f	file:
search_result_clear	search.c	/^static void search_result_clear(SearchData *sd)$/;"	f	file:
search_result_collection_from_selection	search.c	/^static void search_result_collection_from_selection(SearchData *sd)$/;"	f	file:
search_result_count	search.c	/^static gint search_result_count(SearchData *sd, gint64 *bytes)$/;"	f	file:
search_result_edit_selected	search.c	/^static void search_result_edit_selected(SearchData *sd, gint n)$/;"	f	file:
search_result_find_row	search.c	/^static gint search_result_find_row(SearchData *sd, FileData *fd, GtkTreeIter *iter)$/;"	f	file:
search_result_free_node	search.c	/^static gboolean search_result_free_node(GtkTreeModel *store, GtkTreePath *tpath,$/;"	f	file:
search_result_get_path_list	search.c	/^static GList *search_result_get_path_list(SearchData *sd)$/;"	f	file:
search_result_keypress_cb	search.c	/^static gint search_result_keypress_cb(GtkWidget *widget, GdkEventKey *event, gpointer data)$/;"	f	file:
search_result_menu	search.c	/^static GtkWidget *search_result_menu(SearchData *sd, gint on_row, gint empty)$/;"	f	file:
search_result_menu_pos_cb	search.c	/^static void search_result_menu_pos_cb(GtkMenu *menu, gint *x, gint *y, gboolean *push_in, gpointer data)$/;"	f	file:
search_result_press_cb	search.c	/^static gint search_result_press_cb(GtkWidget *widget, GdkEventButton *bevent, gpointer data)$/;"	f	file:
search_result_refine_list	search.c	/^static GList *search_result_refine_list(SearchData *sd)$/;"	f	file:
search_result_release_cb	search.c	/^static gint search_result_release_cb(GtkWidget *widget, GdkEventButton *bevent, gpointer data)$/;"	f	file:
search_result_remove	search.c	/^static void search_result_remove(SearchData *sd, FileData *fd)$/;"	f	file:
search_result_remove_item	search.c	/^static void search_result_remove_item(SearchData *sd, FileData *fd, GtkTreeIter *iter)$/;"	f	file:
search_result_remove_selection	search.c	/^static void search_result_remove_selection(SearchData *sd)$/;"	f	file:
search_result_row_selected	search.c	/^static gint search_result_row_selected(SearchData *sd, FileData *fd)$/;"	f	file:
search_result_select_cb	search.c	/^static gboolean search_result_select_cb(GtkTreeSelection *selection, GtkTreeModel *store,$/;"	f	file:
search_result_selection_count	search.c	/^static gint search_result_selection_count(SearchData *sd, gint64 *bytes)$/;"	f	file:
search_result_selection_list	search.c	/^static GList *search_result_selection_list(SearchData *sd)$/;"	f	file:
search_result_selection_util	search.c	/^static gint search_result_selection_util(SearchData *sd, gint64 *bytes, GList **list)$/;"	f	file:
search_result_sort_cb	search.c	/^static gint search_result_sort_cb(GtkTreeModel *model, GtkTreeIter *a, GtkTreeIter *b, gpointer data)$/;"	f	file:
search_result_thumb_do	search.c	/^static void search_result_thumb_do(SearchData *sd)$/;"	f	file:
search_result_thumb_done_cb	search.c	/^static void search_result_thumb_done_cb(ThumbLoader *tl, gpointer data)$/;"	f	file:
search_result_thumb_enable	search.c	/^static void search_result_thumb_enable(SearchData *sd, gint enable)$/;"	f	file:
search_result_thumb_height	search.c	/^static void search_result_thumb_height(SearchData *sd)$/;"	f	file:
search_result_thumb_set	search.c	/^static void search_result_thumb_set(SearchData *sd, FileData *fd, GtkTreeIter *iter)$/;"	f	file:
search_result_thumb_step	search.c	/^static void search_result_thumb_step(SearchData *sd)$/;"	f	file:
search_result_update_idle_cancel	search.c	/^static void search_result_update_idle_cancel(SearchData *sd)$/;"	f	file:
search_result_update_idle_cb	search.c	/^static gint search_result_update_idle_cb(gpointer data)$/;"	f	file:
search_result_util	search.c	/^static gint search_result_util(SearchData *sd, gint64 *bytes, GList **list)$/;"	f	file:
search_similarity	search.c	/^	gint   search_similarity;$/;"	m	struct:_SearchData	file:
search_similarity_cd	search.c	/^	CacheData *search_similarity_cd;$/;"	m	struct:_SearchData	file:
search_similarity_load_done_cb	search.c	/^static void search_similarity_load_done_cb(ImageLoader *il, gpointer data)$/;"	f	file:
search_similarity_path	search.c	/^	gchar *search_similarity_path;$/;"	m	struct:_SearchData	file:
search_size	search.c	/^	gint64 search_size;$/;"	m	struct:_SearchData	file:
search_size_end	search.c	/^	gint64 search_size_end;$/;"	m	struct:_SearchData	file:
search_start	search.c	/^static void search_start(SearchData *sd)$/;"	f	file:
search_start_cb	search.c	/^static void search_start_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
search_status_update	search.c	/^static void search_status_update(SearchData *sd)$/;"	f	file:
search_step_cb	search.c	/^static gint search_step_cb(gpointer data)$/;"	f	file:
search_stop	search.c	/^static void search_stop(SearchData *sd)$/;"	f	file:
search_thumb_toggle_cb	search.c	/^static void search_thumb_toggle_cb(GtkWidget *button, gpointer data)$/;"	f	file:
search_total	search.c	/^	gint search_total;$/;"	m	struct:_SearchData	file:
search_type	search.c	/^	MatchType search_type;$/;"	m	struct:_SearchData	file:
search_width	search.c	/^	gint   search_width;$/;"	m	struct:_SearchData	file:
search_width_end	search.c	/^	gint   search_width_end;$/;"	m	struct:_SearchData	file:
search_window_close	search.c	/^static void search_window_close(SearchData *sd)$/;"	f	file:
search_window_delete_cb	search.c	/^static gint search_window_delete_cb(GtkWidget *widget, GdkEventAny *event, gpointer data)$/;"	f	file:
search_window_destroy_cb	search.c	/^static void search_window_destroy_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
search_window_keypress_cb	search.c	/^static gint search_window_keypress_cb(GtkWidget *widget, GdkEventKey *event, gpointer data)$/;"	f	file:
search_window_list	search.c	/^static GList *search_window_list = NULL;$/;"	v	file:
second	dupe.h	/^	gint second;$/;"	m	struct:_DupeItem
second_drop	dupe.h	/^	gint second_drop;		\/* drop is on second set *\/$/;"	m	struct:_DupeWindow
second_list	dupe.h	/^	GList *second_list;		\/* second set dropped files *\/$/;"	m	struct:_DupeWindow
second_listview	dupe.h	/^	GtkWidget *second_listview;$/;"	m	struct:_DupeWindow
second_set	dupe.h	/^	gint second_set;		\/* second set enabled ? *\/$/;"	m	struct:_DupeWindow
second_status_label	dupe.h	/^	GtkWidget *second_status_label;$/;"	m	struct:_DupeWindow
second_vbox	dupe.h	/^	GtkWidget *second_vbox;		\/* box of second widgets *\/$/;"	m	struct:_DupeWindow
select_data	typedefs.h	/^	gpointer select_data;$/;"	m	struct:_ViewDirList
select_data	typedefs.h	/^	gpointer select_data;$/;"	m	struct:_ViewDirTree
select_data	ui_bookmark.c	/^	gpointer select_data;$/;"	m	struct:_BookMarkData	file:
select_data	ui_pathsel.c	/^	gpointer select_data;$/;"	m	struct:_Dest_Data	file:
select_fd	typedefs.h	/^	FileData *select_fd;$/;"	m	struct:_ViewFileList
select_func	typedefs.h	/^	void (*select_func)(ViewDirList *vdl, const gchar *path, gpointer data);$/;"	m	struct:_ViewDirList
select_func	typedefs.h	/^	void (*select_func)(ViewDirTree *vdt, const gchar *path, gpointer data);$/;"	m	struct:_ViewDirTree
select_func	ui_bookmark.c	/^	void (*select_func)(const gchar *path, gpointer data);$/;"	m	struct:_BookMarkData	file:
select_func	ui_pathsel.c	/^	void (*select_func)(const gchar *path, gpointer data);$/;"	m	struct:_Dest_Data	file:
select_idle_id	typedefs.h	/^	gint select_idle_id;$/;"	m	struct:_ViewFileList
selected	view_file_icon.c	/^	SelectionType selected;$/;"	m	struct:_IconData	file:
selection	bar_sort.c	/^	SortSelectionType selection;$/;"	m	struct:_SortData	file:
selection	typedefs.h	/^	GList *selection;$/;"	m	struct:_CollectTable
selection	typedefs.h	/^	GList *selection;$/;"	m	struct:_ViewFileIcon
selection_is_ok	view_dir_tree.c	/^static gint selection_is_ok = FALSE;$/;"	v	file:
server	remote.h	/^	gint server;$/;"	m	struct:_RemoteConnection
set_bg_color	cellrenderericon.c	/^set_bg_color (GQvCellRendererIcon *cellicon,$/;"	f	file:
set_cursor	view_dir_tree.c	/^static void set_cursor(GtkWidget *widget, GdkCursorType cursor_type)$/;"	f	file:
set_fg_color	cellrenderericon.c	/^static void set_fg_color (GQvCellRendererIcon *cellicon,$/;"	f	file:
setup_count	dupe.h	/^	gint setup_count;$/;"	m	struct:_DupeWindow
setup_default_options	main.c	/^static void setup_default_options(void)$/;"	f	file:
setup_done	dupe.h	/^	gint setup_done;$/;"	m	struct:_DupeWindow
setup_mask	dupe.h	/^	DupeMatchType setup_mask;	\/* ditto *\/$/;"	m	struct:_DupeWindow
setup_n	dupe.h	/^	gint setup_n;			\/* these are merely for speed optimization *\/$/;"	m	struct:_DupeWindow
setup_point	dupe.h	/^	GList *setup_point;		\/* ditto *\/$/;"	m	struct:_DupeWindow
setup_time	dupe.h	/^	guint64 setup_time;$/;"	m	struct:_DupeWindow
setup_time_count	dupe.h	/^	guint64 setup_time_count;$/;"	m	struct:_DupeWindow
sharedstatedir	Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	icons/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	icons/svg/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
shift_color	ui_tree_edit.c	/^void shift_color(GdkColor *src, gshort val, gint direction)$/;"	f
short_name	exif.h	/^	const gchar *short_name;$/;"	m	struct:_ExifFormatAttrib
show_about_window	preferences.c	/^void show_about_window(void)$/;"	f
show_config_window	preferences.c	/^void show_config_window(void)$/;"	f
show_dot_files	globals.c	/^gint show_dot_files = FALSE;$/;"	v
show_dot_files_c	preferences.c	/^static gint show_dot_files_c;$/;"	v	file:
show_hidden	ui_pathsel.c	/^	gint show_hidden;$/;"	m	struct:_Dest_Data	file:
show_icon_names	globals.c	/^gint show_icon_names = TRUE;$/;"	v
show_info	image-overlay.c	/^	gint show_info;$/;"	m	struct:_OverlayStateData	file:
show_status	image-overlay.c	/^	gint show_status;$/;"	m	struct:_OverlayStateData	file:
show_text	cellrenderericon.h	/^	gboolean show_text;$/;"	m	struct:_GQvCellRendererIcon
show_text	typedefs.h	/^	gint show_text;$/;"	m	struct:_CollectTable
show_text	typedefs.h	/^	gint show_text;$/;"	m	struct:_ViewFileIcon
show_thumbs	dupe.h	/^	gint show_thumbs;$/;"	m	struct:_DupeWindow
shrunk	typedefs.h	/^	gint shrunk;$/;"	m	struct:_ImageLoader
sighandler_sigpipe	remote.c	/^static void sighandler_sigpipe(int sig)$/;"	f	file:
signals	pixbuf-renderer.c	/^static guint signals[SIGNAL_COUNT] = { 0 };$/;"	v	file:
sigpipe_occured	remote.c	/^static sig_atomic_t sigpipe_occured = FALSE;$/;"	v	file:
sim	cache.h	/^	ImageSimilarityData *sim;$/;"	m	struct:_CacheData
simd	dupe.h	/^	ImageSimilarityData *simd;$/;"	m	struct:_DupeItem
similarity	cache.h	/^	gint similarity;$/;"	m	struct:_CacheData
simple_sort	ui_tabcomp.c	/^static gint simple_sort(gconstpointer a, gconstpointer b)$/;"	f	file:
single_scale	print.c	/^	gdouble single_scale;$/;"	m	struct:_PrintWindow	file:
single_scale_spin	print.c	/^	GtkWidget *single_scale_spin;$/;"	m	struct:_PrintWindow	file:
single_x	print.c	/^	gdouble single_x;$/;"	m	struct:_PrintWindow	file:
single_y	print.c	/^	gdouble single_y;$/;"	m	struct:_PrintWindow	file:
size	dupe.h	/^	gint64 size;$/;"	m	struct:_DupeItem
size	exif.h	/^	guint size;$/;"	m	struct:_ExifFormatAttrib
size	pan-types.h	/^	PanImageSize size;$/;"	m	struct:_PanWindow
size	pixbuf-renderer.c	/^	guint size;		\/* est. memory used by pixmap and pixbuf *\/$/;"	m	struct:_ImageTile	file:
size	typedefs.h	/^	gint64 size;		\/* file size (bytes) *\/$/;"	m	struct:_ImageWindow
size	typedefs.h	/^	gint64 size;$/;"	m	struct:_CollectInfo
size	typedefs.h	/^	gint64 size;$/;"	m	struct:_FileData
sizer	ui_misc.c	/^	GtkWidget *sizer;$/;"	m	struct:_SizerData	file:
sizer_default_handle_size	ui_misc.c	/^static gint sizer_default_handle_size(void)$/;"	f	file:
sizer_destroy_cb	ui_misc.c	/^static void sizer_destroy_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
sizer_enter_cb	ui_misc.c	/^static gint sizer_enter_cb(GtkWidget *widget, GdkEventCrossing *event, gpointer data)$/;"	f	file:
sizer_expose_cb	ui_misc.c	/^static gint sizer_expose_cb(GtkWidget *widget, GdkEventExpose *event, gpointer data)$/;"	f	file:
sizer_leave_cb	ui_misc.c	/^static gint sizer_leave_cb(GtkWidget *widget, GdkEventCrossing *event, gpointer data)$/;"	f	file:
sizer_motion_cb	ui_misc.c	/^static gint sizer_motion_cb(GtkWidget *widget, GdkEventButton *bevent, gpointer data)$/;"	f	file:
sizer_new	ui_misc.c	/^GtkWidget *sizer_new(GtkWidget *parent, GtkWidget *bounding_widget,$/;"	f
sizer_press_cb	ui_misc.c	/^static gint sizer_press_cb(GtkWidget *widget, GdkEventButton *bevent, gpointer data)$/;"	f	file:
sizer_realize_cb	ui_misc.c	/^static void sizer_realize_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
sizer_release_cb	ui_misc.c	/^static gint sizer_release_cb(GtkWidget *widget, GdkEventButton *bevent, gpointer data)$/;"	f	file:
sizer_set_limits	ui_misc.c	/^void sizer_set_limits(GtkWidget *sizer,$/;"	f
sizer_set_prelight	ui_misc.c	/^static void sizer_set_prelight(SizerData *sd, gint prelit)$/;"	f	file:
skip	utilops.c	/^	gint skip;$/;"	m	struct:_FileDataMult	file:
slide_count	typedefs.h	/^	gint slide_count;$/;"	m	struct:_SlideShowData
slide_path	typedefs.h	/^	gchar *slide_path;$/;"	m	struct:_SlideShowData
slideshow	typedefs.h	/^	SlideShowData *slideshow;$/;"	m	struct:_LayoutWindow
slideshow_delay	globals.c	/^gint slideshow_delay = 150;$/;"	v
slideshow_delay_c	preferences.c	/^static gint slideshow_delay_c;$/;"	v	file:
slideshow_delay_cb	preferences.c	/^static void slideshow_delay_cb(GtkWidget *spin, gpointer data)$/;"	f	file:
slideshow_free	slideshow.c	/^void slideshow_free(SlideShowData *ss)$/;"	f
slideshow_list_init	slideshow.c	/^static void slideshow_list_init(SlideShowData *ss, gint start_index)$/;"	f	file:
slideshow_loop_cb	slideshow.c	/^static gint slideshow_loop_cb(gpointer data)$/;"	f	file:
slideshow_next	slideshow.c	/^void slideshow_next(SlideShowData *ss)$/;"	f
slideshow_pause_set	slideshow.c	/^void slideshow_pause_set(SlideShowData *ss, gint paused)$/;"	f
slideshow_pause_toggle	slideshow.c	/^gint slideshow_pause_toggle(SlideShowData *ss)$/;"	f
slideshow_paused	slideshow.c	/^gint slideshow_paused(SlideShowData *ss)$/;"	f
slideshow_prev	slideshow.c	/^void slideshow_prev(SlideShowData *ss)$/;"	f
slideshow_random	globals.c	/^gint slideshow_random = FALSE;$/;"	v
slideshow_random_c	preferences.c	/^static gint slideshow_random_c;$/;"	v	file:
slideshow_repeat	globals.c	/^gint slideshow_repeat = FALSE;$/;"	v
slideshow_repeat_c	preferences.c	/^static gint slideshow_repeat_c;$/;"	v	file:
slideshow_should_continue	slideshow.c	/^gint slideshow_should_continue(SlideShowData *ss)$/;"	f
slideshow_start	slideshow.c	/^SlideShowData *slideshow_start(ImageWindow *imd, LayoutWindow *lw, gint start_point,$/;"	f
slideshow_start_from_collection	slideshow.c	/^SlideShowData *slideshow_start_from_collection(ImageWindow *imd, CollectionData *cd,$/;"	f
slideshow_start_from_path_list	slideshow.c	/^SlideShowData *slideshow_start_from_path_list(ImageWindow *imd, GList *list,$/;"	f
slideshow_step	slideshow.c	/^static gint slideshow_step(SlideShowData *ss, gint forward)$/;"	f	file:
slideshow_timer_reset	slideshow.c	/^static void slideshow_timer_reset(SlideShowData *ss, gint reset)$/;"	f	file:
sort_ascend	typedefs.h	/^	gint sort_ascend;$/;"	m	struct:_LayoutWindow
sort_ascend	typedefs.h	/^	gint sort_ascend;$/;"	m	struct:_ViewFileIcon
sort_ascend	typedefs.h	/^	gint sort_ascend;$/;"	m	struct:_ViewFileList
sort_file_cb	filelist.c	/^static gint sort_file_cb(void *a, void *b)$/;"	f	file:
sort_matchdata_dimensions	search.c	/^static gint sort_matchdata_dimensions(MatchFileData *a, MatchFileData *b)$/;"	f	file:
sort_method	typedefs.h	/^	SortType sort_method;$/;"	m	struct:_CollectionData
sort_method	typedefs.h	/^	SortType sort_method;$/;"	m	struct:_LayoutWindow
sort_method	typedefs.h	/^	SortType sort_method;$/;"	m	struct:_ViewFileIcon
sort_method	typedefs.h	/^	SortType sort_method;$/;"	m	struct:_ViewFileList
sort_type_get_text	menu.c	/^gchar *sort_type_get_text(SortType method)$/;"	f
source	print.c	/^	PrintSource source;$/;"	m	struct:_PrintWindow	file:
source	thumb_standard.c	/^	gchar *source;$/;"	m	struct:_TMaintMove	file:
source	utilops.c	/^	gchar *source;$/;"	m	struct:_FileDataMult	file:
source	utilops.c	/^	gchar *source;$/;"	m	struct:_FileDataSingle	file:
source_list	print.c	/^	GList *source_list;$/;"	m	struct:_PrintWindow	file:
source_list	ui_utildlg.h	/^	GList *source_list;$/;"	m	struct:_FileDialog
source_list	utilops.c	/^	GList *source_list;$/;"	m	struct:_FileDataMult	file:
source_mode	thumb_standard.h	/^	mode_t source_mode;$/;"	m	struct:_ThumbLoaderStd
source_mtime	thumb_standard.h	/^	time_t source_mtime;$/;"	m	struct:_ThumbLoaderStd
source_next	utilops.c	/^	GList *source_next;$/;"	m	struct:_FileDataMult	file:
source_path	print.c	/^	gchar *source_path;$/;"	m	struct:_PrintWindow	file:
source_path	thumb_standard.h	/^	gchar *source_path;$/;"	m	struct:_ThumbLoaderStd
source_path	ui_utildlg.h	/^	gchar *source_path;$/;"	m	struct:_FileDialog
source_path	utilops.c	/^	gchar *source_path;$/;"	m	struct:_UtilityData	file:
source_selection	print.c	/^	GList *source_selection;$/;"	m	struct:_PrintWindow	file:
source_size	thumb_standard.h	/^	off_t source_size;$/;"	m	struct:_ThumbLoaderStd
source_tile_height	pixbuf-renderer.h	/^	gint source_tile_height;$/;"	m	struct:_PixbufRenderer
source_tile_width	pixbuf-renderer.h	/^	gint source_tile_width;$/;"	m	struct:_PixbufRenderer
source_tiles	pixbuf-renderer.h	/^	GList *source_tiles;	\/* list of active source tiles *\/$/;"	m	struct:_PixbufRenderer
source_tiles_cache_size	pixbuf-renderer.h	/^	gint source_tiles_cache_size;$/;"	m	struct:_PixbufRenderer
source_tiles_enabled	pixbuf-renderer.h	/^	gboolean source_tiles_enabled;$/;"	m	struct:_PixbufRenderer
source_uri	thumb_standard.c	/^	gchar *source_uri;$/;"	m	struct:_TMaintMove	file:
spin_d	ui_misc.c	/^	GtkWidget *spin_d;$/;"	m	struct:_DateSelection	file:
spin_height	search.c	/^	GtkWidget *spin_height;$/;"	m	struct:_SearchData	file:
spin_height_end	search.c	/^	GtkWidget *spin_height_end;$/;"	m	struct:_SearchData	file:
spin_increase	ui_misc.c	/^static void spin_increase(GtkWidget *spin, gint value)$/;"	f	file:
spin_m	ui_misc.c	/^	GtkWidget *spin_m;$/;"	m	struct:_DateSelection	file:
spin_similarity	search.c	/^	GtkWidget *spin_similarity;$/;"	m	struct:_SearchData	file:
spin_size	search.c	/^	GtkWidget *spin_size;$/;"	m	struct:_SearchData	file:
spin_size_end	search.c	/^	GtkWidget *spin_size_end;$/;"	m	struct:_SearchData	file:
spin_width	search.c	/^	GtkWidget *spin_width;$/;"	m	struct:_SearchData	file:
spin_width_end	search.c	/^	GtkWidget *spin_width_end;$/;"	m	struct:_SearchData	file:
spin_y	ui_misc.c	/^	GtkWidget *spin_y;$/;"	m	struct:_DateSelection	file:
spinner	cache_maint.c	/^	GtkWidget *spinner;$/;"	m	struct:_CMData	file:
spinner	cache_maint.c	/^	GtkWidget *spinner;$/;"	m	struct:_CleanData	file:
spinner	editors.c	/^	GtkWidget *spinner;$/;"	m	struct:_EditorVerboseData	file:
spinner	search.c	/^	GtkWidget *spinner;$/;"	m	struct:_SearchData	file:
spinner_destroy_cb	ui_spinner.c	/^static void spinner_destroy_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
spinner_increment_frame	ui_spinner.c	/^static void spinner_increment_frame(SpinnerData *sp)$/;"	f	file:
spinner_loop_cb	ui_spinner.c	/^static gboolean spinner_loop_cb(gpointer data)$/;"	f	file:
spinner_new	ui_spinner.c	/^GtkWidget *spinner_new(const gchar *path, gint interval)$/;"	f
spinner_set_frame	ui_spinner.c	/^static void spinner_set_frame(SpinnerData *sp, gint frame)$/;"	f	file:
spinner_set_interval	ui_spinner.c	/^void spinner_set_interval(GtkWidget *spinner, gint interval)$/;"	f
spinner_set_timeout	ui_spinner.c	/^static void spinner_set_timeout(SpinnerData *sp, gint interval)$/;"	f	file:
spinner_step	ui_spinner.c	/^void spinner_step(GtkWidget *spinner, gint reset)$/;"	f
sr_menu_clear_cb	search.c	/^static void sr_menu_clear_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
sr_menu_collection_cb	search.c	/^static void sr_menu_collection_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
sr_menu_copy_cb	search.c	/^static void sr_menu_copy_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
sr_menu_delete_cb	search.c	/^static void sr_menu_delete_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
sr_menu_edit_cb	search.c	/^static void sr_menu_edit_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
sr_menu_info_cb	search.c	/^static void sr_menu_info_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
sr_menu_move_cb	search.c	/^static void sr_menu_move_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
sr_menu_print_cb	search.c	/^static void sr_menu_print_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
sr_menu_remove_cb	search.c	/^static void sr_menu_remove_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
sr_menu_rename_cb	search.c	/^static void sr_menu_rename_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
sr_menu_select_all_cb	search.c	/^static void sr_menu_select_all_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
sr_menu_select_none_cb	search.c	/^static void sr_menu_select_none_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
sr_menu_view_cb	search.c	/^static void sr_menu_view_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
sr_menu_viewnew_cb	search.c	/^static void sr_menu_viewnew_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
srcdir	Makefile	/^srcdir = .$/;"	m
srcdir	icons/Makefile	/^srcdir = .$/;"	m
srcdir	icons/svg/Makefile	/^srcdir = .$/;"	m
ss	img-view.c	/^	SlideShowData *ss;$/;"	m	struct:_ViewWindow	file:
standard_loader	thumb_standard.h	/^	gint standard_loader;$/;"	m	struct:_ThumbLoaderStd
standard_loader	typedefs.h	/^	gint standard_loader;$/;"	m	struct:_ThumbLoader
start_editor_from_file	editors.c	/^void start_editor_from_file(gint n, const gchar *path)$/;"	f
start_editor_from_path_list	editors.c	/^void start_editor_from_path_list(gint n, GList *list)$/;"	f
startup_blank	main.c	/^static gint startup_blank = FALSE;$/;"	v	file:
startup_command_line_collection	main.c	/^static gint startup_command_line_collection = FALSE;$/;"	v	file:
startup_full_screen	main.c	/^static gint startup_full_screen = FALSE;$/;"	v	file:
startup_in_slideshow	main.c	/^static gint startup_in_slideshow = FALSE;$/;"	v	file:
startup_path	globals.c	/^gchar *startup_path = NULL;$/;"	v
startup_path_enable	globals.c	/^gint startup_path_enable = FALSE;$/;"	v
startup_path_enable_c	preferences.c	/^static gint startup_path_enable_c;$/;"	v	file:
startup_path_entry	preferences.c	/^static GtkWidget *startup_path_entry;$/;"	v	file:
startup_path_set_current	preferences.c	/^static void startup_path_set_current(GtkWidget *widget, gpointer data)$/;"	f	file:
stat_utf8	ui_fileops.c	/^gint stat_utf8(const gchar *s, struct stat *st)$/;"	f
state	typedefs.h	/^	ImageState state;	\/* mask of IMAGE_STATE_* flags about current image *\/$/;"	m	struct:_ImageWindow
status_box	typedefs.h	/^	GtkWidget *status_box;$/;"	m	struct:_CollectWindow
status_label	dupe.h	/^	GtkWidget *status_label;$/;"	m	struct:_DupeWindow
status_label	typedefs.h	/^	GtkWidget *status_label;$/;"	m	struct:_CollectTable
stop_data	typedefs.h	/^	gpointer stop_data;$/;"	m	struct:_FullScreenData
stop_data	typedefs.h	/^	gpointer stop_data;$/;"	m	struct:_SlideShowData
stop_func	typedefs.h	/^	void (*stop_func)(FullScreenData *, gpointer);$/;"	m	struct:_FullScreenData
stop_func	typedefs.h	/^	void (*stop_func)(SlideShowData *, gpointer);$/;"	m	struct:_SlideShowData
string_append_raw_bytes	exif.c	/^static GString *string_append_raw_bytes(GString *string, gpointer data, gint ne)$/;"	f	file:
style	layout_config.c	/^	gint style;$/;"	m	struct:_LayoutConfig	file:
style_shift_color	ui_tree_edit.c	/^void style_shift_color(GtkStyle *style, GtkStateType type, gshort shift_value, gint direction)$/;"	f
style_widgets	layout_config.c	/^	GList *style_widgets;$/;"	m	struct:_LayoutConfig	file:
subdir	Makefile	/^subdir = src$/;"	m
subdir	icons/Makefile	/^subdir = src\/icons$/;"	m
subdir	icons/svg/Makefile	/^subdir = src\/icons\/svg$/;"	m
submenu_add_alter	menu.c	/^GtkWidget *submenu_add_alter(GtkWidget *menu, GCallback func, gpointer data)$/;"	f
submenu_add_alter_item	menu.c	/^static void submenu_add_alter_item(GtkWidget *menu, GCallback func, AlterType type,$/;"	f	file:
submenu_add_edit	menu.c	/^GtkWidget *submenu_add_edit(GtkWidget *menu, GtkWidget **menu_item, GCallback func, gpointer data)$/;"	f
submenu_add_sort	menu.c	/^GtkWidget *submenu_add_sort(GtkWidget *menu, GCallback func, gpointer data,$/;"	f
submenu_add_sort_item	menu.c	/^static GtkWidget *submenu_add_sort_item(GtkWidget *menu, GtkWidget *parent,$/;"	f	file:
submenu_item_get_data	menu.c	/^gpointer submenu_item_get_data(GtkWidget *menu)$/;"	f
svg_images	icons/svg/Makefile	/^svg_images = \\$/;"	m
symlink_utf8	ui_fileops.c	/^gint symlink_utf8(const gchar *source, const gchar *target)$/;"	f
sync_idle_id	typedefs.h	/^	gint sync_idle_id;$/;"	m	struct:_CollectTable
sync_idle_id	typedefs.h	/^	gint sync_idle_id;$/;"	m	struct:_ViewFileIcon
sysconfdir	Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	icons/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	icons/svg/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
tab_completion_add_select_button	ui_tabcomp.c	/^void tab_completion_add_select_button(GtkWidget *entry, const gchar *title, gint folders_only)$/;"	f
tab_completion_add_tab_func	ui_tabcomp.c	/^void tab_completion_add_tab_func(GtkWidget *entry, void (*tab_func)(const gchar *, gpointer), gpointer data)$/;"	f
tab_completion_add_to_entry	ui_tabcomp.c	/^void tab_completion_add_to_entry(GtkWidget *entry, void (*enter_func)(const gchar *, gpointer), gpointer data)$/;"	f
tab_completion_append_to_history	ui_tabcomp.c	/^void tab_completion_append_to_history(GtkWidget *entry, const gchar *path)$/;"	f
tab_completion_button_pressed	ui_tabcomp.c	/^static void tab_completion_button_pressed(GtkWidget *widget, gpointer data)$/;"	f	file:
tab_completion_button_size_allocate	ui_tabcomp.c	/^static void tab_completion_button_size_allocate(GtkWidget *button, GtkAllocation *allocation, gpointer data)$/;"	f	file:
tab_completion_create_complete_button	ui_tabcomp.c	/^static GtkWidget *tab_completion_create_complete_button(GtkWidget *entry, GtkWidget *parent)$/;"	f	file:
tab_completion_destroy	ui_tabcomp.c	/^static void tab_completion_destroy(GtkWidget *widget, gpointer data)$/;"	f	file:
tab_completion_do	ui_tabcomp.c	/^static gint tab_completion_do(TabCompData *td)$/;"	f	file:
tab_completion_emit_enter_signal	ui_tabcomp.c	/^static gint tab_completion_emit_enter_signal(TabCompData *td)$/;"	f	file:
tab_completion_emit_tab_signal	ui_tabcomp.c	/^static void tab_completion_emit_tab_signal(TabCompData *td)$/;"	f	file:
tab_completion_free_list	ui_tabcomp.c	/^static void tab_completion_free_list(TabCompData *td)$/;"	f	file:
tab_completion_key_pressed	ui_tabcomp.c	/^static gint tab_completion_key_pressed(GtkWidget *widget, GdkEventKey *event, gpointer data)$/;"	f	file:
tab_completion_new	ui_tabcomp.c	/^GtkWidget *tab_completion_new(GtkWidget **entry, const gchar *text,$/;"	f
tab_completion_new_with_history	ui_tabcomp.c	/^GtkWidget *tab_completion_new_with_history(GtkWidget **entry, const gchar *text,$/;"	f
tab_completion_popup_cb	ui_tabcomp.c	/^static void tab_completion_popup_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
tab_completion_popup_key_press	ui_tabcomp.c	/^static gint tab_completion_popup_key_press(GtkWidget *widget, GdkEventKey *event, gpointer data)$/;"	f	file:
tab_completion_popup_list	ui_tabcomp.c	/^static void tab_completion_popup_list(TabCompData *td, GList *list)$/;"	f	file:
tab_completion_popup_pos_cb	ui_tabcomp.c	/^static void tab_completion_popup_pos_cb(GtkMenu *menu, gint *x, gint *y, gboolean *push_in, gpointer data)$/;"	f	file:
tab_completion_read_dir	ui_tabcomp.c	/^static void tab_completion_read_dir(TabCompData *td, const gchar *path)$/;"	f	file:
tab_completion_select_cancel_cb	ui_tabcomp.c	/^static void tab_completion_select_cancel_cb(FileDialog *fd, gpointer data)$/;"	f	file:
tab_completion_select_ok_cb	ui_tabcomp.c	/^static void tab_completion_select_ok_cb(FileDialog *fd, gpointer data)$/;"	f	file:
tab_completion_select_pressed	ui_tabcomp.c	/^static void tab_completion_select_pressed(GtkWidget *widget, gpointer data)$/;"	f	file:
tab_completion_select_show	ui_tabcomp.c	/^static void tab_completion_select_show(TabCompData *td)$/;"	f	file:
tab_completion_set_to_last_history	ui_tabcomp.c	/^const gchar *tab_completion_set_to_last_history(GtkWidget *entry)$/;"	f
tab_data	ui_tabcomp.c	/^	gpointer tab_data;$/;"	m	struct:_TabCompData	file:
tab_func	ui_tabcomp.c	/^	void (*tab_func)(const gchar *, gpointer);$/;"	m	struct:_TabCompData	file:
tab_list	info.h	/^	GList *tab_list;$/;"	m	struct:_InfoData
table	bar_exif.c	/^	GtkWidget *table;$/;"	m	struct:_ExifBar	file:
table	dupe.h	/^	GtkWidget *table;$/;"	m	struct:_DupeWindow
table	typedefs.h	/^	CollectTable *table;$/;"	m	struct:_CollectWindow
table_add_line	bar_exif.c	/^static GtkWidget *table_add_line(GtkWidget *table, gint x, gint y,$/;"	f	file:
table_add_line	info.c	/^GtkWidget *table_add_line(GtkWidget *table, gint x, gint y,$/;"	f
table_add_line_custom	bar_exif.c	/^static void table_add_line_custom(GtkWidget *table, gint x, gint y,$/;"	f	file:
tag	exif.h	/^	guint		tag;$/;"	m	struct:_ExifMarker
tag	exif.h	/^	guint tag;$/;"	m	struct:_ExifItem
target_alias	Makefile	/^target_alias = $/;"	m
target_alias	icons/Makefile	/^target_alias = $/;"	m
target_alias	icons/svg/Makefile	/^target_alias = $/;"	m
text	cellrenderericon.h	/^	gchar *text;$/;"	m	struct:_GQvCellRendererIcon
text	editors.c	/^	GtkWidget *text;$/;"	m	struct:_EditorVerboseData	file:
text	pan-types.h	/^	gchar *text;$/;"	m	struct:_PanItem
text	search.c	/^	const gchar *text;$/;"	m	struct:_MatchList	file:
text_attr	pan-types.h	/^	PanTextAttrType text_attr;$/;"	m	struct:_PanItem
text_b	print.c	/^	guint8		text_b;$/;"	m	struct:_PrintWindow	file:
text_char_to_num	layout_config.c	/^static gint text_char_to_num(const gchar *text, gint n)$/;"	f	file:
text_fields	print.c	/^	TextInfo	text_fields;$/;"	m	struct:_PrintWindow	file:
text_from_size	filelist.c	/^gchar *text_from_size(gint64 size)$/;"	f
text_from_size_abrev	filelist.c	/^gchar *text_from_size_abrev(gint64 size)$/;"	f
text_from_time	filelist.c	/^const gchar *text_from_time(time_t t)$/;"	f
text_g	print.c	/^	guint8		text_g;$/;"	m	struct:_PrintWindow	file:
text_points	print.c	/^	gint		text_points;$/;"	m	struct:_PrintWindow	file:
text_r	print.c	/^	guint8		text_r;$/;"	m	struct:_PrintWindow	file:
text_search_menu_date	search.c	/^static const MatchList text_search_menu_date[] = {$/;"	v	file:
text_search_menu_keyword	search.c	/^static const MatchList text_search_menu_keyword[] = {$/;"	v	file:
text_search_menu_name	search.c	/^static const MatchList text_search_menu_name[] = {$/;"	v	file:
text_search_menu_path	search.c	/^static const MatchList text_search_menu_path[] = {$/;"	v	file:
text_search_menu_size	search.c	/^static const MatchList text_search_menu_size[] = {$/;"	v	file:
textdomain	intl.h	15;"	d
thumb_button	typedefs.h	/^	GtkWidget *thumb_button;$/;"	m	struct:_LayoutWindow
thumb_enable	search.c	/^	gint thumb_enable;$/;"	m	struct:_SearchData	file:
thumb_fd	search.c	/^	FileData *thumb_fd;$/;"	m	struct:_SearchData	file:
thumb_gap	pan-types.h	/^	gint thumb_gap;$/;"	m	struct:_PanWindow
thumb_info	typedefs.h	/^	CollectInfo *thumb_info;$/;"	m	struct:_CollectionData
thumb_item	dupe.h	/^	DupeItem *thumb_item;$/;"	m	struct:_DupeWindow
thumb_loader	dupe.h	/^	ThumbLoader *thumb_loader;$/;"	m	struct:_DupeWindow
thumb_loader	search.c	/^	ThumbLoader *thumb_loader;$/;"	m	struct:_SearchData	file:
thumb_loader	typedefs.h	/^	ThumbLoader *thumb_loader;$/;"	m	struct:_CollectionData
thumb_loader_delay_done	thumb.c	/^static void thumb_loader_delay_done(ThumbLoader *tl)$/;"	f	file:
thumb_loader_done_cb	thumb.c	/^static void thumb_loader_done_cb(ImageLoader *il, gpointer data)$/;"	f	file:
thumb_loader_done_delay_cb	thumb.c	/^static gint thumb_loader_done_delay_cb(gpointer data)$/;"	f	file:
thumb_loader_error_cb	thumb.c	/^static void thumb_loader_error_cb(ImageLoader *il, gpointer data)$/;"	f	file:
thumb_loader_free	thumb.c	/^void thumb_loader_free(ThumbLoader *tl)$/;"	f
thumb_loader_get_pixbuf	thumb.c	/^GdkPixbuf *thumb_loader_get_pixbuf(ThumbLoader *tl, gint with_fallback)$/;"	f
thumb_loader_mark_failure	thumb.c	/^static gint thumb_loader_mark_failure(ThumbLoader *tl)$/;"	f	file:
thumb_loader_new	thumb.c	/^ThumbLoader *thumb_loader_new(gint width, gint height)$/;"	f
thumb_loader_percent_cb	thumb.c	/^static void thumb_loader_percent_cb(ImageLoader *il, gdouble percent, gpointer data)$/;"	f	file:
thumb_loader_save_to_cache	thumb.c	/^static gint thumb_loader_save_to_cache(ThumbLoader *tl)$/;"	f	file:
thumb_loader_set_cache	thumb.c	/^void thumb_loader_set_cache(ThumbLoader *tl, gint enable_cache, gint local, gint retry_failed)$/;"	f
thumb_loader_set_callbacks	thumb.c	/^void thumb_loader_set_callbacks(ThumbLoader *tl,$/;"	f
thumb_loader_setup	thumb.c	/^static void thumb_loader_setup(ThumbLoader *tl, gchar *path)$/;"	f	file:
thumb_loader_start	thumb.c	/^gint thumb_loader_start(ThumbLoader *tl, const gchar *path)$/;"	f
thumb_loader_std_cache_path	thumb_standard.c	/^static gchar *thumb_loader_std_cache_path(ThumbLoaderStd *tl, gint local, GdkPixbuf *pixbuf, gint fail)$/;"	f	file:
thumb_loader_std_done_cb	thumb_standard.c	/^static void thumb_loader_std_done_cb(ImageLoader *il, gpointer data)$/;"	f	file:
thumb_loader_std_error_cb	thumb_standard.c	/^static void thumb_loader_std_error_cb(ImageLoader *il, gpointer data)$/;"	f	file:
thumb_loader_std_fail_check	thumb_standard.c	/^static gint thumb_loader_std_fail_check(ThumbLoaderStd *tl)$/;"	f	file:
thumb_loader_std_finish	thumb_standard.c	/^static GdkPixbuf *thumb_loader_std_finish(ThumbLoaderStd *tl, GdkPixbuf *pixbuf, gint shrunk)$/;"	f	file:
thumb_loader_std_free	thumb_standard.c	/^void thumb_loader_std_free(ThumbLoaderStd *tl)$/;"	f
thumb_loader_std_get_pixbuf	thumb_standard.c	/^GdkPixbuf *thumb_loader_std_get_pixbuf(ThumbLoaderStd *tl, gint with_fallback)$/;"	f
thumb_loader_std_new	thumb_standard.c	/^ThumbLoaderStd *thumb_loader_std_new(gint width, gint height)$/;"	f
thumb_loader_std_next_source	thumb_standard.c	/^static gint thumb_loader_std_next_source(ThumbLoaderStd *tl, gint remove_broken)$/;"	f	file:
thumb_loader_std_progress_cb	thumb_standard.c	/^static void thumb_loader_std_progress_cb(ImageLoader *il, gdouble percent, gpointer data)$/;"	f	file:
thumb_loader_std_reset	thumb_standard.c	/^static void thumb_loader_std_reset(ThumbLoaderStd *tl)$/;"	f	file:
thumb_loader_std_save	thumb_standard.c	/^static void thumb_loader_std_save(ThumbLoaderStd *tl, GdkPixbuf *pixbuf)$/;"	f	file:
thumb_loader_std_scale_aspect	thumb_standard.c	/^static gint thumb_loader_std_scale_aspect(gint req_w, gint req_h, gint old_w, gint old_h,$/;"	f	file:
thumb_loader_std_set_cache	thumb_standard.c	/^void thumb_loader_std_set_cache(ThumbLoaderStd *tl, gint enable_cache, gint local, gint retry_failed)$/;"	f
thumb_loader_std_set_callbacks	thumb_standard.c	/^void thumb_loader_std_set_callbacks(ThumbLoaderStd *tl,$/;"	f
thumb_loader_std_setup	thumb_standard.c	/^static gint thumb_loader_std_setup(ThumbLoaderStd *tl, const gchar *path)$/;"	f	file:
thumb_loader_std_start	thumb_standard.c	/^gint thumb_loader_std_start(ThumbLoaderStd *tl, const gchar *path)$/;"	f
thumb_loader_std_thumb_file_validate	thumb_standard.c	/^ThumbLoaderStd *thumb_loader_std_thumb_file_validate(const gchar *thumb_path, gint allowed_days,$/;"	f
thumb_loader_std_thumb_file_validate_cancel	thumb_standard.c	/^void thumb_loader_std_thumb_file_validate_cancel(ThumbLoaderStd *tl)$/;"	f
thumb_loader_std_thumb_file_validate_done_cb	thumb_standard.c	/^static void thumb_loader_std_thumb_file_validate_done_cb(ThumbLoaderStd *tl, gpointer data)$/;"	f	file:
thumb_loader_std_thumb_file_validate_error_cb	thumb_standard.c	/^static void thumb_loader_std_thumb_file_validate_error_cb(ThumbLoaderStd *tl, gpointer data)$/;"	f	file:
thumb_loader_std_thumb_file_validate_finish	thumb_standard.c	/^static void thumb_loader_std_thumb_file_validate_finish(ThumbValidate *tv, gint valid)$/;"	f	file:
thumb_loader_std_thumb_file_validate_free	thumb_standard.c	/^static void thumb_loader_std_thumb_file_validate_free(ThumbValidate *tv)$/;"	f	file:
thumb_loader_std_thumb_file_validate_idle_cb	thumb_standard.c	/^static gint thumb_loader_std_thumb_file_validate_idle_cb(gpointer data)$/;"	f	file:
thumb_loader_std_validate	thumb_standard.c	/^static gint thumb_loader_std_validate(ThumbLoaderStd *tl, GdkPixbuf *pixbuf)$/;"	f	file:
thumb_max_height	globals.c	/^gint thumb_max_height = 72;$/;"	v
thumb_max_height_c	preferences.c	/^static gint thumb_max_height_c;$/;"	v	file:
thumb_max_width	globals.c	/^gint thumb_max_width = 96;$/;"	v
thumb_max_width_c	preferences.c	/^static gint thumb_max_width_c;$/;"	v	file:
thumb_path	thumb_standard.c	/^	gchar *thumb_path;$/;"	m	struct:_TMaintMove	file:
thumb_path	thumb_standard.h	/^	gchar *thumb_path;$/;"	m	struct:_ThumbLoaderStd
thumb_path_local	thumb_standard.h	/^	gint thumb_path_local;$/;"	m	struct:_ThumbLoaderStd
thumb_size	pan-types.h	/^	gint thumb_size;$/;"	m	struct:_PanWindow
thumb_size_list	preferences.c	/^static ThumbSize thumb_size_list[] =$/;"	v	file:
thumb_size_menu_cb	preferences.c	/^static void thumb_size_menu_cb(GtkWidget *combo, gpointer data)$/;"	f	file:
thumb_std_cache_path	thumb_standard.c	/^static gchar *thumb_std_cache_path(const gchar *path, const gchar *uri, gint local,$/;"	f	file:
thumb_std_maint_move_idle	thumb_standard.c	/^static gint thumb_std_maint_move_idle(gpointer data)$/;"	f	file:
thumb_std_maint_move_list	thumb_standard.c	/^static GList *thumb_std_maint_move_list = NULL;$/;"	v	file:
thumb_std_maint_move_step	thumb_standard.c	/^static void thumb_std_maint_move_step(TMaintMove *tm)$/;"	f	file:
thumb_std_maint_move_tail	thumb_standard.c	/^static GList *thumb_std_maint_move_tail = NULL;$/;"	v	file:
thumb_std_maint_move_validate_cb	thumb_standard.c	/^static void thumb_std_maint_move_validate_cb(const gchar *path, gint valid, gpointer data)$/;"	f	file:
thumb_std_maint_moved	thumb_standard.c	/^void thumb_std_maint_moved(const gchar *source, const gchar *dest)$/;"	f
thumb_std_maint_remove_one	thumb_standard.c	/^static void thumb_std_maint_remove_one(const gchar *source, const gchar *uri, gint local,$/;"	f	file:
thumb_std_maint_removed	thumb_standard.c	/^void thumb_std_maint_removed(const gchar *source)$/;"	f
thumb_uri	thumb_standard.h	/^	gchar *thumb_uri;$/;"	m	struct:_ThumbLoaderStd
thumbnail_fast	globals.c	/^gint thumbnail_fast = TRUE;$/;"	v
thumbnail_fast_c	preferences.c	/^static gint thumbnail_fast_c;$/;"	v	file:
thumbnail_quality	globals.c	/^gint thumbnail_quality = (gint)GDK_INTERP_TILES;$/;"	v
thumbnail_quality_c	preferences.c	/^static gint thumbnail_quality_c;$/;"	v	file:
thumbnail_spec_standard	globals.c	/^gint thumbnail_spec_standard = TRUE;$/;"	v
thumbnail_spec_standard_c	preferences.c	/^static gint thumbnail_spec_standard_c;$/;"	v	file:
thumbnails_enabled	globals.c	/^gint thumbnails_enabled = FALSE;$/;"	v
thumbs_count	typedefs.h	/^	gint thumbs_count;$/;"	m	struct:_ViewFileIcon
thumbs_count	typedefs.h	/^	gint thumbs_count;$/;"	m	struct:_ViewFileList
thumbs_enabled	typedefs.h	/^	gint thumbs_enabled;$/;"	m	struct:_LayoutWindow
thumbs_enabled	typedefs.h	/^	gint thumbs_enabled;$/;"	m	struct:_ViewFileList
thumbs_fd	typedefs.h	/^	FileData *thumbs_fd;$/;"	m	struct:_ViewFileIcon
thumbs_filedata	typedefs.h	/^	FileData *thumbs_filedata;$/;"	m	struct:_ViewFileList
thumbs_list	typedefs.h	/^	GList *thumbs_list;$/;"	m	struct:_ViewFileIcon
thumbs_loader	typedefs.h	/^	ThumbLoader *thumbs_loader;$/;"	m	struct:_ViewFileIcon
thumbs_loader	typedefs.h	/^	ThumbLoader *thumbs_loader;$/;"	m	struct:_ViewFileList
thumbs_running	typedefs.h	/^	gint thumbs_running;$/;"	m	struct:_ViewFileIcon
thumbs_running	typedefs.h	/^	gint thumbs_running;$/;"	m	struct:_ViewFileList
tiff_table	format_raw.c	/^static guint tiff_table(unsigned char *data, const guint len, guint offset, ExifByteOrder bo,$/;"	f	file:
tile_cache_max	globals.c	/^gint tile_cache_max = 10;$/;"	v
tile_cache_max	pixbuf-renderer.h	/^	gint tile_cache_max;		\/* max mb to use for offscreen buffer *\/$/;"	m	struct:_PixbufRenderer
tile_cache_max_c	preferences.c	/^static gint tile_cache_max_c;$/;"	v	file:
tile_cache_size	pixbuf-renderer.h	/^	gint tile_cache_size;	\/* allocated size of pixmaps\/pixbufs *\/$/;"	m	struct:_PixbufRenderer
tile_cols	pixbuf-renderer.h	/^	gint tile_cols;		\/* count of tile columns *\/$/;"	m	struct:_PixbufRenderer
tile_height	pixbuf-renderer.h	/^	gint tile_height;$/;"	m	struct:_PixbufRenderer
tile_width	pixbuf-renderer.h	/^	gint tile_width;$/;"	m	struct:_PixbufRenderer
tiles	pixbuf-renderer.h	/^	GList *tiles;		\/* list of buffer tiles *\/$/;"	m	struct:_PixbufRenderer
timeout_id	typedefs.h	/^	gint timeout_id;$/;"	m	struct:_SlideShowData
timer_id	image-overlay.c	/^	gint timer_id;$/;"	m	struct:_OverlayStateData	file:
timer_id	ui_spinner.c	/^	gint timer_id;$/;"	m	struct:_SpinnerData	file:
timer_id	ui_tree_edit.c	/^	gint timer_id;$/;"	m	struct:_AutoScrollData	file:
tip_delay_id	typedefs.h	/^	gint tip_delay_id;$/;"	m	struct:_CollectTable
tip_delay_id	typedefs.h	/^	gint tip_delay_id;$/;"	m	struct:_ViewFileIcon
tip_fd	typedefs.h	/^	FileData *tip_fd;$/;"	m	struct:_ViewFileIcon
tip_hide	collect-table.c	/^static void tip_hide(CollectTable *ct)$/;"	f	file:
tip_hide	view_file_icon.c	/^static void tip_hide(ViewFileIcon *vfi)$/;"	f	file:
tip_info	typedefs.h	/^	CollectInfo *tip_info;$/;"	m	struct:_CollectTable
tip_schedule	collect-table.c	/^static void tip_schedule(CollectTable *ct)$/;"	f	file:
tip_schedule	view_file_icon.c	/^static void tip_schedule(ViewFileIcon *vfi)$/;"	f	file:
tip_schedule_cb	collect-table.c	/^static gint tip_schedule_cb(gpointer data)$/;"	f	file:
tip_schedule_cb	view_file_icon.c	/^static gint tip_schedule_cb(gpointer data)$/;"	f	file:
tip_show	collect-table.c	/^static void tip_show(CollectTable *ct)$/;"	f	file:
tip_show	view_file_icon.c	/^static void tip_show(ViewFileIcon *vfi)$/;"	f	file:
tip_unschedule	collect-table.c	/^static void tip_unschedule(CollectTable *ct)$/;"	f	file:
tip_unschedule	view_file_icon.c	/^static void tip_unschedule(ViewFileIcon *vfi)$/;"	f	file:
tip_update	collect-table.c	/^static void tip_update(CollectTable *ct, CollectInfo *info)$/;"	f	file:
tip_update	view_file_icon.c	/^static void tip_update(ViewFileIcon *vfi, FileData *fd)$/;"	f	file:
tip_window	typedefs.h	/^	GtkWidget *tip_window;$/;"	m	struct:_CollectTable
tip_window	typedefs.h	/^	GtkWidget *tip_window;$/;"	m	struct:_ViewFileIcon
title	typedefs.h	/^	gchar *title;		\/* window title to display left of file name *\/$/;"	m	struct:_ImageWindow
title_right	typedefs.h	/^	gchar *title_right;	\/* window title to display right of file name *\/$/;"	m	struct:_ImageWindow
title_show_zoom	typedefs.h	/^	gint title_show_zoom;	\/* option to include zoom in window title *\/$/;"	m	struct:_ImageWindow
tl	cache_maint.c	/^	ThumbLoaderStd *tl;$/;"	m	struct:_CleanData	file:
tl	pan-types.h	/^	ThumbLoader *tl;$/;"	m	struct:_PanWindow
tl	thumb_standard.c	/^	ThumbLoaderStd *tl;$/;"	m	struct:_TMaintMove	file:
tl	thumb_standard.c	/^	ThumbLoaderStd *tl;$/;"	m	struct:_ThumbValidate	file:
todo_mask	cache-loader.h	/^	CacheDataType todo_mask;$/;"	m	struct:_CacheLoader
toolbar	typedefs.h	/^	GtkWidget *toolbar;$/;"	m	struct:_LayoutWindow
toolbar_hidden	globals.c	/^gint toolbar_hidden = FALSE;$/;"	v
toolbar_hidden	typedefs.h	/^	gint toolbar_hidden;$/;"	m	struct:_LayoutWindow
tools	typedefs.h	/^	GtkWidget *tools;$/;"	m	struct:_LayoutWindow
tools_float	globals.c	/^gint tools_float = FALSE;$/;"	v
tools_float	typedefs.h	/^	gint tools_float;$/;"	m	struct:_LayoutWindow
tools_hidden	globals.c	/^gint tools_hidden = FALSE;$/;"	v
tools_hidden	typedefs.h	/^	gint tools_hidden;$/;"	m	struct:_LayoutWindow
tools_pane	typedefs.h	/^	GtkWidget *tools_pane;$/;"	m	struct:_LayoutWindow
top_builddir	Makefile	/^top_builddir = ..$/;"	m
top_builddir	icons/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	icons/svg/Makefile	/^top_builddir = ..\/..\/..$/;"	m
top_srcdir	Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	icons/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	icons/svg/Makefile	/^top_srcdir = ..\/..\/..$/;"	m
top_window	typedefs.h	/^	GtkWidget *top_window;	\/* window that gets title, and window to resize when 'fitting' *\/$/;"	m	struct:_ImageWindow
top_window_sync	typedefs.h	/^	gint top_window_sync;	\/* resize top_window when image dimensions change *\/$/;"	m	struct:_ImageWindow
total	editors.c	/^	gint total;$/;"	m	struct:_EditorVerboseData	file:
transform	Makefile	/^transform = $(program_transform_name)$/;"	m
transform	color-man.c	/^	cmsHTRANSFORM transform;$/;"	m	struct:_ColorManCache	file:
transform	icons/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	icons/svg/Makefile	/^transform = $(program_transform_name)$/;"	m
tree	ui_tree_edit.h	/^	GtkTreeView *tree;$/;"	m	struct:_TreeEditData
tree_descend_subdirs	globals.c	/^gint tree_descend_subdirs = FALSE;$/;"	v
tree_descend_subdirs_c	preferences.c	/^static gint tree_descend_subdirs_c;$/;"	v	file:
tree_edit_by_path	ui_tree_edit.c	/^gint tree_edit_by_path(GtkTreeView *tree, GtkTreePath *tpath, gint column, const gchar *text,$/;"	f
tree_edit_by_path_idle_cb	ui_tree_edit.c	/^static gboolean tree_edit_by_path_idle_cb(gpointer data)$/;"	f	file:
tree_edit_click_cb	ui_tree_edit.c	/^static gint tree_edit_click_cb(GtkWidget *widget, GdkEventButton *event, gpointer data)$/;"	f	file:
tree_edit_click_end_cb	ui_tree_edit.c	/^static gint tree_edit_click_end_cb(GtkWidget *widget, GdkEventButton *event, gpointer data)$/;"	f	file:
tree_edit_close	ui_tree_edit.c	/^static void tree_edit_close(TreeEditData *ted)$/;"	f	file:
tree_edit_do	ui_tree_edit.c	/^static void tree_edit_do(TreeEditData *ted)$/;"	f	file:
tree_edit_key_press_cb	ui_tree_edit.c	/^static gint tree_edit_key_press_cb(GtkWidget *widget, GdkEventKey *event, gpointer data)$/;"	f	file:
tree_key_overrides	layout_util.c	/^static guint tree_key_overrides[] = {$/;"	v	file:
tree_path_to_row	ui_tree_edit.c	/^gint tree_path_to_row(GtkTreePath *tpath)$/;"	f
tree_view	typedefs.h	/^	gint tree_view;$/;"	m	struct:_LayoutWindow
tree_view_get_cell_clamped	ui_tree_edit.c	/^void tree_view_get_cell_clamped(GtkTreeView *widget, GtkTreePath *tpath, gint column, gint text_cell_only,$/;"	f
tree_view_get_cell_origin	ui_tree_edit.c	/^gint tree_view_get_cell_origin(GtkTreeView *widget, GtkTreePath *tpath, gint column, gint text_cell_only,$/;"	f
tree_view_move_cursor_away	ui_tree_edit.c	/^gint tree_view_move_cursor_away(GtkTreeView *widget, GtkTreeIter *iter, gint only_selected)$/;"	f
tree_view_row_get_visibility	ui_tree_edit.c	/^gint tree_view_row_get_visibility(GtkTreeView *widget, GtkTreeIter *iter, gint fully_visible)$/;"	f
tree_view_row_make_visible	ui_tree_edit.c	/^gint tree_view_row_make_visible(GtkTreeView *widget, GtkTreeIter *iter, gint center)$/;"	f
treeview	bar_info.c	/^	GtkWidget *treeview;$/;"	m	struct:_KeywordDlg	file:
treeview	typedefs.h	/^	GtkWidget *treeview;$/;"	m	struct:_ViewDirTree
two_pass_zoom	globals.c	/^gint two_pass_zoom = TRUE;$/;"	v
two_pass_zoom_c	preferences.c	/^static gint two_pass_zoom_c;$/;"	v	file:
type	collect-io.c	/^	CollectManagerType type;$/;"	m	struct:_CollectManagerAction	file:
type	exif.h	/^	ExifFormatType type;$/;"	m	struct:_ExifFormatAttrib
type	pan-types.h	/^	PanItemType type;$/;"	m	struct:_PanItem
type	search.c	/^	const MatchType type;$/;"	m	struct:_MatchList	file:
type	ui_utildlg.h	/^	gint type;$/;"	m	struct:_FileDialog
type	utilops.c	/^	UtilityType type;$/;"	m	struct:_UtilityData	file:
ui_manager	typedefs.h	/^	GtkUIManager *ui_manager;$/;"	m	struct:_LayoutWindow
uig_list_insert_link	ui_tree_edit.c	/^GList *uig_list_insert_link(GList *list, GList *link, gpointer data)$/;"	f
uig_list_insert_list	ui_tree_edit.c	/^GList *uig_list_insert_list(GList *parent, GList *insert_link, GList *list)$/;"	f
undo_action	bar_sort.c	/^	SortActionType undo_action;$/;"	m	struct:_SortData	file:
undo_button	bar_sort.c	/^	GtkWidget *undo_button;$/;"	m	struct:_SortData	file:
undo_dest	bar_sort.c	/^	gchar *undo_dest;$/;"	m	struct:_SortData	file:
undo_src	bar_sort.c	/^	gchar *undo_src;$/;"	m	struct:_SortData	file:
undo_src_list	bar_sort.c	/^	GList *undo_src_list;$/;"	m	struct:_SortData	file:
unique_filename	ui_fileops.c	/^gchar *unique_filename(const gchar *path, const gchar *ext, const gchar *divider, gint pad)$/;"	f
unique_filename_simple	ui_fileops.c	/^gchar *unique_filename_simple(const gchar *path)$/;"	f
unknown	typedefs.h	/^	gint unknown;		\/* failed to load image *\/$/;"	m	struct:_ImageWindow
unlink_file	ui_fileops.c	/^gint unlink_file(const gchar *s)$/;"	f
unmap_file	exif.c	/^static gint unmap_file(void *mapping, int size)$/;"	f	file:
update_idle_id	search.c	/^	gint update_idle_id;$/;"	m	struct:_SearchData	file:
update_idle_id	utilops.c	/^	gint update_idle_id;$/;"	m	struct:_RenameDataMult	file:
update_on_time_change	globals.c	/^gint update_on_time_change = TRUE;$/;"	v
update_on_time_change_c	preferences.c	/^static gint update_on_time_change_c;$/;"	v	file:
updated	info.h	/^	gint updated;$/;"	m	struct:_InfoData
uri_list_from_text	ui_bookmark.c	/^GList *uri_list_from_text(gchar *data, gint files_only)$/;"	f
uri_list_parse_encoded_chars	ui_bookmark.c	/^static void uri_list_parse_encoded_chars(GList *list)$/;"	f	file:
uri_text_decode	ui_bookmark.c	/^void uri_text_decode(gchar *text)$/;"	f
uri_text_escape	ui_bookmark.c	/^gchar *uri_text_escape(const gchar *text)$/;"	f
uri_text_from_list	ui_bookmark.c	/^gchar *uri_text_from_list(GList *list, gint *len, gint plain_text)$/;"	f
use_xvpics_thumbnails	globals.c	/^gint use_xvpics_thumbnails = TRUE;$/;"	v
util_clip_line	pixbuf_util.c	/^static gint util_clip_line(gdouble clip_x, gdouble clip_y, gdouble clip_w, gdouble clip_h,$/;"	f	file:
util_clip_region	pixbuf_util.c	/^gint util_clip_region(gint x, gint y, gint w, gint h,$/;"	f
util_clip_triangle	pixbuf_util.c	/^void util_clip_triangle(gint x1, gint y1, gint x2, gint y2, gint x3, gint y3,$/;"	f
utility_box	typedefs.h	/^	GtkWidget *utility_box;$/;"	m	struct:_LayoutWindow
v_pane	typedefs.h	/^	GtkWidget *v_pane;$/;"	m	struct:_LayoutWindow
valid_date_separator	pan-view.c	/^static gint valid_date_separator(gchar c)$/;"	f	file:
value	exif.h	/^	gint value;$/;"	m	struct:_ExifTextList
vbox	bar_exif.c	/^	GtkWidget *vbox;$/;"	m	struct:_ExifBar	file:
vbox	bar_info.c	/^	GtkWidget *vbox;$/;"	m	struct:_BarInfoData	file:
vbox	bar_sort.c	/^	GtkWidget *vbox;$/;"	m	struct:_SortData	file:
vbox	ui_utildlg.h	/^	GtkWidget *vbox;	\/* place to add widgets *\/$/;"	m	struct:_GenericDialog
vdl	typedefs.h	/^	ViewDirList *vdl;$/;"	m	struct:_LayoutWindow
vdlist_auto_scroll_idle_cb	view_dir_list.c	/^static gint vdlist_auto_scroll_idle_cb(gpointer data)$/;"	f	file:
vdlist_auto_scroll_notify_cb	view_dir_list.c	/^static gint vdlist_auto_scroll_notify_cb(GtkWidget *widget, gint x, gint y, gpointer data)$/;"	f	file:
vdlist_color_cb	view_dir_list.c	/^static void vdlist_color_cb(GtkTreeViewColumn *tree_column, GtkCellRenderer *cell,$/;"	f	file:
vdlist_color_set	view_dir_list.c	/^static void vdlist_color_set(ViewDirList *vdl, FileData *fd, gint color_set)$/;"	f	file:
vdlist_color_shifted	view_dir_list.c	/^static GdkColor *vdlist_color_shifted(GtkWidget *widget)$/;"	f	file:
vdlist_dest_set	view_dir_list.c	/^static void vdlist_dest_set(ViewDirList *vdl, gint enable)$/;"	f	file:
vdlist_destroy_cb	view_dir_list.c	/^static void vdlist_destroy_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vdlist_dnd_begin	view_dir_list.c	/^static void vdlist_dnd_begin(GtkWidget *widget, GdkDragContext *context, gpointer data)$/;"	f	file:
vdlist_dnd_drop_leave	view_dir_list.c	/^static void vdlist_dnd_drop_leave(GtkWidget *widget, GdkDragContext *context, guint time, gpointer data)$/;"	f	file:
vdlist_dnd_drop_motion	view_dir_list.c	/^static gint vdlist_dnd_drop_motion(GtkWidget *widget, GdkDragContext *context,$/;"	f	file:
vdlist_dnd_drop_receive	view_dir_list.c	/^static void vdlist_dnd_drop_receive(GtkWidget *widget,$/;"	f	file:
vdlist_dnd_drop_scroll_cancel	view_dir_list.c	/^static void vdlist_dnd_drop_scroll_cancel(ViewDirList *vdl)$/;"	f	file:
vdlist_dnd_drop_types	view_dir_list.c	/^static GtkTargetEntry vdlist_dnd_drop_types[] = {$/;"	v	file:
vdlist_dnd_drop_types_count	view_dir_list.c	/^static gint vdlist_dnd_drop_types_count = 1;$/;"	v	file:
vdlist_dnd_end	view_dir_list.c	/^static void vdlist_dnd_end(GtkWidget *widget, GdkDragContext *context, gpointer data)$/;"	f	file:
vdlist_dnd_get	view_dir_list.c	/^static void vdlist_dnd_get(GtkWidget *widget, GdkDragContext *context,$/;"	f	file:
vdlist_dnd_init	view_dir_list.c	/^static void vdlist_dnd_init(ViewDirList *vdl)$/;"	f	file:
vdlist_drop_menu	view_dir_list.c	/^static GtkWidget *vdlist_drop_menu(ViewDirList *vdl, gint active)$/;"	f	file:
vdlist_drop_menu_copy_cb	view_dir_list.c	/^static void vdlist_drop_menu_copy_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vdlist_drop_menu_move_cb	view_dir_list.c	/^static void vdlist_drop_menu_move_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vdlist_drop_update	view_dir_list.c	/^static void vdlist_drop_update(ViewDirList *vdl, gint x, gint y)$/;"	f	file:
vdlist_find_row	view_dir_list.c	/^static gint vdlist_find_row(ViewDirList *vdl, FileData *fd, GtkTreeIter *iter)$/;"	f	file:
vdlist_menu_position_cb	view_dir_list.c	/^static void vdlist_menu_position_cb(GtkMenu *menu, gint *x, gint *y, gboolean *push_in, gpointer data)$/;"	f	file:
vdlist_new	view_dir_list.c	/^ViewDirList *vdlist_new(const gchar *path)$/;"	f
vdlist_pop_menu	view_dir_list.c	/^static GtkWidget *vdlist_pop_menu(ViewDirList *vdl, FileData *fd)$/;"	f	file:
vdlist_pop_menu_delete_cb	view_dir_list.c	/^static void vdlist_pop_menu_delete_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vdlist_pop_menu_dupe	view_dir_list.c	/^static void vdlist_pop_menu_dupe(ViewDirList *vdl, gint recursive)$/;"	f	file:
vdlist_pop_menu_dupe_cb	view_dir_list.c	/^static void vdlist_pop_menu_dupe_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vdlist_pop_menu_dupe_rec_cb	view_dir_list.c	/^static void vdlist_pop_menu_dupe_rec_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vdlist_pop_menu_new_cb	view_dir_list.c	/^static void vdlist_pop_menu_new_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vdlist_pop_menu_refresh_cb	view_dir_list.c	/^static void vdlist_pop_menu_refresh_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vdlist_pop_menu_rename_cb	view_dir_list.c	/^static void vdlist_pop_menu_rename_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vdlist_pop_menu_slide_cb	view_dir_list.c	/^static void vdlist_pop_menu_slide_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vdlist_pop_menu_slide_rec_cb	view_dir_list.c	/^static void vdlist_pop_menu_slide_rec_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vdlist_pop_menu_tree_cb	view_dir_list.c	/^static void vdlist_pop_menu_tree_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vdlist_pop_menu_up_cb	view_dir_list.c	/^static void vdlist_pop_menu_up_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vdlist_populate	view_dir_list.c	/^static void vdlist_populate(ViewDirList *vdl)$/;"	f	file:
vdlist_popup_destroy_cb	view_dir_list.c	/^static void vdlist_popup_destroy_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vdlist_press_cb	view_dir_list.c	/^static gint vdlist_press_cb(GtkWidget *widget, GdkEventButton *bevent, gpointer data)$/;"	f	file:
vdlist_press_key_cb	view_dir_list.c	/^static gint vdlist_press_key_cb(GtkWidget *widget, GdkEventKey *event, gpointer data)$/;"	f	file:
vdlist_refresh	view_dir_list.c	/^void vdlist_refresh(ViewDirList *vdl)$/;"	f
vdlist_release_cb	view_dir_list.c	/^static gint vdlist_release_cb(GtkWidget *widget, GdkEventButton *bevent, gpointer data)$/;"	f	file:
vdlist_rename_by_row	view_dir_list.c	/^static void vdlist_rename_by_row(ViewDirList *vdl, FileData *fd)$/;"	f	file:
vdlist_rename_row_cb	view_dir_list.c	/^static gint vdlist_rename_row_cb(TreeEditData *td, const gchar *old, const gchar *new, gpointer data)$/;"	f	file:
vdlist_row_by_path	view_dir_list.c	/^static FileData *vdlist_row_by_path(ViewDirList *vdl, const gchar *path, gint *row)$/;"	f	file:
vdlist_row_get_path	view_dir_list.c	/^const gchar *vdlist_row_get_path(ViewDirList *vdl, gint row)$/;"	f
vdlist_scroll_to_row	view_dir_list.c	/^static void vdlist_scroll_to_row(ViewDirList *vdl, FileData *fd, gfloat y_align)$/;"	f	file:
vdlist_select_cb	view_dir_list.c	/^static void vdlist_select_cb(GtkTreeView *tview, GtkTreePath *tpath, GtkTreeViewColumn *column, gpointer data)$/;"	f	file:
vdlist_select_row	view_dir_list.c	/^static void vdlist_select_row(ViewDirList *vdl, FileData *fd)$/;"	f	file:
vdlist_set_layout	view_dir_list.c	/^void vdlist_set_layout(ViewDirList *vdl, LayoutWindow *layout)$/;"	f
vdlist_set_path	view_dir_list.c	/^gint vdlist_set_path(ViewDirList *vdl, const gchar *path)$/;"	f
vdlist_set_select_func	view_dir_list.c	/^void vdlist_set_select_func(ViewDirList *vdl,$/;"	f
vdt	typedefs.h	/^	ViewDirTree *vdt;$/;"	m	struct:_LayoutWindow
vdtree_activate_cb	view_dir_tree.c	/^static void vdtree_activate_cb(GtkTreeView *tview, GtkTreePath *tpath, GtkTreeViewColumn *column, gpointer data)$/;"	f	file:
vdtree_add_by_data	view_dir_tree.c	/^static void vdtree_add_by_data(ViewDirTree *vdt, FileData *fd, GtkTreeIter *parent)$/;"	f	file:
vdtree_auto_scroll_idle_cb	view_dir_tree.c	/^static gint vdtree_auto_scroll_idle_cb(gpointer data)$/;"	f	file:
vdtree_auto_scroll_notify_cb	view_dir_tree.c	/^static gint vdtree_auto_scroll_notify_cb(GtkWidget *widget, gint x, gint y, gpointer data)$/;"	f	file:
vdtree_busy_pop	view_dir_tree.c	/^static void vdtree_busy_pop(ViewDirTree *vdt)$/;"	f	file:
vdtree_busy_push	view_dir_tree.c	/^static void vdtree_busy_push(ViewDirTree *vdt)$/;"	f	file:
vdtree_clicked_on_expander	view_dir_tree.c	/^static gint vdtree_clicked_on_expander(GtkTreeView *treeview, GtkTreePath *tpath,$/;"	f	file:
vdtree_color_cb	view_dir_tree.c	/^static void vdtree_color_cb(GtkTreeViewColumn *tree_column, GtkCellRenderer *cell,$/;"	f	file:
vdtree_color_set	view_dir_tree.c	/^static void vdtree_color_set(ViewDirTree *vdt, FileData *fd, gint color_set)$/;"	f	file:
vdtree_color_shifted	view_dir_tree.c	/^static GdkColor *vdtree_color_shifted(GtkWidget *widget)$/;"	f	file:
vdtree_dest_set	view_dir_tree.c	/^static void vdtree_dest_set(ViewDirTree *vdt, gint enable)$/;"	f	file:
vdtree_destroy_cb	view_dir_tree.c	/^static void vdtree_destroy_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vdtree_destroy_node_cb	view_dir_tree.c	/^static gboolean vdtree_destroy_node_cb(GtkTreeModel *store, GtkTreePath *tpath, GtkTreeIter *iter, gpointer data)$/;"	f	file:
vdtree_dnd_begin	view_dir_tree.c	/^static void vdtree_dnd_begin(GtkWidget *widget, GdkDragContext *context, gpointer data)$/;"	f	file:
vdtree_dnd_drop_expand	view_dir_tree.c	/^static void vdtree_dnd_drop_expand(ViewDirTree *vdt)$/;"	f	file:
vdtree_dnd_drop_expand_cancel	view_dir_tree.c	/^static void vdtree_dnd_drop_expand_cancel(ViewDirTree *vdt)$/;"	f	file:
vdtree_dnd_drop_expand_cb	view_dir_tree.c	/^static gint vdtree_dnd_drop_expand_cb(gpointer data)$/;"	f	file:
vdtree_dnd_drop_leave	view_dir_tree.c	/^static void vdtree_dnd_drop_leave(GtkWidget *widget, GdkDragContext *context, guint time, gpointer data)$/;"	f	file:
vdtree_dnd_drop_motion	view_dir_tree.c	/^static gint vdtree_dnd_drop_motion(GtkWidget *widget, GdkDragContext *context,$/;"	f	file:
vdtree_dnd_drop_receive	view_dir_tree.c	/^static void vdtree_dnd_drop_receive(GtkWidget *widget,$/;"	f	file:
vdtree_dnd_drop_scroll_cancel	view_dir_tree.c	/^static void vdtree_dnd_drop_scroll_cancel(ViewDirTree *vdt)$/;"	f	file:
vdtree_dnd_drop_types	view_dir_tree.c	/^static GtkTargetEntry vdtree_dnd_drop_types[] = {$/;"	v	file:
vdtree_dnd_drop_types_count	view_dir_tree.c	/^static gint vdtree_dnd_drop_types_count = 1;$/;"	v	file:
vdtree_dnd_end	view_dir_tree.c	/^static void vdtree_dnd_end(GtkWidget *widget, GdkDragContext *context, gpointer data)$/;"	f	file:
vdtree_dnd_get	view_dir_tree.c	/^static void vdtree_dnd_get(GtkWidget *widget, GdkDragContext *context,$/;"	f	file:
vdtree_dnd_init	view_dir_tree.c	/^static void vdtree_dnd_init(ViewDirTree *vdt)$/;"	f	file:
vdtree_drop_menu	view_dir_tree.c	/^static GtkWidget *vdtree_drop_menu(ViewDirTree *vdt, gint active)$/;"	f	file:
vdtree_drop_menu_copy_cb	view_dir_tree.c	/^static void vdtree_drop_menu_copy_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vdtree_drop_menu_move_cb	view_dir_tree.c	/^static void vdtree_drop_menu_move_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vdtree_drop_update	view_dir_tree.c	/^static void vdtree_drop_update(ViewDirTree *vdt, gint x, gint y)$/;"	f	file:
vdtree_expand_by_data	view_dir_tree.c	/^static void vdtree_expand_by_data(ViewDirTree *vdt, FileData *fd, gint expand)$/;"	f	file:
vdtree_expand_by_iter	view_dir_tree.c	/^static void vdtree_expand_by_iter(ViewDirTree *vdt, GtkTreeIter *iter, gint expand)$/;"	f	file:
vdtree_find_iter_by_data	view_dir_tree.c	/^static gint vdtree_find_iter_by_data(ViewDirTree *vdt, GtkTreeIter *parent, NodeData *nd, GtkTreeIter *iter)$/;"	f	file:
vdtree_find_iter_by_name	view_dir_tree.c	/^static NodeData *vdtree_find_iter_by_name(ViewDirTree *vdt, GtkTreeIter *parent, const gchar *name, GtkTreeIter *iter)$/;"	f	file:
vdtree_find_row	view_dir_tree.c	/^static gint vdtree_find_row(ViewDirTree *vdt, FileData *fd, GtkTreeIter *iter, GtkTreeIter *parent)$/;"	f	file:
vdtree_icon_set_by_iter	view_dir_tree.c	/^static void vdtree_icon_set_by_iter(ViewDirTree *vdt, GtkTreeIter *iter, GdkPixbuf *pixbuf)$/;"	f	file:
vdtree_menu_position_cb	view_dir_tree.c	/^static void vdtree_menu_position_cb(GtkMenu *menu, gint *x, gint *y, gboolean *push_in, gpointer data)$/;"	f	file:
vdtree_new	view_dir_tree.c	/^ViewDirTree *vdtree_new(const gchar *path, gint expand)$/;"	f
vdtree_node_free	view_dir_tree.c	/^static void vdtree_node_free(NodeData *nd)$/;"	f	file:
vdtree_pop_menu	view_dir_tree.c	/^static GtkWidget *vdtree_pop_menu(ViewDirTree *vdt, FileData *fd)$/;"	f	file:
vdtree_pop_menu_delete_cb	view_dir_tree.c	/^static void vdtree_pop_menu_delete_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vdtree_pop_menu_dupe	view_dir_tree.c	/^static void vdtree_pop_menu_dupe(ViewDirTree *vdt, gint recursive)$/;"	f	file:
vdtree_pop_menu_dupe_cb	view_dir_tree.c	/^static void vdtree_pop_menu_dupe_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vdtree_pop_menu_dupe_rec_cb	view_dir_tree.c	/^static void vdtree_pop_menu_dupe_rec_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vdtree_pop_menu_new_cb	view_dir_tree.c	/^static void vdtree_pop_menu_new_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vdtree_pop_menu_refresh_cb	view_dir_tree.c	/^static void vdtree_pop_menu_refresh_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vdtree_pop_menu_rename_cb	view_dir_tree.c	/^static void vdtree_pop_menu_rename_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vdtree_pop_menu_slide_cb	view_dir_tree.c	/^static void vdtree_pop_menu_slide_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vdtree_pop_menu_slide_rec_cb	view_dir_tree.c	/^static void vdtree_pop_menu_slide_rec_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vdtree_pop_menu_tree_cb	view_dir_tree.c	/^static void vdtree_pop_menu_tree_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vdtree_pop_menu_up_cb	view_dir_tree.c	/^static void vdtree_pop_menu_up_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vdtree_populate_path	view_dir_tree.c	/^static FileData *vdtree_populate_path(ViewDirTree *vdt, const gchar *path, gint expand, gint force)$/;"	f	file:
vdtree_populate_path_by_iter	view_dir_tree.c	/^static gint vdtree_populate_path_by_iter(ViewDirTree *vdt, GtkTreeIter *iter, gint force, const gchar *target_path)$/;"	f	file:
vdtree_popup_destroy_cb	view_dir_tree.c	/^static void vdtree_popup_destroy_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vdtree_press_cb	view_dir_tree.c	/^static gint vdtree_press_cb(GtkWidget *widget, GdkEventButton *bevent, gpointer data)$/;"	f	file:
vdtree_press_key_cb	view_dir_tree.c	/^static gint vdtree_press_key_cb(GtkWidget *widget, GdkEventKey *event, gpointer data)$/;"	f	file:
vdtree_refresh	view_dir_tree.c	/^void vdtree_refresh(ViewDirTree *vdt)$/;"	f
vdtree_release_cb	view_dir_tree.c	/^static gint vdtree_release_cb(GtkWidget *widget, GdkEventButton *bevent, gpointer data)$/;"	f	file:
vdtree_rename_by_data	view_dir_tree.c	/^static void vdtree_rename_by_data(ViewDirTree *vdt, FileData *fd)$/;"	f	file:
vdtree_rename_row_cb	view_dir_tree.c	/^static gint vdtree_rename_row_cb(TreeEditData *td, const gchar *old, const gchar *new, gpointer data)$/;"	f	file:
vdtree_row_collapsed	view_dir_tree.c	/^static void vdtree_row_collapsed(GtkTreeView *treeview, GtkTreeIter *iter, GtkTreePath *tpath, gpointer data)$/;"	f	file:
vdtree_row_expanded	view_dir_tree.c	/^static void vdtree_row_expanded(GtkTreeView *treeview, GtkTreeIter *iter, GtkTreePath *tpath, gpointer data)$/;"	f	file:
vdtree_row_get_path	view_dir_tree.c	/^const gchar *vdtree_row_get_path(ViewDirTree *vdt, gint row)$/;"	f
vdtree_select_cb	view_dir_tree.c	/^static gboolean vdtree_select_cb(GtkTreeSelection *selection, GtkTreeModel *store, GtkTreePath *tpath,$/;"	f	file:
vdtree_select_row	view_dir_tree.c	/^static void vdtree_select_row(ViewDirTree *vdt, FileData *fd)$/;"	f	file:
vdtree_set_layout	view_dir_tree.c	/^void vdtree_set_layout(ViewDirTree *vdt, LayoutWindow *layout)$/;"	f
vdtree_set_path	view_dir_tree.c	/^gint vdtree_set_path(ViewDirTree *vdt, const gchar *path)$/;"	f
vdtree_set_select_func	view_dir_tree.c	/^void vdtree_set_select_func(ViewDirTree *vdt,$/;"	f
vdtree_setup_root	view_dir_tree.c	/^static void vdtree_setup_root(ViewDirTree *vdt)$/;"	f	file:
vdtree_sort_cb	view_dir_tree.c	/^static gint vdtree_sort_cb(GtkTreeModel *store, GtkTreeIter *a, GtkTreeIter *b, gpointer data)$/;"	f	file:
vfi	typedefs.h	/^	ViewFileIcon *vfi;$/;"	m	struct:_LayoutWindow
vfi	view_file_icon.c	/^	ViewFileIcon *vfi;$/;"	m	struct:_ColumnData	file:
vfi_menu_position_cb	view_file_icon.c	/^static void vfi_menu_position_cb(GtkMenu *menu, gint *x, gint *y, gboolean *push_in, gpointer data)$/;"	f	file:
vficon_add_row	view_file_icon.c	/^static GList *vficon_add_row(ViewFileIcon *vfi, GtkTreeIter *iter)$/;"	f	file:
vficon_append_column	view_file_icon.c	/^static void vficon_append_column(ViewFileIcon *vfi, gint n)$/;"	f	file:
vficon_cell_data_cb	view_file_icon.c	/^static void vficon_cell_data_cb(GtkTreeViewColumn *tree_column, GtkCellRenderer *cell,$/;"	f	file:
vficon_clear_store	view_file_icon.c	/^static void vficon_clear_store(ViewFileIcon *vfi)$/;"	f	file:
vficon_count	view_file_icon.c	/^gint vficon_count(ViewFileIcon *vfi, gint64 *bytes)$/;"	f
vficon_destroy_cb	view_file_icon.c	/^static void vficon_destroy_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vficon_destroy_node_cb	view_file_icon.c	/^static gboolean vficon_destroy_node_cb(GtkTreeModel *store, GtkTreePath *tpath, GtkTreeIter *iter, gpointer data)$/;"	f	file:
vficon_dnd_begin	view_file_icon.c	/^static void vficon_dnd_begin(GtkWidget *widget, GdkDragContext *context, gpointer data)$/;"	f	file:
vficon_dnd_end	view_file_icon.c	/^static void vficon_dnd_end(GtkWidget *widget, GdkDragContext *context, gpointer data)$/;"	f	file:
vficon_dnd_get	view_file_icon.c	/^static void vficon_dnd_get(GtkWidget *widget, GdkDragContext *context,$/;"	f	file:
vficon_dnd_init	view_file_icon.c	/^static void vficon_dnd_init(ViewFileIcon *vfi)$/;"	f	file:
vficon_find_data	view_file_icon.c	/^static FileData *vficon_find_data(ViewFileIcon *vfi, gint row, gint col, GtkTreeIter *iter)$/;"	f	file:
vficon_find_data_by_coord	view_file_icon.c	/^static FileData *vficon_find_data_by_coord(ViewFileIcon *vfi, gint x, gint y, GtkTreeIter *iter)$/;"	f	file:
vficon_find_iter	view_file_icon.c	/^static gint vficon_find_iter(ViewFileIcon *vfi, FileData *fd, GtkTreeIter *iter, gint *column)$/;"	f	file:
vficon_find_position	view_file_icon.c	/^static gint vficon_find_position(ViewFileIcon *vfi, FileData *fd, gint *row, gint *col)$/;"	f	file:
vficon_get_icon_width	view_file_icon.c	/^static gint vficon_get_icon_width(ViewFileIcon *vfi)$/;"	f	file:
vficon_get_list	view_file_icon.c	/^GList *vficon_get_list(ViewFileIcon *vfi)$/;"	f
vficon_index_by_path	view_file_icon.c	/^gint vficon_index_by_path(ViewFileIcon *vfi, const gchar *path)$/;"	f
vficon_index_get_data	view_file_icon.c	/^FileData *vficon_index_get_data(ViewFileIcon *vfi, gint row)$/;"	f
vficon_index_get_path	view_file_icon.c	/^gchar *vficon_index_get_path(ViewFileIcon *vfi, gint row)$/;"	f
vficon_index_is_selected	view_file_icon.c	/^gint vficon_index_is_selected(ViewFileIcon *vfi, gint row)$/;"	f
vficon_leave_cb	view_file_icon.c	/^static gint vficon_leave_cb(GtkWidget *widget, GdkEventCrossing *event, gpointer data)$/;"	f	file:
vficon_maint_find_closest	view_file_icon.c	/^static gint vficon_maint_find_closest(ViewFileIcon *vfi, gint row, gint count, GList *ignore_list)$/;"	f	file:
vficon_maint_moved	view_file_icon.c	/^gint vficon_maint_moved(ViewFileIcon *vfi, const gchar *source, const gchar *dest, GList *ignore_list)$/;"	f
vficon_maint_removed	view_file_icon.c	/^gint vficon_maint_removed(ViewFileIcon *vfi, const gchar *path, GList *ignore_list)$/;"	f
vficon_maint_renamed	view_file_icon.c	/^gint vficon_maint_renamed(ViewFileIcon *vfi, const gchar *source, const gchar *dest)$/;"	f
vficon_motion_cb	view_file_icon.c	/^static gint vficon_motion_cb(GtkWidget *widget, GdkEventButton *bevent, gpointer data)$/;"	f	file:
vficon_move_focus	view_file_icon.c	/^static void vficon_move_focus(ViewFileIcon *vfi, gint row, gint col, gint relative)$/;"	f	file:
vficon_new	view_file_icon.c	/^ViewFileIcon *vficon_new(const gchar *path)$/;"	f
vficon_pop_menu	view_file_icon.c	/^static GtkWidget *vficon_pop_menu(ViewFileIcon *vfi, gint active)$/;"	f	file:
vficon_pop_menu_copy_cb	view_file_icon.c	/^static void vficon_pop_menu_copy_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vficon_pop_menu_delete_cb	view_file_icon.c	/^static void vficon_pop_menu_delete_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vficon_pop_menu_edit_cb	view_file_icon.c	/^static void vficon_pop_menu_edit_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vficon_pop_menu_file_list	view_file_icon.c	/^static GList *vficon_pop_menu_file_list(ViewFileIcon *vfi)$/;"	f	file:
vficon_pop_menu_info_cb	view_file_icon.c	/^static void vficon_pop_menu_info_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vficon_pop_menu_list_cb	view_file_icon.c	/^static void vficon_pop_menu_list_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vficon_pop_menu_move_cb	view_file_icon.c	/^static void vficon_pop_menu_move_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vficon_pop_menu_refresh_cb	view_file_icon.c	/^static void vficon_pop_menu_refresh_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vficon_pop_menu_rename_cb	view_file_icon.c	/^static void vficon_pop_menu_rename_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vficon_pop_menu_show_names_cb	view_file_icon.c	/^static void vficon_pop_menu_show_names_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vficon_pop_menu_sort_ascend_cb	view_file_icon.c	/^static void vficon_pop_menu_sort_ascend_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vficon_pop_menu_sort_cb	view_file_icon.c	/^static void vficon_pop_menu_sort_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vficon_pop_menu_view_cb	view_file_icon.c	/^static void vficon_pop_menu_view_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vficon_populate	view_file_icon.c	/^static void vficon_populate(ViewFileIcon *vfi, gint resize, gint keep_position)$/;"	f	file:
vficon_populate_at_new_size	view_file_icon.c	/^static void vficon_populate_at_new_size(ViewFileIcon *vfi, gint w, gint h, gint force)$/;"	f	file:
vficon_popup_destroy_cb	view_file_icon.c	/^static void vficon_popup_destroy_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vficon_press_cb	view_file_icon.c	/^static gint vficon_press_cb(GtkWidget *widget, GdkEventButton *bevent, gpointer data)$/;"	f	file:
vficon_press_key_cb	view_file_icon.c	/^static gint vficon_press_key_cb(GtkWidget *widget, GdkEventKey *event, gpointer data)$/;"	f	file:
vficon_refresh	view_file_icon.c	/^gint vficon_refresh(ViewFileIcon *vfi)$/;"	f
vficon_refresh_real	view_file_icon.c	/^static gint vficon_refresh_real(ViewFileIcon *vfi, gint keep_position)$/;"	f	file:
vficon_release_cb	view_file_icon.c	/^static gint vficon_release_cb(GtkWidget *widget, GdkEventButton *bevent, gpointer data)$/;"	f	file:
vficon_select	view_file_icon.c	/^static void vficon_select(ViewFileIcon *vfi, FileData *fd)$/;"	f	file:
vficon_select_all	view_file_icon.c	/^void vficon_select_all(ViewFileIcon *vfi)$/;"	f
vficon_select_by_path	view_file_icon.c	/^void vficon_select_by_path(ViewFileIcon *vfi, const gchar *path)$/;"	f
vficon_select_none	view_file_icon.c	/^void vficon_select_none(ViewFileIcon *vfi)$/;"	f
vficon_select_region_util	view_file_icon.c	/^static void vficon_select_region_util(ViewFileIcon *vfi, FileData *start, FileData *end, gint select)$/;"	f	file:
vficon_select_util	view_file_icon.c	/^static void vficon_select_util(ViewFileIcon *vfi, FileData *fd, gint select)$/;"	f	file:
vficon_selection_add	view_file_icon.c	/^static void vficon_selection_add(ViewFileIcon *vfi, FileData *fd, SelectionType mask, GtkTreeIter *iter)$/;"	f	file:
vficon_selection_count	view_file_icon.c	/^gint vficon_selection_count(ViewFileIcon *vfi, gint64 *bytes)$/;"	f
vficon_selection_get_list	view_file_icon.c	/^GList *vficon_selection_get_list(ViewFileIcon *vfi)$/;"	f
vficon_selection_get_list_by_index	view_file_icon.c	/^GList *vficon_selection_get_list_by_index(ViewFileIcon *vfi)$/;"	f
vficon_selection_remove	view_file_icon.c	/^static void vficon_selection_remove(ViewFileIcon *vfi, FileData *fd, SelectionType mask, GtkTreeIter *iter)$/;"	f	file:
vficon_selection_set	view_file_icon.c	/^static void vficon_selection_set(ViewFileIcon *vfi, FileData *fd, SelectionType value, GtkTreeIter *iter)$/;"	f	file:
vficon_send_layout_select	view_file_icon.c	/^static void vficon_send_layout_select(ViewFileIcon *vfi, FileData *fd)$/;"	f	file:
vficon_send_update	view_file_icon.c	/^static void vficon_send_update(ViewFileIcon *vfi)$/;"	f	file:
vficon_set_focus	view_file_icon.c	/^static void vficon_set_focus(ViewFileIcon *vfi, FileData *fd)$/;"	f	file:
vficon_set_layout	view_file_icon.c	/^void vficon_set_layout(ViewFileIcon *vfi, LayoutWindow *layout)$/;"	f
vficon_set_path	view_file_icon.c	/^gint vficon_set_path(ViewFileIcon *vfi, const gchar *path)$/;"	f
vficon_set_status_func	view_file_icon.c	/^void vficon_set_status_func(ViewFileIcon *vfi,$/;"	f
vficon_set_thumb	view_file_icon.c	/^static void vficon_set_thumb(ViewFileIcon *vfi, FileData *fd, GdkPixbuf *pb)$/;"	f	file:
vficon_set_thumb_status_func	view_file_icon.c	/^void vficon_set_thumb_status_func(ViewFileIcon *vfi,$/;"	f
vficon_sized_cb	view_file_icon.c	/^static void vficon_sized_cb(GtkWidget *widget, GtkAllocation *allocation, gpointer data)$/;"	f	file:
vficon_sort_set	view_file_icon.c	/^void vficon_sort_set(ViewFileIcon *vfi, SortType type, gint ascend)$/;"	f
vficon_sync	view_file_icon.c	/^static void vficon_sync(ViewFileIcon *vfi)$/;"	f	file:
vficon_sync_idle	view_file_icon.c	/^static void vficon_sync_idle(ViewFileIcon *vfi)$/;"	f	file:
vficon_sync_idle_cb	view_file_icon.c	/^static gint vficon_sync_idle_cb(gpointer data)$/;"	f	file:
vficon_thumb_cleanup	view_file_icon.c	/^static void vficon_thumb_cleanup(ViewFileIcon *vfi)$/;"	f	file:
vficon_thumb_do	view_file_icon.c	/^static void vficon_thumb_do(ViewFileIcon *vfi, ThumbLoader *tl, FileData *fd)$/;"	f	file:
vficon_thumb_done_cb	view_file_icon.c	/^static void vficon_thumb_done_cb(ThumbLoader *tl, gpointer data)$/;"	f	file:
vficon_thumb_error_cb	view_file_icon.c	/^static void vficon_thumb_error_cb(ThumbLoader *tl, gpointer data)$/;"	f	file:
vficon_thumb_next	view_file_icon.c	/^static gint vficon_thumb_next(ViewFileIcon *vfi)$/;"	f	file:
vficon_thumb_status	view_file_icon.c	/^static void vficon_thumb_status(ViewFileIcon *vfi, gdouble val, const gchar *text)$/;"	f	file:
vficon_thumb_stop	view_file_icon.c	/^static void vficon_thumb_stop(ViewFileIcon *vfi)$/;"	f	file:
vficon_thumb_update	view_file_icon.c	/^static void vficon_thumb_update(ViewFileIcon *vfi)$/;"	f	file:
vficon_toggle_filenames	view_file_icon.c	/^static void vficon_toggle_filenames(ViewFileIcon *vfi)$/;"	f	file:
vficon_unselect	view_file_icon.c	/^static void vficon_unselect(ViewFileIcon *vfi, FileData *fd)$/;"	f	file:
vficon_update_focus	view_file_icon.c	/^static void vficon_update_focus(ViewFileIcon *vfi)$/;"	f	file:
vficon_verify_selections	view_file_icon.c	/^static void vficon_verify_selections(ViewFileIcon *vfi)$/;"	f	file:
vfl	typedefs.h	/^	ViewFileList *vfl;$/;"	m	struct:_LayoutWindow
vflist_color_set	view_file_list.c	/^static void vflist_color_set(ViewFileList *vfl, FileData *fd, gint color_set)$/;"	f	file:
vflist_count	view_file_list.c	/^gint vflist_count(ViewFileList *vfl, gint64 *bytes)$/;"	f
vflist_destroy_cb	view_file_list.c	/^static void vflist_destroy_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vflist_dnd_begin	view_file_list.c	/^static void vflist_dnd_begin(GtkWidget *widget, GdkDragContext *context, gpointer data)$/;"	f	file:
vflist_dnd_end	view_file_list.c	/^static void vflist_dnd_end(GtkWidget *widget, GdkDragContext *context, gpointer data)$/;"	f	file:
vflist_dnd_get	view_file_list.c	/^static void vflist_dnd_get(GtkWidget *widget, GdkDragContext *context,$/;"	f	file:
vflist_dnd_init	view_file_list.c	/^static void vflist_dnd_init(ViewFileList *vfl)$/;"	f	file:
vflist_dummy_select_cb	view_file_list.c	/^static gboolean vflist_dummy_select_cb(GtkTreeSelection *selection, GtkTreeModel *store, GtkTreePath *tpath,$/;"	f	file:
vflist_find_row	view_file_list.c	/^static gint vflist_find_row(ViewFileList *vfl, FileData *fd, GtkTreeIter *iter)$/;"	f	file:
vflist_get_list	view_file_list.c	/^GList *vflist_get_list(ViewFileList *vfl)$/;"	f
vflist_index_by_path	view_file_list.c	/^gint vflist_index_by_path(ViewFileList *vfl, const gchar *path)$/;"	f
vflist_index_get_data	view_file_list.c	/^FileData *vflist_index_get_data(ViewFileList *vfl, gint row)$/;"	f
vflist_index_get_path	view_file_list.c	/^gchar *vflist_index_get_path(ViewFileList *vfl, gint row)$/;"	f
vflist_index_is_selected	view_file_list.c	/^gint vflist_index_is_selected(ViewFileList *vfl, gint row)$/;"	f
vflist_listview_add_column	view_file_list.c	/^static void vflist_listview_add_column(ViewFileList *vfl, gint n, const gchar *title, gint image, gint right_justify)$/;"	f	file:
vflist_listview_color_cb	view_file_list.c	/^static void vflist_listview_color_cb(GtkTreeViewColumn *tree_column, GtkCellRenderer *cell,$/;"	f	file:
vflist_listview_color_shifted	view_file_list.c	/^static GdkColor *vflist_listview_color_shifted(GtkWidget *widget)$/;"	f	file:
vflist_listview_set_height	view_file_list.c	/^static void vflist_listview_set_height(GtkWidget *listview, gint thumb)$/;"	f	file:
vflist_maint_find_closest	view_file_list.c	/^static gint vflist_maint_find_closest(ViewFileList *vfl, gint row, gint count, GList *ignore_list)$/;"	f	file:
vflist_maint_moved	view_file_list.c	/^gint vflist_maint_moved(ViewFileList *vfl, const gchar *source, const gchar *dest, GList *ignore_list)$/;"	f
vflist_maint_removed	view_file_list.c	/^gint vflist_maint_removed(ViewFileList *vfl, const gchar *path, GList *ignore_list)$/;"	f
vflist_maint_renamed	view_file_list.c	/^gint vflist_maint_renamed(ViewFileList *vfl, const gchar *source, const gchar *dest)$/;"	f
vflist_menu_position_cb	view_file_list.c	/^static void vflist_menu_position_cb(GtkMenu *menu, gint *x, gint *y, gboolean *push_in, gpointer data)$/;"	f	file:
vflist_move_cursor	view_file_list.c	/^static void vflist_move_cursor(ViewFileList *vfl, GtkTreeIter *iter)$/;"	f	file:
vflist_new	view_file_list.c	/^ViewFileList *vflist_new(const gchar *path, gint thumbs)$/;"	f
vflist_pop_menu	view_file_list.c	/^static GtkWidget *vflist_pop_menu(ViewFileList *vfl, FileData *fd)$/;"	f	file:
vflist_pop_menu_copy_cb	view_file_list.c	/^static void vflist_pop_menu_copy_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vflist_pop_menu_delete_cb	view_file_list.c	/^static void vflist_pop_menu_delete_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vflist_pop_menu_edit_cb	view_file_list.c	/^static void vflist_pop_menu_edit_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vflist_pop_menu_file_list	view_file_list.c	/^static GList *vflist_pop_menu_file_list(ViewFileList *vfl)$/;"	f	file:
vflist_pop_menu_icons_cb	view_file_list.c	/^static void vflist_pop_menu_icons_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vflist_pop_menu_info_cb	view_file_list.c	/^static void vflist_pop_menu_info_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vflist_pop_menu_move_cb	view_file_list.c	/^static void vflist_pop_menu_move_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vflist_pop_menu_refresh_cb	view_file_list.c	/^static void vflist_pop_menu_refresh_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vflist_pop_menu_rename_cb	view_file_list.c	/^static void vflist_pop_menu_rename_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vflist_pop_menu_sort_ascend_cb	view_file_list.c	/^static void vflist_pop_menu_sort_ascend_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vflist_pop_menu_sort_cb	view_file_list.c	/^static void vflist_pop_menu_sort_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vflist_pop_menu_thumbs_cb	view_file_list.c	/^static void vflist_pop_menu_thumbs_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vflist_pop_menu_view_cb	view_file_list.c	/^static void vflist_pop_menu_view_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vflist_populate_view	view_file_list.c	/^static void vflist_populate_view(ViewFileList *vfl)$/;"	f	file:
vflist_popup_destroy_cb	view_file_list.c	/^static void vflist_popup_destroy_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vflist_press_cb	view_file_list.c	/^static gint vflist_press_cb(GtkWidget *widget, GdkEventButton *bevent, gpointer data)$/;"	f	file:
vflist_press_key_cb	view_file_list.c	/^static gint vflist_press_key_cb(GtkWidget *widget, GdkEventKey *event, gpointer data)$/;"	f	file:
vflist_refresh	view_file_list.c	/^gint vflist_refresh(ViewFileList *vfl)$/;"	f
vflist_release_cb	view_file_list.c	/^static gint vflist_release_cb(GtkWidget *widget, GdkEventButton *bevent, gpointer data)$/;"	f	file:
vflist_row_by_path	view_file_list.c	/^static gint vflist_row_by_path(ViewFileList *vfl, const gchar *path, FileData **fd)$/;"	f	file:
vflist_row_is_selected	view_file_list.c	/^static gint vflist_row_is_selected(ViewFileList *vfl, FileData *fd)$/;"	f	file:
vflist_row_rename_cb	view_file_list.c	/^static gint vflist_row_rename_cb(TreeEditData *td, const gchar *old, const gchar *new, gpointer data)$/;"	f	file:
vflist_select_all	view_file_list.c	/^void vflist_select_all(ViewFileList *vfl)$/;"	f
vflist_select_by_path	view_file_list.c	/^void vflist_select_by_path(ViewFileList *vfl, const gchar *path)$/;"	f
vflist_select_cb	view_file_list.c	/^static gboolean vflist_select_cb(GtkTreeSelection *selection, GtkTreeModel *store, GtkTreePath *tpath,$/;"	f	file:
vflist_select_idle_cancel	view_file_list.c	/^static void vflist_select_idle_cancel(ViewFileList *vfl)$/;"	f	file:
vflist_select_idle_cb	view_file_list.c	/^static gint vflist_select_idle_cb(gpointer data)$/;"	f	file:
vflist_select_image	view_file_list.c	/^static void vflist_select_image(ViewFileList *vfl, gint row)$/;"	f	file:
vflist_select_none	view_file_list.c	/^void vflist_select_none(ViewFileList *vfl)$/;"	f
vflist_selection_count	view_file_list.c	/^gint vflist_selection_count(ViewFileList *vfl, gint64 *bytes)$/;"	f
vflist_selection_get_list	view_file_list.c	/^GList *vflist_selection_get_list(ViewFileList *vfl)$/;"	f
vflist_selection_get_list_by_index	view_file_list.c	/^GList *vflist_selection_get_list_by_index(ViewFileList *vfl)$/;"	f
vflist_send_update	view_file_list.c	/^static void vflist_send_update(ViewFileList *vfl)$/;"	f	file:
vflist_set_layout	view_file_list.c	/^void vflist_set_layout(ViewFileList *vfl, LayoutWindow *layout)$/;"	f
vflist_set_path	view_file_list.c	/^gint vflist_set_path(ViewFileList *vfl, const gchar *path)$/;"	f
vflist_set_status_func	view_file_list.c	/^void vflist_set_status_func(ViewFileList *vfl,$/;"	f
vflist_set_thumb_status_func	view_file_list.c	/^void vflist_set_thumb_status_func(ViewFileList *vfl,$/;"	f
vflist_sort_set	view_file_list.c	/^void vflist_sort_set(ViewFileList *vfl, SortType type, gint ascend)$/;"	f
vflist_thumb_cleanup	view_file_list.c	/^static void vflist_thumb_cleanup(ViewFileList *vfl)$/;"	f	file:
vflist_thumb_do	view_file_list.c	/^static void vflist_thumb_do(ViewFileList *vfl, ThumbLoader *tl, FileData *fd)$/;"	f	file:
vflist_thumb_done_cb	view_file_list.c	/^static void vflist_thumb_done_cb(ThumbLoader *tl, gpointer data)$/;"	f	file:
vflist_thumb_error_cb	view_file_list.c	/^static void vflist_thumb_error_cb(ThumbLoader *tl, gpointer data)$/;"	f	file:
vflist_thumb_next	view_file_list.c	/^static gint vflist_thumb_next(ViewFileList *vfl)$/;"	f	file:
vflist_thumb_set	view_file_list.c	/^void vflist_thumb_set(ViewFileList *vfl, gint enable)$/;"	f
vflist_thumb_status	view_file_list.c	/^static void vflist_thumb_status(ViewFileList *vfl, gdouble val, const gchar *text)$/;"	f	file:
vflist_thumb_stop	view_file_list.c	/^static void vflist_thumb_stop(ViewFileList *vfl)$/;"	f	file:
vflist_thumb_update	view_file_list.c	/^static void vflist_thumb_update(ViewFileList *vfl)$/;"	f	file:
view_alter_cb	img-view.c	/^static void view_alter_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
view_close_cb	img-view.c	/^static void view_close_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
view_collection_step	img-view.c	/^static void view_collection_step(ViewWindow *vw, gint next)$/;"	f	file:
view_collection_step_to_end	img-view.c	/^static void view_collection_step_to_end(ViewWindow *vw, gint last)$/;"	f	file:
view_confirm_dir_list	img-view.c	/^static GtkWidget *view_confirm_dir_list(ViewWindow *vw, GList *list)$/;"	f	file:
view_copy_cb	img-view.c	/^static void view_copy_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
view_delete_cb	img-view.c	/^static void view_delete_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
view_dir_list_add	img-view.c	/^static void view_dir_list_add(GtkWidget *widget, gpointer data)$/;"	f	file:
view_dir_list_cancel	img-view.c	/^static void view_dir_list_cancel(GtkWidget *widget, gpointer data)$/;"	f	file:
view_dir_list_destroy	img-view.c	/^static void view_dir_list_destroy(GtkWidget *widget, gpointer data)$/;"	f	file:
view_dir_list_do	img-view.c	/^static void view_dir_list_do(ViewWindow *vw, GList *list, gint skip, gint recurse)$/;"	f	file:
view_dir_list_recurse	img-view.c	/^static void view_dir_list_recurse(GtkWidget *widget, gpointer data)$/;"	f	file:
view_dir_list_skip	img-view.c	/^static void view_dir_list_skip(GtkWidget *widget, gpointer data)$/;"	f	file:
view_edit_cb	img-view.c	/^static void view_edit_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
view_fullscreen_cb	img-view.c	/^static void view_fullscreen_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
view_fullscreen_stop_func	img-view.c	/^static void view_fullscreen_stop_func(FullScreenData *fs, gpointer data)$/;"	f	file:
view_fullscreen_toggle	img-view.c	/^static void view_fullscreen_toggle(ViewWindow *vw, gint force_off)$/;"	f	file:
view_image_set_buttons	img-view.c	/^static void view_image_set_buttons(ViewWindow *vw, ImageWindow *imd)$/;"	f	file:
view_info_cb	img-view.c	/^static void view_info_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
view_list_step	img-view.c	/^static void view_list_step(ViewWindow *vw, gint next)$/;"	f	file:
view_list_step_to_end	img-view.c	/^static void view_list_step_to_end(ViewWindow *vw, gint last)$/;"	f	file:
view_move_cb	img-view.c	/^static void view_move_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
view_new_window_cb	img-view.c	/^static void view_new_window_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
view_overlay_toggle	img-view.c	/^static void view_overlay_toggle(ViewWindow *vw)$/;"	f	file:
view_popup_menu	img-view.c	/^static GtkWidget *view_popup_menu(ViewWindow *vw)$/;"	f	file:
view_real_moved	img-view.c	/^static void view_real_moved(ViewWindow *vw, const gchar *source, const gchar *dest)$/;"	f	file:
view_real_removed	img-view.c	/^static void view_real_removed(ViewWindow *vw, const gchar *path, GList *ignore_list)$/;"	f	file:
view_rename_cb	img-view.c	/^static void view_rename_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
view_slideshow_next	img-view.c	/^static void view_slideshow_next(ViewWindow *vw)$/;"	f	file:
view_slideshow_pause_cb	img-view.c	/^static void view_slideshow_pause_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
view_slideshow_prev	img-view.c	/^static void view_slideshow_prev(ViewWindow *vw)$/;"	f	file:
view_slideshow_start	img-view.c	/^static void view_slideshow_start(ViewWindow *vw)$/;"	f	file:
view_slideshow_start_cb	img-view.c	/^static void view_slideshow_start_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
view_slideshow_stop	img-view.c	/^static void view_slideshow_stop(ViewWindow *vw)$/;"	f	file:
view_slideshow_stop_cb	img-view.c	/^static void view_slideshow_stop_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
view_slideshow_stop_func	img-view.c	/^static void view_slideshow_stop_func(SlideShowData *fs, gpointer data)$/;"	f	file:
view_step_next	img-view.c	/^static void view_step_next(ViewWindow *vw)$/;"	f	file:
view_step_prev	img-view.c	/^static void view_step_prev(ViewWindow *vw)$/;"	f	file:
view_step_to_end	img-view.c	/^static void view_step_to_end(ViewWindow *vw, gint last)$/;"	f	file:
view_wallpaper_cb	img-view.c	/^static void view_wallpaper_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
view_window_active_image	img-view.c	/^static ImageWindow *view_window_active_image(ViewWindow *vw)$/;"	f	file:
view_window_close	img-view.c	/^static void view_window_close(ViewWindow *vw)$/;"	f	file:
view_window_collection_unref_cb	img-view.c	/^static void view_window_collection_unref_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
view_window_colors_update	img-view.c	/^void view_window_colors_update(void)$/;"	f
view_window_contains_collection	img-view.c	/^static gint view_window_contains_collection(ViewWindow *vw)$/;"	f	file:
view_window_delete_cb	img-view.c	/^static gint view_window_delete_cb(GtkWidget *w, GdkEventAny *event, gpointer data)$/;"	f	file:
view_window_destroy_cb	img-view.c	/^static void view_window_destroy_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
view_window_dnd_init	img-view.c	/^static void view_window_dnd_init(ViewWindow *vw)$/;"	f	file:
view_window_find_image	img-view.c	/^gint view_window_find_image(ImageWindow *imd, gint *index, gint *total)$/;"	f
view_window_get_dnd_data	img-view.c	/^static void view_window_get_dnd_data(GtkWidget *widget, GdkDragContext *context,$/;"	f	file:
view_window_key_press_cb	img-view.c	/^static gint view_window_key_press_cb(GtkWidget *widget, GdkEventKey *event, gpointer data)$/;"	f	file:
view_window_list	img-view.c	/^static GList *view_window_list = NULL;$/;"	v	file:
view_window_maint_moved	img-view.c	/^void view_window_maint_moved(const gchar *source, const gchar *dest)$/;"	f
view_window_maint_removed	img-view.c	/^void view_window_maint_removed(const gchar *path, GList *ignore_list)$/;"	f
view_window_menu_pos_cb	img-view.c	/^static void view_window_menu_pos_cb(GtkMenu *menu, gint *x, gint *y, gboolean *push_in, gpointer data)$/;"	f	file:
view_window_new	img-view.c	/^void view_window_new(const gchar *path)$/;"	f
view_window_new_from_collection	img-view.c	/^void view_window_new_from_collection(CollectionData *cd, CollectInfo *info)$/;"	f
view_window_new_from_list	img-view.c	/^void view_window_new_from_list(GList *list)$/;"	f
view_window_set_dnd_data	img-view.c	/^static void view_window_set_dnd_data(GtkWidget *widget, GdkDragContext *context,$/;"	f	file:
view_window_set_list	img-view.c	/^static void view_window_set_list(ViewWindow *vw, GList *list)$/;"	f	file:
view_zoom_1_1_cb	img-view.c	/^static void view_zoom_1_1_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
view_zoom_fit_cb	img-view.c	/^static void view_zoom_fit_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
view_zoom_in_cb	img-view.c	/^static void view_zoom_in_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
view_zoom_out_cb	img-view.c	/^static void view_zoom_out_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
vis_height	pixbuf-renderer.h	/^	gint vis_height;$/;"	m	struct:_PixbufRenderer
vis_width	pixbuf-renderer.h	/^	gint vis_width;		\/* dimensions of visible part of image *\/$/;"	m	struct:_PixbufRenderer
vsize_max	ui_misc.c	/^	gint vsize_max;$/;"	m	struct:_SizerData	file:
vsize_min	ui_misc.c	/^	gint vsize_min;$/;"	m	struct:_SizerData	file:
vw	img-view.c	/^	ViewWindow *vw;$/;"	m	struct:__anon70	file:
w	pan-types.h	/^	gint w;$/;"	m	struct:_PanGrid
w	pixbuf-renderer.c	/^	gint w;			\/* width that is visible (may be less if at edge of image) *\/$/;"	m	struct:_ImageTile	file:
w	pixbuf-renderer.c	/^	gint w;$/;"	m	struct:_QueueData	file:
w	preferences.c	/^	gint w;$/;"	m	struct:_ThumbSize	file:
warning_dialog	ui_utildlg.c	/^GenericDialog *warning_dialog(const gchar *heading, const gchar *text,$/;"	f
warning_dialog_ok_cb	ui_utildlg.c	/^static void warning_dialog_ok_cb(GenericDialog *gd, gpointer data)$/;"	f	file:
widget	typedefs.h	/^	GtkWidget *widget;	\/* use this to add it and show it *\/$/;"	m	struct:_ImageWindow
widget	typedefs.h	/^	GtkWidget *widget;$/;"	m	struct:_ViewDirList
widget	typedefs.h	/^	GtkWidget *widget;$/;"	m	struct:_ViewDirTree
widget	typedefs.h	/^	GtkWidget *widget;$/;"	m	struct:_ViewFileIcon
widget	typedefs.h	/^	GtkWidget *widget;$/;"	m	struct:_ViewFileList
widget	ui_bookmark.c	/^	GtkWidget *widget;$/;"	m	struct:_BookMarkData	file:
widget	ui_tree_edit.c	/^	GtkWidget *widget;$/;"	m	struct:_AutoScrollData	file:
widget_auto_scroll_cb	ui_tree_edit.c	/^static gint widget_auto_scroll_cb(gpointer data)$/;"	f	file:
widget_auto_scroll_start	ui_tree_edit.c	/^gint widget_auto_scroll_start(GtkWidget *widget, GtkAdjustment *v_adj, gint scroll_speed, gint region_size,$/;"	f
widget_auto_scroll_stop	ui_tree_edit.c	/^void widget_auto_scroll_stop(GtkWidget *widget)$/;"	f
widget_set_cursor	dupe.c	/^static void widget_set_cursor(GtkWidget *widget, gint icon)$/;"	f	file:
widget_set_cursor	pixbuf-renderer.c	/^static void widget_set_cursor(GtkWidget *widget, gint icon)$/;"	f	file:
width	cache.h	/^	gint width;$/;"	m	struct:_CacheData
width	dupe.h	/^	gint width;$/;"	m	struct:_DupeItem
width	fullscreen.h	/^	gint width;$/;"	m	struct:_ScreenData
width	pan-folder.c	/^	gint width;$/;"	m	struct:_FlowerGroup	file:
width	pan-types.h	/^	gint width;$/;"	m	struct:_PanItem
width	pixbuf-renderer.h	/^	gint width;		\/* size of scaled image (result) *\/$/;"	m	struct:_PixbufRenderer
width	print.c	/^	gint width;$/;"	m	struct:_PaperSize	file:
width	search.c	/^	gint width;$/;"	m	struct:_MatchFileData	file:
window	dupe.h	/^	GtkWidget *window;$/;"	m	struct:_DupeWindow
window	img-view.c	/^	GtkWidget *window;$/;"	m	struct:_ViewWindow	file:
window	info.h	/^	GtkWidget *window;$/;"	m	struct:_InfoData
window	pan-types.h	/^	GtkWidget *window;$/;"	m	struct:_PanWindow
window	pixbuf-renderer.c	/^	GdkWindow *window;$/;"	m	struct:_OverlayData	file:
window	search.c	/^	GtkWidget *window;$/;"	m	struct:_SearchData	file:
window	typedefs.h	/^	GtkWidget *window;$/;"	m	struct:_CollectWindow
window	typedefs.h	/^	GtkWidget *window;$/;"	m	struct:_FullScreenData
window	typedefs.h	/^	GtkWidget *window;$/;"	m	struct:_LayoutWindow
window	ui_misc.c	/^	GtkWidget *window;$/;"	m	struct:_DateSelection	file:
window	ui_tree_edit.h	/^	GtkWidget *window;$/;"	m	struct:_TreeEditData
window_fit	pixbuf-renderer.h	/^	gboolean window_fit;$/;"	m	struct:_PixbufRenderer
window_h	typedefs.h	/^	gint window_h;$/;"	m	struct:_CollectionData
window_hdivider_pos	globals.c	/^gint window_hdivider_pos = -1;$/;"	v
window_height	pixbuf-renderer.h	/^	gint window_height;$/;"	m	struct:_PixbufRenderer
window_limit	pixbuf-renderer.h	/^	gboolean window_limit;$/;"	m	struct:_PixbufRenderer
window_limit_size	pixbuf-renderer.h	/^	gint window_limit_size;$/;"	m	struct:_PixbufRenderer
window_maximized	main.c	/^gint window_maximized(GtkWidget *window)$/;"	f
window_read	typedefs.h	/^	gint window_read;$/;"	m	struct:_CollectionData
window_set_icon	main.c	/^void window_set_icon(GtkWidget *window, const gchar *icon, const gchar *file)$/;"	f
window_vdivider_pos	globals.c	/^gint window_vdivider_pos = 200;$/;"	v
window_w	typedefs.h	/^	gint window_w;$/;"	m	struct:_CollectionData
window_width	pixbuf-renderer.h	/^	gint window_width;	\/* allocated size of window (drawing area) *\/$/;"	m	struct:_PixbufRenderer
window_x	typedefs.h	/^	gint window_x;$/;"	m	struct:_CollectionData
window_y	typedefs.h	/^	gint window_y;$/;"	m	struct:_CollectionData
working	dupe.h	/^	GList *working;$/;"	m	struct:_DupeWindow
write_bool_option	rcfile.c	/^static void write_bool_option(FILE *f, gchar *label, gint n)$/;"	f	file:
write_char_option	rcfile.c	/^static void write_char_option(FILE *f, gchar *label, gchar *text)$/;"	f	file:
write_int_option	rcfile.c	/^static void write_int_option(FILE *f, gchar *label, gint n)$/;"	f	file:
write_int_unit_option	rcfile.c	/^static void write_int_unit_option(FILE *f, gchar *label, gint n, gint subunits)$/;"	f	file:
x	fullscreen.h	/^	gint x;$/;"	m	struct:_ScreenData
x	image-overlay.c	/^	gint x;		\/* x, y offset *\/$/;"	m	struct:_OSDIcon	file:
x	pan-folder.c	/^	gint x;$/;"	m	struct:_FlowerGroup	file:
x	pan-types.h	/^	gint x;$/;"	m	struct:_PanGrid
x	pan-types.h	/^	gint x;$/;"	m	struct:_PanItem
x	pan-types.h	/^	gint x;$/;"	m	struct:_PanTextAlignment
x	pixbuf-renderer.c	/^	gint x;			\/* x offset into image *\/$/;"	m	struct:_ImageTile	file:
x	pixbuf-renderer.c	/^	gint x;$/;"	m	struct:_OverlayData	file:
x	pixbuf-renderer.c	/^	gint x;$/;"	m	struct:_QueueData	file:
x	pixbuf-renderer.c	/^	gint x;$/;"	m	struct:_SourceTile	file:
x_offset	pixbuf-renderer.h	/^	gint x_offset;		\/* offset of image start (non-zero when image < window) *\/$/;"	m	struct:_PixbufRenderer
x_scroll	pixbuf-renderer.h	/^	gint x_scroll;		\/* scroll offset of image (into width, height to start drawing) *\/$/;"	m	struct:_PixbufRenderer
y	fullscreen.h	/^	gint y;$/;"	m	struct:_ScreenData
y	image-overlay.c	/^	gint y;$/;"	m	struct:_OSDIcon	file:
y	pan-folder.c	/^	gint y;$/;"	m	struct:_FlowerGroup	file:
y	pan-types.h	/^	gint y;$/;"	m	struct:_PanGrid
y	pan-types.h	/^	gint y;$/;"	m	struct:_PanItem
y	pan-types.h	/^	gint y;$/;"	m	struct:_PanTextAlignment
y	pixbuf-renderer.c	/^	gint y;			\/* y offset into image *\/$/;"	m	struct:_ImageTile	file:
y	pixbuf-renderer.c	/^	gint y;$/;"	m	struct:_OverlayData	file:
y	pixbuf-renderer.c	/^	gint y;$/;"	m	struct:_QueueData	file:
y	pixbuf-renderer.c	/^	gint y;$/;"	m	struct:_SourceTile	file:
y_offset	pixbuf-renderer.h	/^	gint y_offset;$/;"	m	struct:_PixbufRenderer
y_scroll	pixbuf-renderer.h	/^	gint y_scroll;$/;"	m	struct:_PixbufRenderer
yes_all_button	utilops.c	/^	GtkWidget *yes_all_button;$/;"	m	struct:_FileDataMult	file:
zoom	pixbuf-renderer.h	/^	gdouble zoom;		\/* zoom we want (0 is auto) *\/$/;"	m	struct:_PixbufRenderer
zoom	pixbuf-renderer.h	/^	void (* zoom)		(PixbufRenderer *pr, gdouble zoom);$/;"	m	struct:_PixbufRendererClass
zoom_2pass	pixbuf-renderer.h	/^	gboolean zoom_2pass;$/;"	m	struct:_PixbufRenderer
zoom_expand	pixbuf-renderer.h	/^	gboolean zoom_expand;$/;"	m	struct:_PixbufRenderer
zoom_increment	globals.c	/^gint zoom_increment = 5;$/;"	v
zoom_increment_c	preferences.c	/^static gint zoom_increment_c;$/;"	v	file:
zoom_increment_cb	preferences.c	/^static void zoom_increment_cb(GtkWidget *spin, gpointer data)$/;"	f	file:
zoom_max	pixbuf-renderer.h	/^	gdouble zoom_max;$/;"	m	struct:_PixbufRenderer
zoom_min	pixbuf-renderer.h	/^	gdouble zoom_min;$/;"	m	struct:_PixbufRenderer
zoom_mode	globals.c	/^gint zoom_mode = ZOOM_RESET_ORIGINAL;$/;"	v
zoom_mode_c	preferences.c	/^static gint zoom_mode_c;$/;"	v	file:
zoom_mode_fit_cb	preferences.c	/^static void zoom_mode_fit_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
zoom_mode_none_cb	preferences.c	/^static void zoom_mode_none_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
zoom_mode_original_cb	preferences.c	/^static void zoom_mode_original_cb(GtkWidget *widget, gpointer data)$/;"	f	file:
zoom_quality	globals.c	/^gint zoom_quality = (gint)GDK_INTERP_BILINEAR;$/;"	v
zoom_quality	pixbuf-renderer.h	/^	GdkInterpType zoom_quality;$/;"	m	struct:_PixbufRenderer
zoom_quality_c	preferences.c	/^static gint zoom_quality_c;$/;"	v	file:
zoom_to_fit_expands	globals.c	/^gint zoom_to_fit_expands = TRUE;$/;"	v
zoom_to_fit_expands_c	preferences.c	/^static gint zoom_to_fit_expands_c;$/;"	v	file:
